<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en"> <!--<![endif]-->
<head>
    <title>Details &bull; AYTABTU - Discrete Computer &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
        <script type="text/javascript">
        function getCommentIdFromUrl() {
            if(window.location.hash) {
                var hash = window.location.hash.substring(1);
                var commentId = parseInt(hash.replace('j-discussion-', ''));
                if (commentId) {
                    return commentId;
                }
            }
            return null;
        }

        var commentId = getCommentIdFromUrl();
        if (commentId) {
            var url = window.location.href;
            if (url.indexOf('?') > -1) {
                url = url.substring(0, url.indexOf('?'));
            }
            if (url.indexOf('#') > -1) {
                url = url.substring(0, url.indexOf('#'));
            }
            url += '/discussion-' + commentId;
            window.location.href = url;
        }
    </script>
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body>

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fpost%2F20563">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    

        <div class="headline">
            <div class="container">
                

                    

                    <h2>Project Details</h2>
                    <p class="description-title">
                        For <a href="/project/6668">AYTABTU - Discrete Computer</a>
                    </p>
                    <p class="description-summary">After the apocalypse we have to build computers from stuff we can make at home, I.E Transistors, diodes and resistors.</p>
                    <div class="description-metainfo">
                        <span>created by
                            <a href="/hacker/22844-matseng" title="Visit Profile">
                                matseng
                            </a>
                            <span>&bull;</span>
                            a month ago
                        </span>
                    </div>

                

            </div>
        </div>

        <div class="container post-content">
            <p>Log Entries</p><ul><li><a href="https://hackaday.io/project/6668/log/22036-one-alu-slice-tested-with-real-hardware"><strong>One ALU Slice tested with real hardware</strong></a></li><li><strong><a href="https://hackaday.io/project/6668/log/21847-alu-slice-design-done">ALU Slice design done</a></strong></li><li><strong><a href="https://hackaday.io/project/6668/log/21727-feeling-the-pressure">Feeling the pressure</a></strong></li><li><strong><a href="https://hackaday.io/project/6668/log/21463-cpu-emulator">CPU Emulator</a></strong></li><li><strong><a href="https://hackaday.io/project/6668/log/21252-a-4-to-16-decoder-board">A 4-to-16 Decoder board</a></strong></li><li><strong><a href="https://hackaday.io/project/6668/log/21214-assembler-for-this-cpu">Assembler for this CPU</a></strong></li><li><strong><a href="https://hackaday.io/project/6668/log/21059-instruction-set">Instruction set</a></strong></li><li><strong><a href="https://hackaday.io/project/6668/log/21018-uart-rx-timing-board-done">UART RX Timing board done</a></strong></li><li><strong><a href="https://hackaday.io/project/6668/log/21006-bus-viewer-with-leds">Bus Viewer with LEDs</a></strong></li><li><strong><a href="https://hackaday.io/project/6668/log/21004-testing-of-comparator-chain">Testing of comparator-chain</a></strong></li><li><strong><a href="https://hackaday.io/project/6668/log/20870-added-glitch-detector-for-rx">Added glitch detector for RX</a></strong></li><li><strong><a href="https://hackaday.io/project/6668/log/20865-soldering-of-the-octal-d-latch">Soldering of the octal D-latch</a></strong></li><li><strong><a href="https://hackaday.io/project/6668/log/20864-received-some-parts">Received some parts</a></strong></li><li><strong><a href="https://hackaday.io/project/6668/log/20590-ordering-nand-pcbs">Ordering NAND PCBs</a></strong></li><li><a href="https://hackaday.io/project/6668/log/20561-uart-rx"><strong>UART-RX</strong></a></li></ul><p><br></p><p>This is a list of the different modules and sub-modules used in this project so far.</p><hr><h2>Comparator.asc - buffered comparator<br></h2><p>This is a standard comparator made out of a long-tailed differential amplifier followed by an buffer/inverter.<br></p><p><em>Uses 0c 4r 0d 2npn 3pnp</em></p><hr><h2>NAND2.asc - Two input NAND gate made with DTL<br></h2><p>A standard implementation of a DTL (Diode-Transistor Logic) NAND gate. I&apos;m using two level shifter diodes to improve the noise margin as well as a (optional) pulldown to VEE that improves the transistor turn-off time a bit whenever necessary.<br></p><p><em>Uses 0c 3r 4d 1npn 0pnp</em></p><hr><h2>NAND3.asc  - Three input NAND gate made with DTL</h2><p>Exactly the same design as the NAND2.asc except one additional input diode.<br></p><p><em>Uses 0c 3r 5d 1npn 0pnp</em></p><hr><h2>D-LATCH.asc - A transparent D-latch of four nand gates.<br></h2><p>This is a simple implementation of a regular transparent D-latch. Being transparent means that the clock input is level sensitive and not edge triggered, so the data output will follow the input as long as the clock is high.<br></p><p>It is implemented by four 2-input NAND gates.</p><p><em>Uses 0c 12r 16d 4npn 0pnp</em></p><hr><h2>UARTfaker.asc - Fake an incoming serial character</h2><p>LTSpice doesn&apos;t have any provisions for making arbitrary digital stimuli pulse trains, so I just added up a bunch of voltage sources each with a timed pulse to make up a digital pulse train simulating an incoming serial transmission of a single character.<br></p><hr><h2>UART-Rx-Sequencer.asc - Generates timing pulses</h2><p>This generates the timing pulses positioned in the middle of each bit slot of the incoming serial data.  It&apos;s implemented with a constant current generator charging a capacitor to get a linear ramp.  Then an array of eight comparators compares the ramp voltage agains eight different voltages generated by a resistor ladder.  The comparators output a falling edge at each bit slot.<br><br><em>Uses 1c 42r 0d 16npn 26pnp (including the submodules)</em><em></em><br></p><hr><h2>UART-RX.asc - The main module for UART Reception</h2><p>Here all submodules are put together with some glue logic to perform the decoding of an incoming serial (RS232) character and output it as 8 bits in parallel.<br><br>The startbit of the serial data resets and triggers the timing generator in the Sequencer. Then whenever the sequencer determines that the middle of a data timeslot has been reached it lowers the corresponding output which is connected to the CLK input of one of the eight output latches.</p><p>The serial data is also connected to the DATA-input of all latches, so when the CLK goes low on one of them the current data value will be locked.<br><br>This repeats eight times and then the sequencer is stopped by the 8th bit resetting a the start/stop flipflop that originally started the process.<br><br>Since the latches are transparent their outputs will mimic the serial data stream until they have been locked one-by-one.<br></p>
        </div>

        

        

    

    <div class="j-modal-confirmation modal-background"></div>
<div class="j-modal-confirmation modal-content-holder">
    <p class="align-center" id="modal-message"></p>
    <p class="align-center"><a class="medium-button gold-gold-button delete-project-button" id="modal-yes" href="">Yes, delete it</a> <a class="medium-button grey-gold-button cancel-button" id="modal-cancel">Cancel</a> </p>
</div>
    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'S6axamyp-g1FCClTmk4SexU8J6FRxn8p4XiY';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_post&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    
    
    
    

    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbpIGEWjpnPaaIvcAHwzCnxb%2FHLKGUM1bvoOeG5HC0xFU9LJ%2B910rZ72abfN8vxNDn41XRsK%2BvNLzydIft0iwmMulI7CjfWKAELKuUfOMCuUWjmKstkIZy4LyUZZqGjubUq7baOpUEVdpT0W01PyzlwivRvc7EDpLluqPEa2JX%2FBw%3D%3D-0.48.6.js"></script>

</body>
</html>