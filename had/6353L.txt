<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; IoT to Feed the Next Billion &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F6353%2Flogs">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/6353-iot-to-feed-the-next-billion">IoT to Feed the Next Billion</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">An opensource Web platform and cheap sensor hardware solution for the massification of Continuous-flow solution culture (hydroponics) </p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/12269-kestler" title="Visit Profile">Kestler</a><span>&bull;</span>
                
                2 months ago<span>&bull;</span><a href="/project/6353#discussion-list" title="See Comments">0 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/6353-iot-to-feed-the-next-billion">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/6353/logs/sort/newest">Newest</option>
                    <option value="/project/6353/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/6353/log/23382-system-desing">system desing</a></h2>
                            <small class="authorship">13 hours ago  &bull;
                                <a class="gray-link" href="/project/6353/log/23382#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23382"><img src="https://cdn.hackaday.io/images/8549081439828856330.jpg"><p>Overall System Desing:</p><p>-Nodes: ESP8266</p><p>Sensors: Water PH, Water Temperature, Water Salinity, Water Conductivity, Environmental Humidity, Temperature, pressure,  PAR sensor, 3/4 water Flow sensor.</p><p>-Communications: Wifi</p><p>-Message Format: JSON</p><p>Protocol: MQTT</p><p>-Backend</p><p>Python</p><p>Pub/Sub: Mosquitto</p><p>DB: Mongo</p><p>-Front end:</p><p>python, Flask, nginx,</p><p>dashboards: Freeboard.io</p><p><img src="https://cdn.hackaday.io/images/2289231439830114362.jpg"></p><br></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6353/log/23444-nodesesp8266">Nodes:ESP8266</a></h2>
                            <small class="authorship">11 hours ago  &bull;
                                <a class="gray-link" href="/project/6353/log/23444#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23444"><p><img src="https://cdn.hackaday.io/images/1692161439833361209.jpg"></p><p>ESP8266 was selected for node development since it has several advantages over other Dev Paltfoms, like an embedded 32bit 80Mhz CPU RAM 32Kb, DRAM 80Kb, Flash 200Kb (for SDK); as well as  GPIO (upto 16), PWM (3), ADC (one) &#x2022; UART, I2C, SPI<span class="redactor-invisible-space">.</span></p><p><span class="redactor-invisible-space"><img src="https://cdn.hackaday.io/images/189841439835640129.JPG"><span class="redactor-invisible-space">ESP Schematic<br></span></span></p><p><span class="redactor-invisible-space"><span class="redactor-invisible-space"><img src="https://cdn.hackaday.io/images/7250951439835675983.JPG"><span class="redactor-invisible-space">ESP Board<br></span></span></span></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6353/log/23470-backend">Backend</a></h2>
                            <small class="authorship">11 hours ago  &bull;
                                <a class="gray-link" href="/project/6353/log/23470#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23470"><p>Back-end is made  up of a database, mosquitto an opensource  Mqtt Broker (web Sockets enabled) and some phyton code to catch the broker data and storing it in the database, Mongo was selected as database since it can handle JSON structures with out parsing data, witch makes data handling faster. and it also provides us to integrate other non structured  data like General Weather forecasts from Publicly available  APIs and also to serve our data to the community via API of our own. </p><p><img src="https://cdn.hackaday.io/images/6412211439837222695.png"></p><h2>From Mosquitto to MongoDB</h2></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6353/log/23475-frontend">Frontend</a></h2>
                            <small class="authorship">11 hours ago  &bull;
                                <a class="gray-link" href="/project/6353/log/23475#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23475"><p>Freeboard .io is a simple opensource dashboard framework that can be used to simply connect Mosquitti to dashboards and display data in real time.  in a very easy way . all dashboards can be downloaded and exported and imported in JSON format witch can help a Group of disperse persons share dashboards easily with out having to to reconfigure the hole front end server. </p><p>Mosquitto MQTT V 1.14 broker with Websockets support<br></p><p>For that we need to make sure that cmake and uuid/uuid-dev are installed (For example: sudo apt-get install cmake uuid uuid-dev).<br></p><p>Also we need to download the libwesockets library, compile it and install it:</p><pre>cd ~/IoTServer
git clone git://<span class="skimlinks-unlinked">git.libwebsockets.org/libwebsockets</span>
cd libwesockets
mkdir build
cd build
cmake ..
make
sudo make install</pre><p>We then need to download and compile Mosquitto 1.4:</p><pre>cd ~/IoTServer
wget <span class="skimlinks-unlinked"><a href="http://mosquitto.org/files/source/mosquitto-1.4.tar.gz">http://mosquitto.org/files/source/mosquitto-1.4.tar.gz</a></span>
tar xvzf mosquitto-1.4.<span class="skimlinks-unlinked">tar.gz</span>
cd mosquitto-1.4</pre><p>We need to edit the config.mk file and change the option WITH_WEBSOCKETS:=no  to WITH_WEBSOCKETS:=yes<br>And finally:</p><pre>make
sudo make install</pre><p>To activate websocket support we need to edit the <span class="skimlinks-unlinked">mosquitto.conf</span> file located at /etc/mosquitto or some other directory and add the following lines, for example at the end of the file:</p><pre><code>listener 1883

listener 9001 127.0.0.1
protocol websockets</code></pre><p>Then we run it with:</p><pre>pcortex@cloudsrv:~/IoTServer$ mosquitto -c /etc/mosquitto/<span class="skimlinks-unlinked">mosquitto.conf</span></pre><pre>1424790588: mosquitto version 1.4 (build date 2015-02-24 14:38:47+0000) starting 
1424790588: Config loaded from /etc/mosquitto/<span class="skimlinks-unlinked">mosquitto.conf</span>. 
1424790588: Opening ipv4 listen socket on port 1883. 
1424790588: Opening ipv6 listen socket on port 1883. 
1424790588: Opening websockets listen socket on port 9001.
</pre><p>Step 3: Installing <span class="skimlinks-unlinked">freeboard.io</span> dashboard</p><p>We are almost at the end of this long post. For our infrastructure we need now to install the dashboard that will allow us to see the data in the browser.</p><pre>cd ~/IoTServer
git clone <span class="skimlinks-unlinked"><a href="https://github.com/Freeboard/freeboard.git">https://github.com/Freeboard/freeboard.git</a></span></pre><p>For now I&#x2019;ll just use apache to serve the freeboard dashboards that is installed in my server. Because freeboard is not installed on the root web directory we need to make the freeboard available to Apache. The easiest way to do this, as long as Apache has the FollowSymLinks option enabled for the document root, is to create a link to the freeboard directory on the web document root:</p><pre>sudo -s
cd /var/www
ln -s /home/pcortex/IoTServer/freeboard iot</pre><p>And now freeboard is available at the url <a href="http://myserveraddres/iot" rel="nofollow">http://myserveraddres/iot</a>.</p><p>We need now, and finally to add MQTT over Websockets support to freeboard&#x2026; We are almost there. This post<a href="http://jpmens.net/2014/11/12/freeboard-a-versatile-dashboard/" target="_blank">http://jpmens.net/2014/11/12/freeboard-a-versatile-dashboard/   </a>shows how it&#x2019;s done but I&#x2019;ll repeat it here again:</p><p>1st: Download the development version of <span class="skimlinks-unlinked">mqtt.js</span> here: (<a href="http://git.eclipse.org/c/paho/org.eclipse.paho.mqtt.javascript.git/plain/src/mqttws31.js?h=develop" rel="nofollow">http://git.eclipse.org/c/paho/org.eclipse.paho.mqtt.javascript.git/plain/src/mqttws31.js?h=develop</a>) and save it:</p><pre>cd ~/IoTServer/freeboard/plugins
mkdir mqtt
cd mqtt
wget --output-document mqttws31.js <span class="skimlinks-unlinked"><a href="http://git.eclipse.org/c/paho/org.eclipse.paho.mqtt.javascript.git/plain/src/mqttws31.js?h=develop">http://git.eclipse.org/c/paho/org.eclipse.paho.mqtt.javascript.git/plain/src/mqttws31.js?h=develop</a></span></pre><p>We will now download the freeboard MQTT plugin:</p><pre>cd ~/IotServer
git clone <span class="skimlinks-unlinked"><a href="https://github.com/alsm/freeboard-mqtt">https://github.com/alsm/freeboard-mqtt</a></span>
cd freeboard/plugins/mqtt
cp ~/IoTServer/freeboard-mqtt/<span class="skimlinks-unlinked">paho.mqtt.plugin.js</span> .</pre><p>We need to edit the <span class="skimlinks-unlinked">paho.mqtt.plugin.js</span> file and change the line:</p><pre>                &quot;external_scripts&quot; : [
                        &quot;&lt;full address of the paho mqtt javascript client&gt;&quot; 
                ],</pre><p>to</p><pre>               &quot;external_scripts&quot; : [
                        &quot;<code><span class="gi">plugins/mqtt/mqttws31.js</span></code>&quot; 
                ],</pre><p>and finally we need to change the index.html file from:</p><pre>   &lt;scripttype=&quot;text/javascript&quot;&gt;
        head.js(&quot;js/freeboard+plugins.min.js&quot;, 
                // *** Load more plugins here *** 
                function(){</pre><p>to</p><pre>   &lt;scripttype=&quot;text/javascript&quot;&gt;
        head.js(&quot;js/freeboard+plugins.min.js&quot;, 
                &quot;plugins/mqtt/<span class="skimlinks-unlinked">paho.mqtt.plugin.js</span>&quot;, 
                // *** Load more plugins here *** 
                function(){</pre><p>That&#x2019;s it. We are finally ready. All infrastructure is done. We need now just to configure it.</p><p>Final step: Testing it out with mosquitto websockets!:</p><p>Let&#x2019;s start Mosquitto: nohup mosquitto -c /etc/mosquitto/<span class="skimlinks-unlinked">mosquitto.conf</span> &amp;</p><p>And check if the WS protocol is active:</p><pre>netstat -nap | grep 9001

tcp        0      0 0.0.0.0:9001            0.0.0.0:*               LISTEN      18973/mosquitto</pre><p>Setting up <span class="skimlinks-unlinked">Freeboard.io</span>:  It&#x2019;s very important to notice that the Dashboard will run on our browser, making in fact our browser the client. This means that when we configure freeboard, we must take notice of this when filling up the MQTT broker address. It will be localhost if the browser AND the broker runs on the same machine, but for the dashboard to work anywhere we should use the public ip of the machine running the broker:</p><p>Access the <span class="skimlinks-unlinked">freeboard.io</span> dashboard, and select Datasources -&gt; Add. From the dropdown box, we select the Paho MQTT provider.</p><p><a href="https://primalcortex.files.wordpress.com/2015/02/selection_055.png"><img src="https://primalcortex.files.wordpress.com/2015/02/selection_055.png?w=300&amp;h=90" alt="Selection_055"></a></p><p>We need to configure the data source as follows:</p><p><a href="https://primalcortex.files.wordpress.com/2015/02/selection_056.png"><img src="https://primalcortex.files.wordpress.com/2015/02/selection_056.png?w=300&amp;h=239" alt="Selection_056"></a></p><p>Change the MQTT server address to something that makes sense in your config.</p><p>For Mosquitto with websockets enabled, the port is 9001,</p><p>We can now add a Panel and a gauge to see data from the topic /data that we defined on the above datasource.</p><p>So, Add Pane, and on the new Pane select the + (plus) to add a widget. In our case we will select Gauge. We fill out the required info and on the Value field we press Datasource, and select the newly previous created datasource named Dataand because we are not using JSON for data, we just append .msg at the end. So something likedatasource[&#x201C;data&#x201D;].msg should be writen.</p><p><a href="https://primalcortex.files.wordpress.com/2015/02/selection_057.png"><img src="https://primalcortex.files.wordpress.com/2015/02/selection_057.png?w=300&amp;h=131" alt="Selection_057"></a></p><p>We press Save, and that&#x2019;s it.</p><p>We can now publish into the topic, and the dashboard should update:</p><p><a href="https://primalcortex.files.wordpress.com/2015/02/selection_058.png"><img src="https://primalcortex.files.wordpress.com/2015/02/selection_058.png?w=300&amp;h=131" alt="Selection_058"></a></p><p>For example, in this case: mosquitto_pub -t /data -m 23</p><p>That&#x2019;s it. It works fine with Mosquitto 1.4 with websockets enabled and with the Mosca MQTT broker.</p><p>Final setup:</p><p>We should make our dashboard permanent and for doing so we need to save the dashboard locally as a JSON file, and move it to the server running the dashboard to the root directory of freeboard.</p></div>
                            </div>
                        </li>
                    
                </ul>

                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'fzecSCiT-u12MtFZo3bbQ5-a2uRsmULg6JLQ';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>