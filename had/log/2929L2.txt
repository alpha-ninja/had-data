<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; R&#39;lieh - Aquarium/ closed ecosystem management  &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F2929%2Flogs%3Fpage%3D2">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/2929-rlieh-aquarium-closed-ecosystem-management">R&#39;lieh - Aquarium/ closed ecosystem management </a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">An automated and connected aquarium management system</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/2496-sky99" title="Visit Profile">Sky99</a><span>&bull;</span>
                
                a year ago<span>&bull;</span><a href="/project/2929#discussion-list" title="See Comments">4 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/2929-rlieh-aquarium-closed-ecosystem-management">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/2929/logs/sort/newest">Newest</option>
                    <option value="/project/2929/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/2929/log/17906-code-optimization">Code optimization</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/2929/log/17906#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17906"><p>I had issues with the code. it turns out that i was using too much ram on the *duino..</p><p>Indeed, each string is counted as global variable, and space is sparse on an Atmega328p : you have 2048 Bytes of RAM. The device is meant to answer to simple commands (such as getWaterTemp), and returns XML like strings. Those strings among other things was taking too much space. Furthermore, writing Serial.println("blablabla") two times takes twice as many ram, the system doesn't free the ram after the first call.</p><p>I hence had to clean the code. In order to do that, i declared strings containing all the text that was repeated more than once, or that is likely to be so in the future. I also compacted messages, reducing all unnecessarily long error messages.</p><p>All those changes reduced the RAM taken from more than 2048 Bytes to 1356 Bytes.</p><p>With this change, all bugs have disappeared, and now all functions are properly working. One good side effect is that messages are coherent : when something is on, the status will be reported as "ON" everywhere, rather than "On", "on", or "ON" in various locations.</p><p>As of now, the system controls two relays (on, off, and returning status of the relay), two TIP120 transistors (on, off, set to PWM level, and status), one of which is used to control the lighting described in a previous post. The second one will be used to cool the water (as of now, fans blowing towards the surface, but later on maybe a pelletier chilling the water). Two DS18B20 temperature probes are also accessible (one for air, another for water).</p><p><span></span>The cooling is set to turn on when a threshold temperature is reached, and shuts down when another lower temperature is obtained. I used two values (24 for low, 24.5 for high) so that the cooling doesn't turns on and off all the time around the target value.</p><p>Multiple functions are also available for lighting, but i already covered that in a previous post. It is also possible to set a number of variables trough the serial commands, such as low and high temperature thresholds, lights fade time, etc.</p><p>Every function described here can be activated by serial, but the state of each subsystem can be obtained in the same way at any time.</p><p>The code has been written entirely without delays, so the device never "hangs" waiting for something. This makes the board quite responsive.</p><p>In order to improve this aspect, i did set the Serial.timeout to 100ms, wich is enough at 9600 bauds fo all commands. Thus, when a command is sent, it is executed in 100ms, and a response is sent after this delay. By default, the timeout is set to 1000ms.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/2929/log/17995-saving-variables-in-eeprom">Saving variables in EEPROM</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/2929/log/17995#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17995"><p>The cooling system is set to turn on at 24.5°C and off at 24°C. However i made it so that it is possible to change this value. By sending the command "setLowTemp1:X", the low temperature will be set to X, and there is a command to set the high temperature. However, without further modifications, the values would be lost after a power loss. In order to prevent that, i decided to store the values in the Atmega328p. A way to save values in the chip is to write them in the EEPROM.</p><p>For those unfamiliar with this concept, EEPROM stands for <b>E</b>lectrically <b>E</b>rasable <b>P</b>rogrammable <b>R</b>ead-<b>O</b>nly <b>M</b>emory. I invite you to <a href="http://en.wikipedia.org/wiki/EEPROM">read more on the subject of EEPROM on this wikipedia link</a>.</p><p>On the ATMega chips, there is some EEPROM memory, and on the ATMega328p, there is 1024 Bytes of EEPROM (<a href="http://playground.arduino.cc/Code/EEPROM-Flash">http://playground.arduino.cc/Code/EEPROM-Flash</a>).</p><p>By default, in order to access the EEPROM, one would use <a href="http://www.arduino.cc/en/Reference/EEPROM">the EEPROM.h library described on Arduino.cc</a>.</p><p>However, it only supports reading and writing int values from 0 to 255. Since i had to store floats, and didn't want to fiddle with this, i used the <a href="http://thijs.elenbaas.net/2012/07/extended-eeprom-library-for-arduino/">EEPROMex.h library</a>. It is meant to be used in the same way as the basic library (code written for EEPROM.h works with this lib), but extends it by adding read and write functions for many types, including floats.</p><p>I thus added the following section in my code : </p><pre class="hljs cpp"><span class="hljs-keyword">if</span>(cmd  ==<span class="hljs-string">"setLowTemp1"</span>)
    {
      <span class="hljs-keyword">if</span>(param0f!=-<span class="hljs-number">1.0</span>)
      {
        lowTemp1=param0f;
        EEPROM.updateFloat(lowTemp1Address,lowTemp1);
        printCmdResultXML(<span class="hljs-number">0</span>, <span class="hljs-keyword">true</span>, lowTemp1Tag+<span class="hljs-string">" set"</span>);
      }
      <span class="hljs-keyword">else</span>
      {
        printCmdResultXML(<span class="hljs-number">1</span>, <span class="hljs-keyword">true</span>, missingArgumentString+<span class="hljs-string">":"</span>+lowTemp1Tag);
      }
    }
    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cmd  ==<span class="hljs-string">"getLowTemp1"</span>)
    {
      Serial.<span class="hljs-keyword">print</span>(openTag1+lowTemp1Tag+closingTag);
      Serial.<span class="hljs-keyword">print</span>(lowTemp1);
      Serial.println(openTag2+lowTemp1Tag+closingTag);
    }</pre>His section handles the commands related to the low temperature (the second only shows it, but the first one is used to store it in the EEPROM. I used the update function rather than write so that if it is unchanged, it won't actually write it, preserving the memory. Indeed, it has 100 000 writes per cell, so it's better not to overuse it in vain.<p>In the setup function of the ATMega328p, i use this to retrieve the values : </p><pre class="hljs cpp">  lowTemp1=EEPROM.readFloat(lowTemp1Address); 
  highTemp1=EEPROM.readFloat(highTemp1Address);</pre>With this, i can now save user specified values for some settings.<p>I will probably add the possibility of storing the fading time int the EEPROM as well.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/2929/log/18326-arduino-serial-reset">Arduino serial reset</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/2929/log/18326#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-18326"><p>I encountered something that caused me trouble today. I set up the system for real world use, but each time i was sending a command to the arduino, i was having the relays turning of prior to everything.</p><p>Here is a quick test code : </p><pre class="hljs perl"><span class="hljs-comment">#!/usr/bin/python</span>
from <span class="hljs-keyword">time</span> import <span class="hljs-keyword">sleep</span>
import serial

<span class="hljs-keyword">print</span>(<span class="hljs-string">"opening serial"</span>)

ser = serial.Serial(<span class="hljs-string">"/dev/ttyUSB0"</span>, <span class="hljs-number">9600</span>)
waitTime1=<span class="hljs-number">0</span>.<span class="hljs-number">2</span>

<span class="hljs-keyword">print</span> (<span class="hljs-string">"waiting"</span>)
<span class="hljs-keyword">sleep</span>(waitTime1)
<span class="hljs-keyword">print</span>(<span class="hljs-string">"sending cmd"</span>)
ser.<span class="hljs-keyword">write</span>(<span class="hljs-string">"R1Off"</span>)
<span class="hljs-keyword">sleep</span>(waitTime1)
ser.<span class="hljs-keyword">write</span>(<span class="hljs-string">"R2Off"</span>)
<span class="hljs-keyword">sleep</span>(waitTime1)
ser.<span class="hljs-keyword">close</span>()
<span class="hljs-keyword">sleep</span>(waitTime1)</pre>This one turns off the relays, and there is another file for turning them on.<p>The problem was that on connect, all relays shut down. I figured out that when a serial connection is established to the arduino, it resets. Hence the shutdown of the relays. in order to handle that, the solution is to put a capacitor between the vcc line and the reset pin :</p><p><a href="http://forum.arduino.cc/index.php/topic,28723.0.html">http://forum.arduino.cc/index.php/topic,28723.0.html</a><br></p><p>I don't yet know the minimal value that can be used, but it works with 220µF.</p><p>Thanks to this, i was able to have the commands working without resetting anything. I thus don't have to have a daemon connected to the arduino handling requests from other programs.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/2929/log/18478-code">Code</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/2929/log/18478#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-18478"><p>A quick post to provide a link to the latest available code : </p><p><a href="https://github.com/sarinkhan/Rlieh/tree/master/raspberryPi">https://github.com/sarinkhan/Rlieh/tree/master/raspberryPi</a><br></p><p>This link contains the code that runs on the raspberry pi. However, this is mostly just python code, and the essential aquarium functions use nothing specific to the pi. The only specific files that are written for the raspi are the ones that prints stuff onto a 20*4 lcd screen. the rest is compatible with any linux box.</p><p>The www folder contains php files to provide a simple way to control it over the network (be warned, it's extremely basic code, and it will really need to be fleshed out in order to obtain a nice interface, as of now it's just a way to call the python scripts through an URL via a browser).</p><p><a href="https://github.com/sarinkhan/Rlieh/tree/master/arduino">https://github.com/sarinkhan/Rlieh/tree/master/arduino</a></p><p>The arduino folder contains rlieh3.ino, the code that has to be uploaded onto a whateverduino (arduino uno, leonardo, mega, etc... basically anything with a Atmega 328p, a 32u4 or anything bigger). </p><p>Once hooked with sensors and stuff, it will be able to control various organs. I'll soon put instructions for hooking up. As of now, some instructions can be found on the old fritzing sketches, and pins must be figured by reading the top of the code (everything is specified there, with comments), or even changed in the code.</p></div>
                            </div>
                        </li>
                    
                </ul>

                
                <div class="pagination">
                    
                    <a href="?page=1" class="grey-gold-button prev-button show">Previous</a>
                    
                    
                </div>
                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'eq5Oui1b-eRBW5hyxljD_4dzLX-hBkVHBqk4';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>