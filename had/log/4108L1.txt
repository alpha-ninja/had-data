<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; PIC MCUs Based Homebrew Computer &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F4108%2Flogs%3Fpage%3D1">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/4108-pic-mcus-based-homebrew-computer">PIC MCUs Based Homebrew Computer</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">The goal: to make a working computer, with a keyboard input, LCD Display output, a compiler (asm) and to have fun all the way. 
NEWBIE ALERT</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/47827-david-kropivek" title="Visit Profile">David Kropiv≈°ek</a><span>&bull;</span>
                
                7 months ago<span>&bull;</span><a href="/project/4108#discussion-list" title="See Comments">5 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/4108-pic-mcus-based-homebrew-computer">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/4108/logs/sort/newest">Newest</option>
                    <option value="/project/4108/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/4108/log/13471-tdp-data-bus">TDP Data-bus</a></h2>
                            <small class="authorship">7 months ago  &bull;
                                <a class="gray-link" href="/project/4108/log/13471#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-13471"><p><strong>TDP databus</strong> is a custom developed protocol (tripping data protocol), that uses 4 data lines for a stabile communication. These lines are:</p><ol><li>S_DO       (Data out)</li><li>S_DI         (Data in)</li><li>S_OKO     (Data ok out)</li><li>S_OKI        (Data  ok in)</li></ol><p style="margin-left: 20px;">Note that, a master and slave are connected in the following way: (cross-over)</p><p><strong>MASTER =                              SLAVE</strong></p><p>S_DO                   =                 S_DI</p><p>S_DI                       =                   S_DO</p><p>S_OKO                  =                    S_OKI</p><p>S_OKI                       =                   S_OKO</p><p>The following image represents how a Master and a Slave are connected to a Data Bus. The purple line connecting Master and Slave is a selection line, that selects which Slave reads/writes data (in case of more than one slave).</p><p>Every communication is initiated by the Master.</p><p>The protocol is not time sensitive, since it uses S_OKO and S_OKI pin to drive data transfer. A new bit will not be sent until S_OKI data says that the previous bit was successfully received.</p><p><img src="https://cdn.hackaday.io/images/4145471422521721202.png"></p><p>HERE's the code, if it can help you in any way, you are free to use it:</p><p><span></span><br></p><pre class="hljs cpp">/*
This program <span class="hljs-keyword">is</span> free software: you can redistribute it <span class="hljs-keyword">and</span>/<span class="hljs-keyword">or</span> modify
it under the terms of the GNU General Public License <span class="hljs-keyword">as</span> published by
the Free Software Foundation, either version <span class="hljs-number">3</span> of the License, <span class="hljs-keyword">or</span>
(at your option) any later version.

This program <span class="hljs-keyword">is</span> distributed <span class="hljs-keyword">in</span> the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY <span class="hljs-keyword">or</span> FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License <span class="hljs-keyword">for</span> more details.

You should have received a copy of the GNU General Public License
along <span class="hljs-keyword">with</span> this program.  If <span class="hljs-keyword">not</span>, see &lt;<a href="http://www.gnu.org/licenses/&amp;gt" target="_blank">http://www.gnu.org/licenses/&amp;gt</a>;.

**********************************************************************
<span class="hljs-comment">#include &lt;16F627A.h&gt;</span>
<span class="hljs-comment">#device ADC=16</span>
<span class="hljs-comment">#FUSES NOWDT                                           </span>
<span class="hljs-comment">#FUSES NOMCLR                                       </span>
<span class="hljs-comment">#FUSES NOBROWNOUT                            </span>
<span class="hljs-comment">#FUSES NOLVP                                           </span>
<span class="hljs-comment">#FUSES NOCPD, NOPROTECT, NOPUT, INTRC_IO</span>

<span class="hljs-comment">#use delay(internal=4MHz)</span>
<span class="hljs-comment">#use STANDARD_IO( A,B )</span>

                                      
<span class="hljs-comment">#define S_OKO PIN_A0</span>
<span class="hljs-comment">#define S_OKI PIN_A7   </span>
<span class="hljs-comment">#define S_DI PIN_A6</span>
<span class="hljs-comment">#define S_DO PIN_B7</span>

int16 precalc_val[<span class="hljs-number">15</span>] = { <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">8</span>, <span class="hljs-number">16</span>, <span class="hljs-number">32</span>, <span class="hljs-number">64</span>, <span class="hljs-number">128</span>, <span class="hljs-number">256</span>, <span class="hljs-number">512</span>, <span class="hljs-number">1024</span>, <span class="hljs-number">2048</span>, <span class="hljs-number">4096</span>, <span class="hljs-number">8192</span>, <span class="hljs-number">16384</span> };

void ___outbit(int1 val)
{
   output_high(S_OKO);
   <span class="hljs-keyword">if</span>(val == <span class="hljs-number">1</span>)
      output_high(S_DO);
   <span class="hljs-keyword">while</span>(!input(S_OKI));
   output_low(S_OKO);
   <span class="hljs-keyword">while</span>(!input(S_OKI));
   <span class="hljs-keyword">while</span>(input(S_OKI));
   output_low(S_DO);
}

int1 ___inbit()
{
   int1 r = <span class="hljs-number">0</span>;
   <span class="hljs-keyword">if</span>(!input(S_OKI))
      <span class="hljs-keyword">while</span>(!input(S_OKI));
   
   delay_us(<span class="hljs-number">100</span>);
   output_high(S_OKO);

   
   <span class="hljs-keyword">while</span>(input(S_OKI));
   
   <span class="hljs-keyword">if</span>(input(S_DI))
      r = <span class="hljs-number">1</span>;
      
   delay_us(<span class="hljs-number">100</span>);
   output_low(S_OKO);
   delay_us(<span class="hljs-number">100</span>);
   <span class="hljs-keyword">return</span> r;
}

void TDP_init()
{
   output_low(S_OKO);
   output_low(S_DO);
   input(S_DI);
   input(S_OKI);
}

void TDP_Write(int16 data)
{
   int16 k, c;
   <span class="hljs-keyword">for</span> (c = <span class="hljs-number">14</span>; c &gt;= <span class="hljs-number">0</span>; c--)
   {
      k = data &gt;&gt; c;
 
      <span class="hljs-keyword">if</span> (k &amp; <span class="hljs-number">1</span>)
          ___outbit(<span class="hljs-number">0x01</span>);
      <span class="hljs-keyword">else</span>
          ___outbit(<span class="hljs-number">0x00</span>);
      
      <span class="hljs-keyword">if</span> (c == <span class="hljs-number">0</span>)
         <span class="hljs-keyword">break</span>;
   }
}

int16 TDP_Read()
{
   int16 data = <span class="hljs-number">0</span>;
   int1 val = <span class="hljs-number">0</span>;
   
   <span class="hljs-keyword">for</span>(int i = <span class="hljs-number">14</span>; i&gt;= <span class="hljs-number">0</span>; i--)
   {
      val = ___inbit();
      <span class="hljs-keyword">if</span>(val == <span class="hljs-number">1</span>)
         data += precalc_val[i];
      <span class="hljs-keyword">if</span> (i == <span class="hljs-number">0</span>)
         <span class="hljs-keyword">break</span>;
   }

   <span class="hljs-keyword">return</span> data;
}

</pre><br></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4108/log/13490-s-ram-module">S-RAM module</a></h2>
                            <small class="authorship">7 months ago  &bull;
                                <a class="gray-link" href="/project/4108/log/13490#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-13490"><p>Tomorrow, after I get home from work, I'm going to pick up some 1N4148 diodes. I need at least 30 of them, for my keyboard matrix, but I better stack up a bit.</p><p>Tomorrow, or the day after, I will start implementing S-RAM module. I have a CS18LV02563P low power SRAM. Basically it's a 256K RAM IC, made by Chiplus. I hope I will manage it, or I will have to stick to my eeprom acting as a ram (lower speed). EEPROM is 24LC256 Serial ROM, which will definetly stay, since I want to have some form of permanent data storage for my OS (which will be written using ASM compiler embeded in my computer's firmware).</p><p><img src="https://cdn.hackaday.io/images/4668791422569451368.jpg"></p><p>The plan is to use a different board (a smaller one) for implementing this Random Access Memory, since I want it thurley tested before connecting it with the main board, which will be done through a slot of some sort, so that if I fail at implementing it, I don't mess up my main board too much.</p><p>So if everything will go as planned, I will have a S-RAM module done by monday. <br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4108/log/13516-keyboard-matrix">Keyboard-Matrix</a></h2>
                            <small class="authorship">7 months ago  &bull;
                                <a class="gray-link" href="/project/4108/log/13516#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-13516"><p>So, like I stated in my last post, I went to get 50 1n4148 diodes - 3.00‚Ç¨. I already feel bad for not taking more of them. I am going to use most of them for my keyboard matrix of 30 buttons, which will be the input of my computer (it probably won't be the only one, since it would be cool to use the computer for processing  other types of input data also (sensors maybe).</p><p><img src="https://cdn.hackaday.io/images/4688291422621911201.gif"></p><p><img src="https://cdn.hackaday.io/images/7052421422621924098.jpg"></p><table><tbody><tr><td>Bellow, you can see a few images of how the keyboard looks so far.</td></tr></tbody></table><p><span></span><br></p><p><img style="width: 335px; height: 201.077px;" src="https://cdn.hackaday.io/images/1484421422621132273.jpg"><br></p><p><img style="width: 338px; height: 202.8px;" src="https://cdn.hackaday.io/images/7534601422621161697.jpg"></p><p><img style="width: 342px; height: 205.003px;" src="https://cdn.hackaday.io/images/4802701422621314929.jpg"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4108/log/13531-keyboard-matrix-reloaded">Keyboard Matrix Reloaded</a></h2>
                            <small class="authorship">7 months ago  &bull;
                                <a class="gray-link" href="/project/4108/log/13531#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-13531"><p>A quick update on my Keyboard Matrix. </p><p>The strictly hardware part (not yet connected to mcu) has been completed. </p><p><img style="width: 364px; height: 218.269px;" src="https://cdn.hackaday.io/images/8026121422646441884.jpg"></p><p><img style="width: 407px; height: 244.054px;" src="https://cdn.hackaday.io/images/766001422646506942.jpg"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4108/log/13555-sram-adventure">SRAM adventure</a></h2>
                            <small class="authorship">7 months ago  &bull;
                                <a class="gray-link" href="/project/4108/log/13555#discussion-list">
                                    2 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-13555"><p>I started building my SRAM (256K) module. I hope it will work. Already have an idea how it will be mounted to the main board.</p><p>More to follow.</p><p><br><img src="https://cdn.hackaday.io/images/4364601422705570033.jpg"></p><p>[UPDATE] later the same day.<br></p><p><img src="https://cdn.hackaday.io/images/7592151422739739200.jpg"></p><p>These green pins with lovely green hats (I don't know how they are called in english), will be used to mount the module on the main board. If the module will work that is.</p><p>[UPDATE] @ 1.feb.</p><p>So, I did some testing regarding communication between cpu mcu and both mcu controllers for my ram. It worked. Could not yet test the ram itself though. </p><p><img src="https://cdn.hackaday.io/images/9497581422790076668.jpg"></p><p>Red wires are address lines, yellow wires are Data in / Data out lines and three white wires are ram control lines.<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4108/log/13627-sram-alpha-test">SRAM Alpha Test</a></h2>
                            <small class="authorship">7 months ago  &bull;
                                <a class="gray-link" href="/project/4108/log/13627#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-13627"><p>[UPDATE] @ 3. feb. 2015</p><p>My SRAM is wire connected with two parts of IDE cable to the main board. It is not yet mounted on it, but is now connected to the databus, so that I will be able to test it more easily (displaying the results on LCD display). </p><p>The hardware part of the address control is also completed, tomorrow I'll try to complete the software part and then that should be it. Unless something goes wrong, which I hope it won't.</p><p>I need to order some more components and it normaly takes about a week for them to arrive. After I finish my SRAM module (with a success, I hope), (should be in two days max), I will continue to work on my keyboard matrix.</p><p>But like I said, I will require some more components. Meanwhile, while I wait for the components, I'll be updating this project with some theoretical material.</p><hr><p>I've managed to finish my SRAM module today. Well, to be honest it's not 100% done yet, since I assembled it just enough so that I can test the SRAM chip to see if it will hold data and things  like that. </p><p>But the test was SUCCESSFUL! (Thank you Saint Dominic Savio, my dear companion)</p><p><img src="https://cdn.hackaday.io/images/8826751422908342336.jpg"></p><p>As you can probably see, the middle chip is missing. That's the missing part, the easiest part I should say (setting an address of a ram). I'm gonna build that tomorrow. For now, there was just one address 0x00)</p><p>I've had some bad time after I first wired it up and tested it. I couldn't understand why it wasn't working (the whole computer froze). The most high I experience in the last few days (while building it), was when I saw, that I forgot to ground the mcu that you can see in the picture. That was the reason for freezing and not working.</p><p>The most beautiful thing was to see a little LED to glow.  Indicating that my test data has been written succesfully, read successfully and the response data comparison prooved that.</p><p><img src="https://cdn.hackaday.io/images/4215171422908677996.jpg"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4108/log/13691-sram-completed">SRAM Completed</a></h2>
                            <small class="authorship">7 months ago  &bull;
                                <a class="gray-link" href="/project/4108/log/13691#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-13691"><p>The SRAM part of the project is now complete and fully wired with the motherboard. It is not yet mounted on it though. Addressing of RAM works, writing data works, reading data works. :) Makes me smile.</p><p><img src="https://cdn.hackaday.io/images/3316541423069801703.jpg"></p><p>Above is the finished SRAM module. It uses Chiplus 256K S-RAM IC and two PIC16F723A mcus to drive it. Both controller mcus are using mym custom made TDP protocol for communication with cpu mcu.</p><p><img src="https://cdn.hackaday.io/images/2442271423070009538.jpg">and the bottom side.</p><p>What follows? Well, the keyboard would come in handy. So I guess I will resume with that. Tomorrow I must order some -much needed- additional components. </p><p>Have a wonderful day everybody.<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4108/log/13757-sram-problem">SRAM - problem</a></h2>
                            <small class="authorship">6 months ago  &bull;
                                <a class="gray-link" href="/project/4108/log/13757#discussion-list">
                                    7 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-13757"><p>So, today I ran into a problem with my SRAM. It works fine, just not always. For some reason, everything freezes on times, when accessing ram.</p><p>Here's what I mean.</p><p>I have 0123456789 written in my ram. I read it 5 times in a row and print it on screen.</p><p>This is when everything goes right:</p><p><img src="https://cdn.hackaday.io/images/8352401423266558627.jpg"></p><p>This is when it *almost goes right*:</p><p>(it never outputs the last 8 and 9)<br></p><p><img src="https://cdn.hackaday.io/images/4724381423266600966.jpg"></p><p>And this is just an utter failure:</p><p><img src="https://cdn.hackaday.io/images/9455361423266662543.jpg"></p><p>I've spent my whole day debuging it. I really want to have the SRAM module a part of my computer. But it seems that it just may happen, I will have to use eeprom instead,.. after all. </p><p>This is how it works with EEPROM instead of RAM.<br></p><iframe src="https://www.youtube.com/embed/_2w6Bf6zk00" allowfullscreen="" frameborder="0" height="315" width="420"></iframe><p>Any ideas or tips? <br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4108/log/13813-the-keyboard-matrix">The Keyboard Matrix</a></h2>
                            <small class="authorship">6 months ago  &bull;
                                <a class="gray-link" href="/project/4108/log/13813#discussion-list">
                                    9 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-13813"><p>My keyboard matrix is completed. </p><p><strong>What happens if I press multiple buttons at once?</strong> - It registers only the one that was pressed first</p><p><strong>What happens if I hold a button down for an hour?</strong> - Nothing, until you release it. It could be easily customised to act as a normal keyboard would, but It's not neccessery, so I will probably not implement that.</p><p><strong>What about ghosting?</strong> - 33 diodes prevent that from happening. One for each button and 3 for every row selector pin.</p><p>In the video  I explain a sad story about my SRAM and then later in the video I demonstrate how my keyboard matrix works.</p><p><span></span>The quality of the video is pretty bad. Sorry about that.<br></p><iframe style="width: 500px; height: 281px;" src="//www.youtube.com/embed/eJduPyKzuvo" allowfullscreen="" frameborder="0" height="281" width="500"></iframe></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4108/log/13980-general-project-update">General project update</a></h2>
                            <small class="authorship">6 months ago  &bull;
                                <a class="gray-link" href="/project/4108/log/13980#discussion-list">
                                    2 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-13980"><p>Hello, dear hackaday!</p><p>I've had a lot of problems with my project, actually with my data transfer protocol. It was not the problom with the protocol itself, but something was causing it to not work properly. With help of another hackada member,  I managed to solve the problem. It was a data cable problem. The only thing that was also in common with the SRAM module and not with any other module. Hmm, maybe I should give my SRAM another try. So, I would like to thank esot.eric.wazhung for all the help and tips that lead me to solution.</p><p>I demonstrate my project in the video bellow.</p><p>And always remember:</p><p><img src="https://cdn.hackaday.io/images/5591201423698490017.jpg"></p><p>Tomorrow, I will let you know what are my next goals for my project.</p><iframe src="https://www.youtube.com/embed/Vu-60yK28h0" allowfullscreen="" frameborder="0" height="315" width="420"></iframe></div>
                            </div>
                        </li>
                    
                </ul>

                
                <div class="pagination">
                    
                    
                    <a href="?page=2" class="grey-gold-button next-button show">Next</a>
                    
                </div>
                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'ZZjp1TM6-CUrcaNSPnYyZQMmCMbiwyce49DM';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>