<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; Periodic Table of Motion &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F6682%2Flogs%3Fpage%3D1">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/6682-periodic-table-of-motion">Periodic Table of Motion</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">An open platform for creating installations to show various types of motion. Useful for museums and schools. Composed of individual cells.</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/4391-bob-baddeley" title="Visit Profile">bob baddeley</a><span>&bull;</span>
                
                a month ago<span>&bull;</span><a href="/project/6682#discussion-list" title="See Comments">0 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/6682-periodic-table-of-motion">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/6682/logs/sort/newest">Newest</option>
                    <option value="/project/6682/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/6682/log/20675-first-electronics-test-enclosure-prototype">First Electronics Test + Enclosure Prototype</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/6682/log/20675#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20675"><p>I quickly threw together a sample enclosure for a cell to see if the size was about right for the installation and for usability. I settled on 9"x9"x3", which allows ample room for a large button, lengthy description, and a sizable area for the actual mechanics. It was a big hit with the museum curator, who loved the size and used it to block off the area in the museum where it will go to get a sense of how big it will be and what it will look like.</p><iframe width="560" height="315" src="https://www.youtube.com/embed/qKjU1tFinco?rel=0" frameborder="0" allowfullscreen=""></iframe><p>I also etched the first revision of the PCB to test the motor controller, ATTiny, mosfets, power supply, and capacitive touch. I learned quite a bit and have some good changes in mind for the next revision.</p><p><img src="https://cdn.hackaday.io/images/840061436394893818.JPG"></p><ul><li>Capacitive touch works great, through acrylic with no problems.</li><li>ATTiny works great. Easy to program.</li><li>Limit switches work great. I'm using a single pin and checking the ADC value with different resistors for each switch, so I can tell which one was pressed with only a single pin. The next revision will allow up to 4 switches.</li><li>MOSFETs work great.</li><li>Motor controller works, BUT the motors require a huge current to start, and it's browning out my electronics. I've decided that rather than a single supply and a regulator, I'll have a +5 and +12 bus and no regulator on board. The supply will be done with an ATX supply, and the higher current will be necessary because I imagine a common use will be little kids pressing every button at once.</li><li>The power plug doesn't make sense any more.</li><li>I am adding the ability to do servos as well as motors. Not simultaneous, but in case a cell needs a servo instead of a DC motor, this should work.</li><li>I'm switching a MOSFET from 5V to 12V. This one will be dedicated to an LED strip which indicates a cell is on. I couldn't find 5V LED strips.</li></ul></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6682/log/21574-electronics-verification">Electronics Verification</a></h2>
                            <small class="authorship">24 days ago  &bull;
                                <a class="gray-link" href="/project/6682/log/21574#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21574"><p>PCBs arrived this week from china (I use <a href="http://smart-prototyping.com">http://smart-prototyping.com</a> for my cheap PCBs). I was able to get all the PCBs I need for the full project (I needed 60) for $25 + $20 shipping, so under $1 per PCB. Not bad for prototyping! At that price, it made sense for me to just order the full number and hope they worked on the first try instead of ordering a couple and then ordering a second batch. Anyway, they arrived, so I spent the day doing some hardware validation.</p><p>To me, validation means slowly hooking up each part of the circuit and testing it. In this case, I also wrote an arduino sketch that focused on each specific section. Unfortunately, after my day of testing I had 2 errors. Fortunately, one of the errors was solved by putting a SMT resistor in between two adjacent .1&quot; pins (pro tip 0603 resistors fit perfectly between .1&quot; pads), and the other error was my servos had a different pinout than I expected, but I was able to swap the servo pins in the connector and the problem was solved. So no rework necessary, and no need to do a new board revision. Woo!</p><p>Here&apos;s what the new PCB looks like:<span></span></p><p><img src="https://cdn.hackaday.io/images/6249951437926272690.JPG"></p><p>A quick walkthrough of the schematic:</p><p><img src="https://cdn.hackaday.io/images/9019271437926382077.png"></p><p>First there&apos;s the microcontroller. An ATTINY44A-PU. Next is the cap touch sensor, which is just a pin. This was the mistake I made. There should also be a large (&gt;1M) resistor between pins 6 and 7, which isn&apos;t captured on the schematic. Oops. Next is the programming header. There are two servos as well. For some reason the servos I ended up with had the control and +5 swapped. Not a big deal. Next we have &quot;other control&quot; which switches a +5V load. It can be used for whatever. There&apos;s also an LED Strip control, which is used to indicate when the cell is on. The Power Rail connectors are for attaching the power bus, and there are two for convenience. Only one is necessary. Then there&apos;s the limit switches, which are 5 connectors to allow for 5 buttons. The concept is a simple voltage divider, and the values I chose (which aren&apos;t labeled), are 2.2k for R1, then 0, 330, 620, 1k, and 2.2k. This gives me easily distinguishable ADC readings. Finally there&apos;s the motor controller, a L293D. This takes four control signals, which is a bunch for such a tiny microcontroller. Notice that signals Control1 and Control2 are duplicated with the servos. This means that you can&apos;t simultaneously have M1 and the servos. That was a limitation I was willing to accept in order to have the PCB be flexible enough to use servos and/or motors. But really, any mechanical system that needs more than a motor and two servos is probably too complex for the table. So options are: 2 motors and no servos, 2 servos and 1 motor, or 2 servos and leave L293D unpopulated.</p><p>Here&apos;s a pic of the back of the board. This is where I had to add the extra resistor for the cap sense. See how snugly it fits? Pretty sweet.</p><p><img src="https://cdn.hackaday.io/images/9851611437926858188.JPG"></p><p>I populated two PCBs during the hardware validation testing. This is so that I know if something doesn&apos;t work I can see if it&apos;s a soldering problem or a real hardware problem. In this case it also allowed me to test motor vs servo functionality.</p><p>Now that testing is complete, I&apos;m happy to report that everything works, there are no showstoppers, I have enough PCBs to make all the cells I need, and I have working sketches for each part of the hardware, which will be helpful when developing the individual cells, as I&apos;ll have discrete working bits that I can drop in.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6682/log/23168-budget-problems">Budget Problems</a></h2>
                            <small class="authorship">2 days ago  &bull;
                                <a class="gray-link" href="/project/6682/log/23168#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23168"><p>Museum exhibits are expensive. Their cost is measured by the square foot, and can easily range from $100-$1000 per square foot. That means a single exhibit can easily cost in the tens of thousands of dollars.</p><p>One of the goals of this project is to make an extensible exhibit that is flexible enough to fit within any budget and capable of growing as funds are acquired. Because it&apos;s open source, it should require less engineering, and should be easier to build and maintain.</p><p>That said, material costs for this project are not insignificant. The wall mount will be a couple hundred dollars, and each cell is roughly $50. For the museum that this exhibit will go in, we have room for 60 cells. That&apos;s $3k just for the cells, and a few hundred more gets us a decent chunk of change. Unfortunately, the museum told us we had a budget of $1200. Yes, this is ridiculously low. There&apos;s no way a museum exhibit can cost that little and still look good.</p><p>Fortunately, we don&apos;t have to populate the whole thing! We can build only a few cells and drop those in, and as we get money we can add more cells and it won&apos;t hurt the look of the table at all. What&apos;s more, we could do sponsorships! We&apos;re planning to do a bit of a fundraiser, and call on the local construction and engineering firms to chip in $100 per cell to sponsor one. It&apos;s a tiny amount for them, it covers costs, and they get to sponsor something in a museum. Win win.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6682/log/23169-building-the-cell-enclosure">Building the cell enclosure</a></h2>
                            <small class="authorship">2 days ago  &bull;
                                <a class="gray-link" href="/project/6682/log/23169#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23169"><p>Designing the cell enclosure was little more than a box, but it needed some specific features. First, it&apos;s constrained to 9&quot; square and 3&quot; depth. Second, we needed space for the cell description. This we arbitrarily set to 3.5&quot;. With those specs, I whipped up a design, made it into DXF, and cut it on the laser out of acrylic.</p><p><img src="https://cdn.hackaday.io/images/7186671439767733190.JPG"></p><p>Then I used acrylic adhesive to assemble, and spray painted it black so it would look cool and cover up fingerprints. I used some spacers screwed into the acrylic to attach the PCB.</p><p>And BTW, this PCB is awesome. It&apos;s so flexible; for the first cell I wanted to build I only needed to populate 4 components! Yay ATTINY!</p><p><img src="https://cdn.hackaday.io/images/4989441439767887025.JPG"></p><p>Then there&apos;s the top with a description. This is dummy text and a dummy design, but once some graphic design-fu is applied, there will be a good template ready for any cell.</p><p><img src="https://cdn.hackaday.io/images/1755331439768009078.JPG"></p><p>And that&apos;s what a cell looks like! I think in the future I&apos;ll use black colored acrylic instead of spray painting clear, which will make assembly so much quicker. I also need to change a few dimensions on some holes, but that&apos;s no big deal. Next up I fill the cell with actual mechanics.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6682/log/23220-building-the-first-cell">Building the first cell</a></h2>
                            <small class="authorship">2 days ago  &bull;
                                <a class="gray-link" href="/project/6682/log/23220#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23220"><p>With a template for the cells in place, and a first prototype built, it was time to build a complete first cell to demonstrate how everything worked and make sure that it will all come together.</p><p>This is a prototype cell. When I make the cells for the exhibit, there will be somewhere between 20 and 60 cells, each one different, and each one demonstrating a different mechanical motion (like <a href="http://507movements.com/">http://507movements.com/</a>)</p><p>The first cell I started with a simple pair of gears. I downloaded some off GrabCAD, then modified them slightly to have a smaller inner diameter and an arrow on top to have a visual indicator of it as it turns.</p><p>After 3D printing them, I needed to figure out a mechanism to attach them to the cell. This is where things are going to get tricky for all the cells; not only the motion needs to be designed, but the fixture to hold the moving parts to the cell need to be designed as well. This will make all of the cells a little more time consuming than I&apos;d like.</p><p><img src="https://cdn.hackaday.io/images/9018391439784541627.JPG"></p><p>Since this is a rough draft of a cell, I didn&apos;t want to work too hard on making it perfect, so I took some HDPE blocks and carved them on the band saw and drill press to make them fit with some metal hardware. Hot glue was the final ingredient to get everything to stick. This is what the prototype cell looks like assembled:</p><p><img src="https://cdn.hackaday.io/images/3290721439784566358.JPG"></p><p>Attaching the PCB was fairly straightforward, and I was fortunate to have measured the mounting holes correctly. Soldering everything on the PCB was a cinch, with only a few components required. </p><p><img src="https://cdn.hackaday.io/images/8411131439784593085.JPG"></p><p>There was some firmware development as well, but I already had sample code for each of the different parts (LED, cap touch, and servo), so it was mostly a matter of copy/pasting things together. It was pretty nice that during the hardware validation step I had created a sample sketch to test each part individually.</p><p>Here is a video of the sample cell working. Touch the capacitive touch button and it turns on the lights and starts the action. It&apos;ll run for a few seconds, then turn itself off.</p><iframe width="560" height="315" src="https://www.youtube.com/embed/qqeeq8UujqI?rel=0" frameborder="0" allowfullscreen=""></iframe><p>I&apos;m conflicted about the light. It&apos;s too harsh, but it might be better in bright day in the museum. And it&apos;s too noisy. I&apos;d like to reduce that. I also need to figure out a good way to get cap touch sensitive and reliable. Also, the connector hanging out the bottom will have to go away. The intent is to have a set of spring connectors sticking out the bottom, and when they make contact in the wall mount frame then power is supplied. These power rails would go up to the top of the cell, too, so that a stacked cell would get power.</p></div>
                            </div>
                        </li>
                    
                </ul>

                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'WJSuKGPM--sHnB9pGxkQNJkT6XAd9NuvhpsU';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>