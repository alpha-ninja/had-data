<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; reactive led gems : make the music pop &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F4310%2Flogs%3Fpage%3D1">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/4310-reactive-led-gems-make-the-music-pop">reactive led gems : make the music pop</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">show control from an led instrument. bring the audience into the performance experience. play highly reactive and mode setting patterns</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/130-mpinner" title="Visit Profile">mpinner</a><span>&bull;</span>
                
                6 months ago<span>&bull;</span><a href="/project/4310#discussion-list" title="See Comments">3 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/4310-reactive-led-gems-make-the-music-pop">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/4310/logs/sort/newest">Newest</option>
                    <option value="/project/4310/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/4310/log/14442-next-step-output">next step... output</a></h2>
                            <small class="authorship">6 months ago  &bull;
                                <a class="gray-link" href="/project/4310/log/14442#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-14442"><p>the next step is evolving... the output!</p><p><img src="https://cdn.hackaday.io/images/8242101424766099525.jpg"></p><p><img src="https://cdn.hackaday.io/images/3288071424766015438.png"></p><p><img src="https://cdn.hackaday.io/images/6935321424765979022.png"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4310/log/14541-octows2811">octows2811</a></h2>
                            <small class="authorship">6 months ago  &bull;
                                <a class="gray-link" href="/project/4310/log/14541#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-14541"><p>midi and osc and octows2811... oh my.</p><p>there are sooooo many ways to get from a midi device to a teensy running octows2811, im boggled.</p><p>also, my target system runs ableton and windows;( so that doesn't make midi handling all that less complex</p><p>thus far my stack is</p><p>midi -&gt; ableton -&gt; live grabber -&gt; processing -&gt; oscuinoSerial -&gt; teensy serial</p><p>i might simplify this by compiling teensy as a midi device, but im really in love with the scripting language i've built upon OSC and the debug info i can get back...</p><p>more on this to follow..</p><p><img src="https://cdn.hackaday.io/images/8070441425064575553.jpg"></p><p><img src="https://cdn.hackaday.io/images/2395421425064601933.jpg"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4310/log/20041-shaders">Shaders</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/4310/log/20041#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20041"><p><strong>Q : how do you control 1000s of leds with minimal delay?</strong></p><p><strong><br></strong></p><p><strong>A : no delay. </strong></p><p>from the beginning i knew this was going to be the central issues.  to ease development i choose to parse all the osc messages on the microcontroller.</p><p>this is a fairly novel approach. osc doesn't specifically rely on having a network, but everyone uses it over udp. my teensy looks like an osc device sorta.  i have to parse all the osc traffic on my teeny. this has to be the highest priority task and cannot be delayed. these usb / serial buffers will overrun quickly and i need the hits to be perfectly sync'd  (&lt;5ms) .</p><p>doing all this osc parsing in c is kind of maddening, but afforded me only having to manage the message formats in one place. (DRY: don't repeat yourself)</p><hr><p>ok, <strong>SHADERS</strong></p><p><strong><br></strong></p><p>their use wasn't strictly required. i have GPU. I probably wasn't even implemented correctly.  I use the term "Shader" in this case to explain the design pattern and division of responsibility.  i knew i'd need to add patterns fairly quickly and have lots of data driven configurability.</p><p>basically you can get a ton of different behavior by implementing this virtual method:</p><pre class="hljs cpp">  <span class="hljs-function"><span class="hljs-keyword">virtual</span> <span class="hljs-keyword">uint32_t</span> <span class="hljs-title">shade</span> <span class="hljs-params">(<span class="hljs-keyword">float</span> height, <span class="hljs-keyword">uint32_t</span> color, <span class="hljs-keyword">uint32_t</span> currentColor, <span class="hljs-keyword">float</span> remaining, <span class="hljs-keyword">uint32_t</span> secondaryColor)</span></span>;</pre><p>that is all. here is one of the more complex ones.</p><pre class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">uint32_t</span> <span class="hljs-title">shade</span> <span class="hljs-params">(<span class="hljs-keyword">float</span> height, <span class="hljs-keyword">uint32_t</span> color, <span class="hljs-keyword">uint32_t</span> currentColor, <span class="hljs-keyword">float</span> remaining, <span class="hljs-keyword">uint32_t</span> secondaryColor)</span> </span>{

    <span class="hljs-keyword">if</span>(remaining &gt; <span class="hljs-number">0.85</span>) {
      <span class="hljs-keyword">if</span>(<span class="hljs-number">2</span> &gt; random(<span class="hljs-number">100</span>)) {
        <span class="hljs-keyword">return</span> color;
      }
    } 

    <span class="hljs-keyword">if</span>(remaining &gt; <span class="hljs-number">0.7</span>) {
      <span class="hljs-keyword">if</span>(<span class="hljs-number">2</span> &gt; random(<span class="hljs-number">100</span>)) {
        <span class="hljs-keyword">return</span> secondaryColor;
      }
    } 

     <span class="hljs-keyword">if</span>(<span class="hljs-number">5</span> &gt; random(<span class="hljs-number">100</span>)) {
      <span class="hljs-keyword">return</span> colorByBrightness(<span class="hljs-number">0.9</span>, currentColor);
    }

    <span class="hljs-keyword">return</span> currentColor;
  }  
};</pre><p>right. not all that complex. check em all out here : <a href="https://github.com/mpinner/PurityRingGems/tree/master/Arduino/Gems_HitSync">https://github.com/mpinner/PurityRingGems/tree/master/Arduino/Gems_HitSync</a></p><p> the trick is in how you think about the <strong>context</strong> and task.</p><p>each led is essentially complete responsible for only itself and i know how to write simple code to control one led. </p><p>i provide myself a rich context for each led to live within. things like timing, colors, and position are all normalized from 0.0 - 1.0.  this makes writing code extremely predictable, easy, and <strong>inefficient</strong>.</p><hr><p><strong>I am doing so much floating point math. it is almost irresponsible and completely insane for what could be ALL integers </strong></p><p><strong><br></strong></p><p>ALMOST INSANE:</p><p> the only things that makes it ok:</p><p>  - having plenty of spare cycles on my Teensy's Freescale</p><p> - being able to accept a new OSC Message ANYTIME , even between calculations for neighboring pixels</p><p> - Measuring my effective frame rate to ensure it always looked GOOOOOOD . initially i was pushing 200fps. once i started adding more and more and more features and cross gem patterns, my frame rate dipped to just over 60fps.. sweet!</p><p>one might argue it looks even better this way because you are constantly calculating the most accurate colors. im not sure that's quite true, but you'll have to see it live.</p><p>a fun side effect was being able to bring in and compare previous pixel values to have feedback like effects. i didn't play with this nearly as much as i should have, but it is very apparent when you start using the touchosc interface to simulate hits very very fast.</p><p>well, i hope this helps</p><p>please review the code and comment as needed. learn what you can. no elitism please. i did this all under no sleep and serious duress.</p></div>
                            </div>
                        </li>
                    
                </ul>

                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'QaEOP2JY-gb23Qx5GefSwIL3Kb4jjtCPb0Iw';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>