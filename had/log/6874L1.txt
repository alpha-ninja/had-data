<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; PowerPeg  Thermal Management System &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F6874%2Flogs%3Fpage%3D1">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/6874-powerpeg-thermal-management-system">PowerPeg  Thermal Management System</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">A system of interchangeable parts for thermal management in PCB assemblies.</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/13685-dean-gouramanis" title="Visit Profile">Dean Gouramanis</a><span>&bull;</span>
                
                a month ago<span>&bull;</span><a href="/project/6874#discussion-list" title="See Comments">0 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/6874-powerpeg-thermal-management-system">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/6874/logs/sort/newest">Newest</option>
                    <option value="/project/6874/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/6874/log/21457-measuring-absolute-thermal-resistance">MEASURING ABSOLUTE THERMAL RESISTANCE</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/6874/log/21457#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21457"><p>I did this experiment a while ago, after researching thermal conduction.</p><p>The goal was to characterize <a class="jive-link-external-small" href="http://tem-products.com/PowerPeg_43_Series.pdf" rel="nofollow" target="_blank">TCAP-4325</a> thermal connector, while fortifying my understanding of thermodynamics.</p><p><strong><br></strong></p><p><strong>Thermal Resistance</strong> is defined as a <strong>temperature differential </strong>measured across two sections of a thermal path, divided by the <strong>energy flux </strong>through this path; Or degrees Celsius per watt.</p><p><strong>&#x3B8;abs = &#xB0;C/W</strong></p><p><a class="jive-link-external-small" href="http://en.wikipedia.org/wiki/Thermal_resistance" rel="nofollow" target="_blank">Thermal resistance - Wikipedia, the free encyclopedia</a></p><p>The thermal path is defined as the three dimensional space between a source and a sink. In this case the goal is to study the TCAP-4325 connector (in its entirety)  as the absolute thermal path.</p><p>Ideally: all the power generated by the source would flow evenly into the system through the circular plane at the connector&apos;s input.</p><p>The sink should be as large as possible, with a high conductivity, and high mass. (infinite heatsink)</p><p>By generating a known wattage at the input, and comparing the input temperature to the temperature of the heat sink, the temperature differential is observed.</p><p><strong><br></strong></p><p><strong>Tools:</strong></p><p>Arduino Uno as data collector</p><p>KTA-259 8 channel thermocouple shield</p><p>40 AWG thermocouple wire</p><p>Bourns CHF2010CNP101RX 10 watt SMT resistor</p><p>TCAP-4325 thermal connector</p><p>Adjustable power supply</p><p>Current meter</p><p>Constant wattage was achieved by adjusting the current to known values.</p><p>The most difficult task was getting an accurate temperature reading of the input interface.</p><p>It took a few tries, but I managed to sandwich the thermocouple wires between the resistor Peg, and solder it all together.</p><p><img src="https://cdn.hackaday.io/images/8528241437716415274.jpg"> </p><p><img src="https://cdn.hackaday.io/images/6192691437716459889.jpg"> </p><p><img src="https://cdn.hackaday.io/images/2969761437716478754.jpg"></p><p>The infinite heatsink was constructed by connecting the PowerPeg to a large copper slab. The copper slab was bolted to an even larger aluminum block.</p><p><img src="https://cdn.hackaday.io/images/470741437716496665.jpg"></p><p><img src="https://cdn.hackaday.io/images/2617941437716518708.jpg"> </p><p><img src="https://cdn.hackaday.io/images/8611431437716531054.jpg"></p><p>Once everything was set up I tested ten different power levels.<br></p><p>The MAX31855 provides 1/4 degree Celsius resolution.</p><p>The Arduino was programmed to switch on the load, and record temperature in 5 second intervals. The graphs looked like this:</p><p><img src="https://cdn.hackaday.io/images/268021437716544517.jpg"></p><p>This one shows the temperature curve generated by a 9 watt pulse. The coolest part of the whole experiment was discovering the temperature oscillations (~0.05 Hz) immediately following the rising edge, and after the pulse. I spent hours imagining heat energy flowing like water, and <a href="https://youtu.be/Rl998KRkpPA?list=PLW09CSgB5DdLNUJ6DR56Sksm9NqNJ24tM" target="_blank">&apos;splashing&apos; around the corners</a>. </p><p>The high-side temperature data was based on the thermocouple placed between the resistor and PowerPeg Input shown above. </p><p>The low-side temperature measurement was based on several temperature measurements of the copper and aluminum sink. The resistance of the sink was so low that no difference in temperature was measured at the various points. Overall temperature of the block did increase slightly during the experiment, but the rate of change was slow enough for the entire block to heat up evenly. </p><p>The fact that the low-side temperature data was based on the sink (as a whole), rather than the output surface of the PowerPeg means that the experiment took into account any resistance contributed by air gaps or thermal grease. </p><p>The experiment was surprisingly accurate. I know there wasn&apos;t much error, because the calculated data was extremely linear across the power distribution.</p><p>The graph below shows the <strong>&#xB0;C/W</strong> graph for the TCAP-4325 connector without thermal grease. The slope of the graph gives 2.0 &#xB0;C/W<span class="redactor-invisible-space">.</span></p><p><span class="redactor-invisible-space">The experiment was repeated with thermal grease. Surprisingly the resistance was 50% higher.</span></p><p><img src="https://cdn.hackaday.io/images/5890701437716554117.jpg"></p><p>The finished datasheet looks like this:</p><p><a class="jive-link-external-small" href="http://tem-products.com/PowerPeg_43_Series.pdf" target="_blank">http://tem-products.com/PowerPeg_43_Series.pdf</a></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6874/log/21800-reliability-test">RELIABILITY TEST</a></h2>
                            <small class="authorship">20 days ago  &bull;
                                <a class="gray-link" href="/project/6874/log/21800#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21800"><p>One concern about
PowerPeg is how long it can operate without failure. If PowerPeg were
to suddenly fail in transferring heat, temperatures will rapidly
climb in the semiconductor leading to a meltdown!</p><p>Every time a
material increases in temperature, it expands due to the kinetic
action of it&apos;s molecules. This phenomenon is known as thermal
expansion.</p><p>Different materials
expand different amounts for a given change in temperature. Copper
will expand approximately 0.17% in length with a 100&#xB0;C rise in
temperature. Aluminum expands 0.24% with the same rise in
temperature. Circuit board substrate (FR4) can expand as much as 7%
with a 100&#xB0;C rise.</p><p>The goal of this
experiment was to subject a typical PCB with PowerPeg cooling system
to extreme temperature swings, and monitor the systems performance
over time.<br></p><p><strong>Tools</strong></p><p>Arduino Uno as data collector</p><p>TTL relay module</p><p>KTA-259 8 channel thermocouple shield</p><p>40 AWG thermocouple wire</p><p>Test PCB with 10
watt SMT resistor connected to GP-43-A heatsink</p><p>Mini fridge/freezer<br></p><p>12 VDC blower fan</p><p>Adjustable Power
Supply</p><p>The test PCB was
assembled with the thermocouple wires carefully soldered beneath the
resistor.</p><p>Normally it&apos;s a good idea to screw the heatsink onto the Peg, and also add some screws from the PCB to the Heatsink. This way vibrations don&apos;t effect the connection, and the peg can&apos;t get accidentally unscrewed. For this experiment I used only a single screw to attach the heatsink.<span class="redactor-invisible-space"> This way I am testing the reliability of the Peg&apos;s connection. </span><br></p><p><img src="https://cdn.hackaday.io/images/8606571438209678383.jpg" width="560" height="420" style="width: 560px; height: 420px;"></p><br><p>Arduino Uno was
configured to control the experiment, and also collect data. 
</p><p>The entire apparatus
was placed in the freezer box of my mini fridge. I stuffed the fridge
area with blankets to prevent air currents from throwing off the
results.</p><p>The adjustable power
supply was set to 38.75 volts, which delivers approximately 15 Watts
to the resistor. Arduino switches on the heat until the temperature
reaches 150&#xB0;C at the thermocouple. 
</p><p>Once the temperature
reaches 150&#xB0;C, the relay cuts power to the heater, and switches on a
blower fan to cool the GP-43-A heatsink, along with the entire PCB
area.</p><p>When the temperature
at the thermocouple reaches -5&#xB0;C the process is repeated.</p><p>Arduino prints the
number of seconds required for the temperature to reach 150&#xB0;C, and
also the time required to cool down back to -5&#xB0;C. I imported this
data to Excel, and made the following graphs.</p><p><img src="https://cdn.hackaday.io/images/6831551438208777334.jpg" width="566" height="296" style="width: 566px; height: 296px;"></p><p><img src="https://cdn.hackaday.io/images/3474391438208790705.jpg" width="568" height="297" style="width: 568px; height: 297px;"></p><p>Ideally we hope to
see a completely flat horizontal line. This would indicate no change
in the system, even after repeated thermal cycling.</p><p>There were a few
sources of error which indicated in the graph.</p><p>The obvious one is
the constant noise spikes/fuzz. This was caused by the compressor
kicking on/off as the fridge&apos;s thermostat triggered. Keep in mind the
experiment ran for two days. The experiment cycle is around two
minutes long, so sometimes the fridge was slightly cooler than other
times. The temperature of the freezer (ambient) effects the amount of
time for the system to reach 150&#xB0;C, so the data fluctuated as the
freezer cycled. As long as enough data was collected, a trend line
with slope of zero still gives a good result.</p><p>The other curious
feature in the graph is the slight downward trend of the fall-time
graph, and slight upward trend of the rise-time graph. I doubt the
PowerPeg system was becoming &#x201C;more effective&#x201D; as the Arduino
tortured it. A more likely
explanation is that the fridge required a couple days to settle down
to the lowest temperature. </p><p>If i let the experiment run for a few more days (or weeks) i would expect the sloped trend to normalize, and the signal to noise ratio to decrease. Next time I will add ambient temperature readings, and try to eliminate some more variables. </p><p>Overall the
experiment showed that PowerPeg cooling system provided constant
thermal path out of the SMT Resistor, despite the extreme temperature
swings.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6874/log/21811-screw-test">SCREW TEST</a></h2>
                            <small class="authorship">20 days ago  &bull;
                                <a class="gray-link" href="/project/6874/log/21811#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21811"><p>In my ongoing
pursuit to characterize PowerPeg and provide a professional
engineering datasheet to the world, the <strong>mounting screw</strong> became
of interest.</p><p>We take for granted
the fact that the human hand is an incredible instrument. Most
electronics geeks are capable of knowing how far to tighten a small
screw. On the assembly line these things are done at a fast pace, or
with motorized screwdrivers. This is why providing a specification
for screw torque is absolutely necessary.</p><p>PowerPeg is made of
copper because copper provides the best conductivity. Unfortunately
copper is also a soft metal, with a relatively low sheer strength.</p><p>The first thing I
did was some destructive testing. Even after assembling dozens of
prototypes I had never had the misfortune of accidentally stripping a
thread. So I grabbed my torx screwdriver, a small vise, and some
alloy steel screws, and did a quick test. I tightened until something
broke, and to my surprise the steel screw failed before the Peg
stripped. 
</p><p><img src="https://cdn.hackaday.io/images/9814901438222765564.jpg" width="320" height="244" style="width: 320px; height: 244px;"></p><p>GP-43-A is designed
with the screw length in mind to &apos;connect&apos; when the entire thread is
engaged in the copper Peg. The thread engagement of a tightened
connection is around 0.06&#x201D;. If the screw were shorter, or if
GP-43-A were thicker, the copper threads would most likely strip
first. 
</p><p>This was good news
for me, since it shows that PowerPeg is up to standard with typical
steel screws. Still I needed to do an experiment in order to provide
device manufacturers with the specification they need on the assembly
line.<br></p><p>So I got to
designing a torque measurement apparatus.</p><p><img src="https://cdn.hackaday.io/images/5056471438222832654.jpg" width="368" height="276" style="width: 368px; height: 276px;"></p><p><a href="https://en.wikipedia.org/wiki/Torque" target="_blank">Torque</a> is the
measure of the tangental force exerted by a radial arm of a rotating
axis.</p><p>This design is
centered around the Honeywell FSS1500 force sensor. 
</p><p><img src="https://cdn.hackaday.io/images/811641438222856569.jpg"></p><p>The sensor is
mounted on a steel base plate. The base plate is attached to the
input axis, with the force sensor positioned at a known distance from
the central axis. Opposite the input axis is a swivel pin, on which a
second plate is attached. 
</p><p><img src="https://cdn.hackaday.io/images/8176091438222882938.jpg" width="521" height="397" style="width: 521px; height: 397px;"></p><p>The second plate is
designed to apply a normal force to the sensor when a torque is
allied at the other end. At tip of the apparatus is a T5 Torx driver,
which I can use to tighten the screws. 
</p><p><img src="https://cdn.hackaday.io/images/1519111438222900572.jpg" width="516" height="388" style="width: 516px; height: 388px;"></p><p>An Arduino pro mini
functions to read the sensor. The Arduino program prints the maximum
value measured, until the reset button is pressed. This way I can
record the torque value just before the screw breaks.</p><p><img src="https://cdn.hackaday.io/images/4553721438222923379.png"></p><p>I didn&apos;t go out of
my way to make the screwdriver look aesthetically pleasing, but it
ended up looking really cool, especially with the mylar tape and
flashing LEDs. 
</p><p><img src="https://cdn.hackaday.io/images/6977121438222942583.jpg" width="365" height="439" style="width: 365px; height: 439px;"></p><p>I tested ten
samples. (units in inch-lbs)</p><p><img src="https://cdn.hackaday.io/images/3603691438223092678.jpg" width="381" height="109" style="width: 381px; height: 109px;"></p><p>The average
measurement was 0.805 in-lbs. This was the torque at the time of
fracture. </p><p>So I derated this value by 20% as the maximum torque for
the <a href="http://tem-products.com/PowerPeg_43_Series.pdf">PowerPeg datasheet</a>.<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6874/log/22289-application-test">APPLICATION TEST</a></h2>
                            <small class="authorship">12 days ago  &bull;
                                <a class="gray-link" href="/project/6874/log/22289#discussion-list">
                                    3 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22289"><p>Everyone loves
the Cree XML. This past week I did some long overdue applications
testing based on the Cree XML with PowerPeg thermal management.</p><p><strong>About <a href="http://www.cree.com/LED-Components-and-Modules/Products/XLamp/Discrete-Directional/XLamp-XML2">Cree XML</a>
LED</strong></p><p>Over the past
four years the <a href="http://www.cree.com/LED-Components-and-Modules/Products/XLamp/Discrete-Directional/XLamp-XML2">Cree XML series</a> LED has been my favorite LED. It is a
very popular component in DIY projects and commercial products around
the world.</p><p>Cree XML series
is one of many new-generation light emitting diodes which are
designed to be surface-mounted on a PCB. This small LED packs big
power into a package only 5mm X 5mm in size.</p><p>The thing that
makes the XML so special is it&#x2019;s especially large die. The
semiconductor inside the XML is 3mm X 3mm in size, providing nine
square millimeters for light emission. In LED physics size does
matter. You may be able to pipe more power into a smaller LED, but
efficiency will undoubtedly be lower when emission area is limited.  
</p><p>The 3mm die in
XML LEDs is connected to a large thermal pad on the bottom side of
the chip. The LED itself is rated at 10 watts maximum, but this
rating is very limited by how effectively heat can dissipate from the
LED.</p><p><strong>Efficiency in
lighting</strong></p><p>Efficiency in
lighting systems is important. As greenhouse gasses are continuously
accumulating in the earth&#x2019;s atmosphere, all the big names in
lighting seek to produce the world&#x2019;s most efficient light bulbs.
LEDs are <i><strong>green</strong></i> because they use less electricity, and
they are also <i>green</i> because they last for more years than old
technologies.</p><p>The especially
large die in the Cree XML means it can:</p><p> A) handle huge
power for it&#x2019;s size. Many of the new ULTRABRIGHT flashlights use
the XML technology because it is just so powerful! The LED can be
driven at up to 3 Amps if cooled properly.</p><p>Or 
</p><p>B) The XML can be
driven at a moderate power level to achieve high energy efficiency! 
</p><p>Ultimately the
energy savings equates to less fossil fuel consumption, and a
healthier planet. 
</p><p><strong>Calculations</strong></p><p>Calculating the
energy efficiency of an LED light can be tricky. In resistive
circuits P = VI, but LEDs are semiconductors which means V is a
function of the temperature and other variables. 
</p><p>The best way to
characterize the efficiency of an LED light is by conducting a lab
test.</p><p>The goal of this
experiment is to test Cree XML LED at various power levels, and with
multiple heatsinks. The effect of each heatsink on energy efficiency
will be observed.</p><p><strong>The Heatsinks</strong></p><p>After four years
of research and development into PowerPeg Thermal Management, I have
a beautiful assortment of standardized heatsinks to test.</p><p>Once PowerPeg is
soldered to the LED, any of these heatsinks can be added or removed.</p><p><img src="https://cdn.hackaday.io/images/8597691438955477058.jpg"></p><p><strong>The Experiment</strong></p><p>The experiment is
designed to monitor:</p><ol>
	<li>the
	temperature of the thermal pad</li><li>the forward
	voltage of the LED</li><li>the light
	output of the LED</li></ol><p>A benchtop power
supply maintains constant-current through the LED during each test.
Four heatsink arrangements were tested:</p><ol>
	<li>PowerPeg
	with no heatsink attached</li><li>GP-43-A
	heatsink</li><li>GP-43-A-FC1
	forced convection cooler</li><li>WC-43-A
	water cooler</li></ol><p>The experiment
was repeated at three power levels (350mA, 700mA, 1500mA) for a total
of twelve trials.</p><p><strong>The Apparatus</strong></p><p>An Arduino Mega
served as the controller. The KCA-259 thermocouple shield easily
attached to the Arduino for temperature measurements.</p><p><img src="https://cdn.hackaday.io/images/2570951438955495693.png"></p><p>The LED was
installed on a PCB with a TCAP-4325 PowerPeg. </p><p>Tiny 40 AWG thermocouple wires were sandwiched
between the LED and PCB for measuring the temperature. I started by
welding the thermocouple wires to the copper pad on the PCB using a
capacitor, then covered the pad with solder, then reflowed the LED on
top.</p><p><img src="https://cdn.hackaday.io/images/5620351438955510796.png"></p><p>Test leads were soldered to the PCB as close as possible to the LED for measuring the forward voltage. <br></p><p>The LED was
mounted at the top end of an optical tube approximately 3&#x201D; long.
The optics tube contained a series of light diffusers and filters.
The filters were necessary in order to bring the light intensity down
to a measureable level.</p><p>The light
intensity is measured at the bottom end of the tube by a <a href="http://www.ams.com/eng/content/download/250245/975893/142297">TSL230</a> light
intensity sensor. The bottom half of the assembly was positioned
inside a cardboard box to block out ambient light. 
</p><p><img src="https://cdn.hackaday.io/images/4622541438955528577.png"></p><p><strong>Results</strong></p><p>The experiment
produced a comprehensive data set.</p><p>When the LED
kicks on the temperature of the system rises until thermal
equilibrium is reached. Each heatsink reaches a different temperature
for a given power level. 
</p><p><img src="https://cdn.hackaday.io/images/1093411438955543741.jpg"></p><p>Temperature
affects light output. The measured light intensity was identical at
the start of each test. Light output decreased as temperature
increased.</p><p><img src="https://cdn.hackaday.io/images/5574751438955562203.jpg"></p><p>The forward
voltage of the LED decreased as temperature increased. 
</p><p><img src="https://cdn.hackaday.io/images/4903091438955589983.jpg"></p><p>The power supply
delivers constant current despite changes in voltage. The decrease in
forward voltage means that power input also decreased proportionally
(P=VI). 
</p><p>Coefficient of
relative power input was calculated by dividing the forward voltage
at each point by the initial voltage.</p><p>Then efficiency
was calculated by dividing relative Lux by the relative power input. 
</p><p><img src="https://cdn.hackaday.io/images/9917771438955607354.JPG"></p><p><img src="https://cdn.hackaday.io/images/420211438955620612.JPG"></p><p>The experiment
showed that efficiency was significantly improved by incorporating a
thermal management system.  
</p><p><img src="https://cdn.hackaday.io/images/4706701438955642314.jpg"></p><p><a href="https://plus.google.com/photos/105142970227332631428/albums/6180263645545718161">More pictures</a></p><p><a href="http://www.tem-products.com/PowerPeg%20Application%20Test%20Cree%20XML.pdf">PowerPeg Applications Test PDF</a></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6874/log/22373-various-size-prototypes">VARIOUS SIZE PROTOTYPES</a></h2>
                            <small class="authorship">10 days ago  &bull;
                                <a class="gray-link" href="/project/6874/log/22373#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22373"><p>Here is an image of some old prototypes. These 38 Series connectors are 3.8 mm in diameter at the flange. </p><p>The very first PowerPeg prototype was 4.8 mm in diameter, and connected using a big #2-56 screw. There was nothing wrong with this design. These Pegs were tough, and worked well with larger ICs and heatsinks. </p><p>Before producing in bulk I tried to consider all possibilities, and I ended up deciding on a smaller 4.3mm Peg using a #0-80 screw. The conductance of a 4.3mm connector is almost the same. The screws are small, but not impossible to work with. </p><p>Before arriving at 4.3 mm I tried these 3.8 mm prototypes (pictured below). They feature a #00-90 thread.</p><p>The resistance was around 50% higher, and the screws were very fragile. </p><p>4.3 mm were the winner for the first batch. They were durable enough, yet small enough to be used in almost any PCB. </p><p>Next I plan to make a super tiny &quot;25 Series&quot; for mobile devices such as cell phones and tricorders. Then an &quot;80 Series&quot; for processors and FPGAs. </p><p>I appreciate any feedback from designers regarding what sizes would be useful.</p><p><img src="https://cdn.hackaday.io/images/3262831439147609601.jpg" width="291" height="292" style="width: 291px; height: 292px;"></p><br></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6874/log/23541-heatsink-complete">Heatsink complete</a></h2>
                            <small class="authorship">2 days ago  &bull;
                                <a class="gray-link" href="/project/6874/log/23541#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23541"><p>The GP-43-A heatsink is a general-purpose heat spreader; designed for attachment to 43 Series thermal connectors. </p><p>Most commercial heatsinks are manufactured using extruded profiles. A long bar of &apos;heatsink-shaped aluminum&apos; is extruded including all the air fins. This method is economical because less scrap metal is produced, and large/thin fins can be formed easily. </p><p>I did not have funding for an extrusion die, so I had to get creative. The GP-43-A features machined air channels. This round heatsink is sculpted from a solid aluminum disk. </p><p>The heatsink design is fairly effective. It occupies 0.63&quot;sq. of PCB space, and provides 2.5 square inches of surface area. The machined features, and nickel plating make it a beautiful addition to any PCB. </p><p>I produced these heat sinks using an antique Barker Horizontal Milling machine, in combination with some Arduino-driven modifications. This machine turns a solid aluminum disk into a crafted PCB accessory. </p><p><iframe width="500" height="281" src="//www.youtube.com/embed/lBf2vblFCWo" frameborder="0" allowfullscreen=""></iframe></p><p>After milling, four holes are drilled, and threaded for #0-80 screws. These useful holes can be screwed to the PCB from the bottom side, or used for attachment of a cooling fan. </p><p>Finally the parts are thoroughly cleaned then Nickel plated. <br></p><p>Lastly A thorough inspection followed professional packaging make these handmade heatsinks ready for the <a href="http://tem-products.com/index.php/heatsinks/gp-43-a.html" target="_blank">marketplace</a>.</p><p><img src="https://cdn.hackaday.io/images/2556911439841761981.jpg" width="220" height="220" style="width: 220px; height: 220px;"></p><br></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6874/log/23611-open-source-lighting-project-based-on-powerpeg">Open Source lighting project based on PowerPeg</a></h2>
                            <small class="authorship">a day ago  &bull;
                                <a class="gray-link" href="/project/6874/log/23611#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23611"><p>LED Gem is an open-source Indoor LED lighting system based on Cree XML LEDs in combination with PowerPeg Thermal Management System to deliver bright light and high efficiency. <br><br>LED Gems deliver warm white light at high efficiency and shine bright for over 10 years. <br><br>Each &quot;Gem&quot; contains short-circuit and over-temperature protection built in. <br><br>Just use the jumpers to make a string of Gems, and use your imagination to install them in shelving, above picture frames, ceiling mounts&#x2026; etc. </p><p><a href="https://hackaday.io/project/1604-led-gems">https://hackaday.io/project/1604-led-gems</a></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6874/log/23621-microfluidics-experiment">Microfluidics Experiment</a></h2>
                            <small class="authorship">a day ago  &bull;
                                <a class="gray-link" href="/project/6874/log/23621#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23621"><p>This RTV microfluid circuit was made using a PCB as a mold, and casting liquid rubber onto the surface. The tiny PCB traces produced small channels which water can flow through. </p><p>This is an early prototype, but my idea is to build tiny water coolers using these rubber fluid circuits. </p><p><iframe width="500" height="281" src="//www.youtube.com/embed/fyz2IJtT4_8" frameborder="0" allowfullscreen=""></iframe><br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6874/log/23630-wc-43-a-complete">WC-43-A complete</a></h2>
                            <small class="authorship">a day ago  &bull;
                                <a class="gray-link" href="/project/6874/log/23630#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23630"><p>The WC-43-A is the same size and shape as the GP-43-A heatsink. This water cooler connects to any 43 Series thermal connector.</p><p>The brass fittings fit a 1/16&quot; ID tube. </p><p>I tested this cooler at 9.9 watts with great <a href="https://lh4.googleusercontent.com/-MCr4hW_6knk/VcX3wuH6t7I/AAAAAAAAHvU/MxBWN0c3F-M/w571-h588-no/3000mA%2Bdata%2Bcopy.jpg" target="_blank">results</a>. The temperature rise was only 40 degrees celsius.</p><p>Video clip:</p><p><a href="https://instagram.com/p/56MMkkyTtT" target="_blank">https://instagram.com/p/56MMkkyTtT</a></p><p><img src="https://cdn.hackaday.io/images/7298761439847329930.jpg"></p></div>
                            </div>
                        </li>
                    
                </ul>

                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'fjKqyHKW-Y7QEKH9NlUlf-C8BrUJ7v471xPM';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>