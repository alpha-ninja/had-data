<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; Broke Hackers&#39; Model Railway &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F2250%2Flogs%3Fpage%3D1">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/2250-broke-hackers-model-railway">Broke Hackers&#39; Model Railway</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">Cheap, fully automated model train system with 99.9999% 3D printed parts.</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/17598-szabolcs-lrincz" title="Visit Profile">Szabolcs LÅ‘rincz</a><span>&bull;</span>
                
                a year ago<span>&bull;</span><a href="/project/2250#discussion-list" title="See Comments">10 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/2250-broke-hackers-model-railway">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/2250/logs/sort/newest">Newest</option>
                    <option value="/project/2250/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/2250/log/6142-3d-printed-parts">3D printed parts</a></h2>
                            <small class="authorship">a year ago  &bull;
                                <a class="gray-link" href="/project/2250/log/6142#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-6142"><p>The most of the models are done already. You can download them from my&nbsp;<a href="http://lszabi.netai.net/index.php?p=view&amp;id=8">website&nbsp;</a>or&nbsp;<a href="https://github.com/lszabi/model_railway">GitHub</a> in Solid Edge ST6 &nbsp;or common STL format.<br>These parts include a gear, the axles, the upper and lower part of the train and a linear and curved pair of rails.</p><p>Unfortunately, I haven't received the printer I ordered, so I couldn't test these parts, but I will improve them as soon as I can.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/2250/log/6250-one-wire-communication-protocol">One-wire communication protocol</a></h2>
                            <small class="authorship">a year ago  &bull;
                                <a class="gray-link" href="/project/2250/log/6250#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-6250"><p>The next step is the communication. Not the main protocol, that will come later. This is for determining position. There will be metal plates between the rails and a contact on the bottom of the engines. When these touch, the engine's AVR will sense the pulse and send back its ID. That's all. For now, I prototyped this with an Arduino UNO and MEGA.</p><p><img src="http://lszabi.netai.net/upload/arduino_onewire.jpg"></p><p>The communication flow through the yellow wire. There are 10K pull-down resistors to prevent catching noise in contactless state. I even draw a schematic.</p><p><img src="http://lszabi.netai.net/upload/onewire.png"></p><p>That's all for now. More details and source code on my&nbsp;<a href="http://lszabi.netai.net/index.php?p=view&amp;id=9">website&nbsp;</a>and on&nbsp;<a href="https://github.com/lszabi/model_railway">GitHub</a>.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/2250/log/8161-model-railway-control-over-the-interwebz">Model Railway control over the interwebz</a></h2>
                            <small class="authorship">a year ago  &bull;
                                <a class="gray-link" href="/project/2250/log/8161#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-8161"><p>Now that the circuit is complete, let's see the controls. The model railway is connected, meaning you can control it from anywhere from any device with a browser. All you need is a RaspberryPi and internet access. The Raspberry runs Apache2 with the control panel, and it communicates with the master station through UART. Then the masters sends out the commands for the slave devices through TWPC. You can control every device with one click.Looks like the electronics is almost done, here are some picures of the results so far:</p><p><img src="http://lszabi.netai.net/upload/twpc_breadboard.jpg"></p><p><img src="http://lszabi.netai.net/upload/raspi_train_control.png"></p><p>Everything is available on my&nbsp;<a href="http://lszabi.netai.net/index.php?p=view&amp;id=11">website</a> or&nbsp;<a href="https://github.com/lszabi/model_railway">GitHub</a> as always.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/2250/log/8308-power-on-hands">Power on hands</a></h2>
                            <small class="authorship">a year ago  &bull;
                                <a class="gray-link" href="/project/2250/log/8308#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-8308"><p>Finally managed to power the AVRs through the TWPC bus. It won't drive a motor yet, but it's enough for the MCU and some LEDs.</p><p>I added a 47uF capacitor to the AVR's Vcc and GND legs. The energy comes from the data pin through an internal diode and stores in the cap for stable and continous power.</p><p><img src="https://cdn.hackaday.io/images/4165721408563520104.jpg"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/2250/log/9520-motor-control">Motor control</a></h2>
                            <small class="authorship">a year ago  &bull;
                                <a class="gray-link" href="/project/2250/log/9520#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-9520"><p>I started developing the motor control part. The motor will be driven by a MOSFET H-brigde with PWM. Here's the motor of the train:</p><p><img src="https://cdn.hackaday.io/images/3411251410093693294.jpg"></p><p>As you can see, It's a basic, common DC motor, nothing fancy.</p><p>The prototype of the H-bridge wasn't too perfect. It didn't use resistors at all, and I connected the gates together. Needless to say, I burned all 4 mosfets. What a shame. Here is the prototype, may it rest in peace:</p><p><img src="https://cdn.hackaday.io/images/9768961410093830933.jpg"></p><p>The new design is somewhat better, using current-limiting and pull-up/down resistors. The P-channel mosfets will be used digitall, while the N-channel mosfets will take care of the PWM control. Here's the schem:</p><p><img src="https://cdn.hackaday.io/images/9014611410093950537.png"></p><p>I look forward to se how that'll work.</p><p>School started recently (yay :/ ) so I have less time to development. I hope I can try this out next weekend though.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/2250/log/10843-motor-control-ftw">Motor control FTW</a></h2>
                            <small class="authorship">10 months ago  &bull;
                                <a class="gray-link" href="/project/2250/log/10843#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-10843"><p>After a short break, I finally have some update. First, the motor. It works! The H-bridge is perfect, and runs only from the USB power it gets from the MEGA. Also, I get rid of the voltage-divider resistors and get a proper CD4050 for the Raspberry-MEGA UART connection. </p><p>I also figured that connecting every device again and again one by one at every power-up can become really annoying. Who wants to do that? Not me, obvoiusly. So I came up with the idea of static IDs. Devices with static ID have to be connected to TWPC line when the master is offline. Then, when it starts, they'll be connected automatically. Connecting devices with auto-assigned ID is still possible though.</p><p>Here is the new breadboard setup with the H-bridge:</p><p><img src="https://cdn.hackaday.io/images/2142021414947437452.jpg"></p><p>That's for the electronics, but that's not all I got. I designed brand new rails with holes and stuff to be modular. I also designed switches (only the static part yet) and assembled a whole train station. Go to my <a href="https://github.com/lszabi/model_railway" target="_blank">GitHub</a> to see the STL files along with the codes and schematics.</p><p>Still no news from the 3D printer...</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/2250/log/17838-rebooting">Rebooting</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/2250/log/17838#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17838"><p>Given up on waiting for Makibox, and ordered another printer from eBay, a Sintron Prusa i3 (take that, Jon Buford). It arrived, and I managed to make it work! So I started working on this project again, brand new code is available on GitHub for the new communication protocol. ( I'm using timer interrupt instead of _delay_ms this time, it's much better). Anyway, first images of test prints coming soon!</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/2250/log/17902-first-test-print-at-last">First test print at last</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/2250/log/17902#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17902"><p>So finally I printed the first rails. I came out just fine.  The bottom rail is a very early prototype with embedded copper wire for as conductive stuff, it'll be better when the whole thing will be together.</p><p><img src="https://cdn.hackaday.io/images/8481521431600099100.jpg"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/2250/log/18500-newly-soldered-electronics">Newly soldered electronics</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/2250/log/18500#discussion-list">
                                    1 comment
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-18500"><p>I recently built the (hopefully) final master station and train h-bridge pcbs. Here are they, just out of the acid, freshly drilled:</p><p><img src="https://cdn.hackaday.io/images/6663001432667890476.JPG"></p><p></p><p>The master station is basically just a breakout board for the ATmega328P.  I made a separate crystall oscillator on a small piece of protoboard. I could've went with a ceramic resonator, but I didn't have any at hand, and the crystal is more accurate anyway. </p><img src="https://cdn.hackaday.io/images/2134031432668046497.JPG"><p><img src="https://cdn.hackaday.io/images/7485691432668090373.jpg"></p><p>Here is the full master board with the mcu, the oscillator, connectors for the serial, power and ISP, and a LED on the usual PORTB 5. All other pins are accessible and there is also space for a pull-down resistor if needed. I've only connected the TWPC cables yet.</p><p><img src="https://cdn.hackaday.io/images/7967181432668319945.JPG"></p><p>Here is the picture of the H-bridge with the four SMD mosfets. It works great, not like the last one. No shortage, no overheating, drives the motor perfectly.</p><p><img src="https://cdn.hackaday.io/images/1889721432668533893.JPG"></p><p>The brain of the train engines is just the MCU itself, it didn't even deserve an own board, a protoboard was just enough. It will be standing in the front of the loco. Behind this will be the h-bridge connected to the yellow wires. The led will be the headlight of the train.</p><p><img src="https://cdn.hackaday.io/images/9170691432668800307.JPG"></p><p>The last piece of the puzzle (for now) is this adapter I made for the raspberry. There is a 4050 ic converting the avr's 5V signal to 3V3, ensuring safe uart connection between the master staion and the pi.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/2250/log/21281-first-steps-test-run">First steps, test run</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/2250/log/21281#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21281"><p>It is finally time to assemble the whole creation. The parts are printed, so let&apos;s put them together! For now, I didn&apos;t use the electronics stuff, I just simply wired an AA cell to the motor to keep things easy.</p><p><img src="https://cdn.hackaday.io/images/2583321437506914046.jpg"><br></p><p>The whole engine is switched by a jumper. The axises of the train are made out of welding rods. The drivetrain consists of a really small 3D printed gear and a basic chipboard screw. The screw is secured to the motor shaft by shrink tubes, which were also used as tires on the driven wheels for better grip. I also added a lage nut in the back of the train for more weight. The gear is so small that I needed a 0.2mm extruder nozzle to print, but it was totally worth it (especially because it only cost 2$ off ebay). I will post some instructions when I build the next loco. Here&apos;s how the drive looks like:</p><table><tbody><tr><td><img src="https://cdn.hackaday.io/images/5713301437507315308.jpg"></td><td><img src="https://cdn.hackaday.io/images/6953221437507340632.jpg"></td></tr></tbody></table><p>For the first test run, I assembled a simple loop, and let my train run in circles again and again. It was so awesome! Look at it yourself:</p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/EcBizrALHng" frameborder="0" allowfullscreen=""></iframe></div>
                            </div>
                        </li>
                    
                </ul>

                
                <div class="pagination">
                    
                    
                    <a href="?page=2" class="grey-gold-button next-button show">Next</a>
                    
                </div>
                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'ONPDRz9o-33r08bDgr9QxXDJhBGlR3TH1MJY';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>