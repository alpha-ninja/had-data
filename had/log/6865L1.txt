<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; A Software Based Academic Aid(Athena) &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F6865%2Flogs%3Fpage%3D1">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/6865-a-software-based-academic-aidathena">A Software Based Academic Aid(Athena)</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">A software based aid for the classroom; aimed at keeping parents, students, and teachers connected and improving the flow of info.</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/80108-mathewtucker1" title="Visit Profile">mathew.tucker.1</a><span>&bull;</span>
                
                a month ago<span>&bull;</span><a href="/project/6865#discussion-list" title="See Comments">0 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/6865-a-software-based-academic-aidathena">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/6865/logs/sort/newest">Newest</option>
                    <option value="/project/6865/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/6865/log/21307-layout">Layout</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/6865/log/21307#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21307"><p>Last Tuesday, 13 JULY 2015, I sat down and began working out the general layout of Athena. I found it seemed most logical to go at this in two ways:</p><p>     1.) Outline the general functionality(as I saw/planed it at the moment)</p><p>     2.) Sketch out the UI</p><p>What I found is that it seemed to make most sense to greet the user with a generic &quot;log in page/prompt.&quot; The prompt would be organized into 4 parts:</p><p>     1.) Title- &quot;Log In&quot;</p><p>     2.) Prompt 1- &quot;&apos;User Type&apos; (drop down: &apos;Student, Teacher, Parent&apos;) &apos;Name&apos; (text               box) &apos;Password&apos; (text box)</p><p>     3.) Prompt 2- &quot;&apos;Registered Yet?&apos; (button: &apos;Register&apos;)</p><p>     4.) Enter Button</p><p>Upon hitting enter, the program would execute the appropriate command that would be limited by a boolean value modified by the &quot;Register&quot; button.</p><p>Assuming the user had not yet registered, and clicked the button accordingly, the program would take them to a registration prompt. Otherwise the program would proceed to compare the &quot;name&quot; and &quot;password&quot; values against its list of users which would be organized by &quot;user type.&quot; In this case, the use of &quot;user type&quot; is simply meant to help organize data and speed up the execution of the code.</p><p>If the user &quot;name&quot; and &quot;password&quot; values fail to correspond with any of those already registered the program will prompt the user with an error and ask if he/she needs to register.</p><p>Conversely, if the user &quot;name&quot; and &quot;password&quot; values pass, the user will be greeted with a nice layout of tabs relating to the classroom. Tabs like: Notes, Homework, Tests, Messages, ect. Each tab will have a set of features, as defined by the user type, made available to the user. For example, a student might click on the &quot;Homework&quot; tab and be greeted by a list of homework that is due. However, if a teacher clicks on the same tab, they be greeted by a prompt to add assignments. And a parent, who clicks on this tab, might be greeted with a brief explanation of the lesson, concepts, or general overview of the assignment so that they might be able to help the student, if need be.</p><p>I hope to upload the sketches soon.</p><p>Next, refining the design and sudo code.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6865/log/21540-created-a-github-account">Created a GitHub Account</a></h2>
                            <small class="authorship">25 days ago  &bull;
                                <a class="gray-link" href="/project/6865/log/21540#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21540"><p>Today I created a GitHub account to store test code on.</p><p><a href="https://github.com/MattTucker22689/Athena.git" target="_blank">GitHub Account: Athena Test Code</a></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6865/log/21541-log-in-bare-bone-designcode">Log In: Bare Bone Design(CODE)</a></h2>
                            <small class="authorship">25 days ago  &bull;
                                <a class="gray-link" href="/project/6865/log/21541#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21541"><pre class="hljs java"><span class="hljs-comment">/*
 * Author: 		Matt Tucker
 *
 * Date Started:	7July15
 * 
 * Description: 	A Java app that is to be organized via unique tabs, representing a different facet of the classroom experience(i.e. Notes, Tests, ect.). The tabs are also to be limited in functionality by the user&apos;s roll in the classroom(i.e. parent, student, teacher). 
 * The following is a barebone design of the Log In UI
 */</span>
<span class="hljs-keyword">import</span> java.awt.*;
<span class="hljs-keyword">import</span> java.awt.event.ActionEvent;
<span class="hljs-keyword">import</span> java.awt.event.ActionListener;

<span class="hljs-keyword">import</span> javax.swing.*;

<span class="hljs-keyword">import</span> java.util.*;
<span class="hljs-keyword">import</span> java.io.*;

<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AthenaLogIn</span> 
</span>{
	Boolean register;
	<span class="hljs-keyword">static</span> String[] type={<span class="hljs-string">&quot;Student&quot;</span>, <span class="hljs-string">&quot;Teacher&quot;</span>, <span class="hljs-string">&quot;Parent&quot;</span>};
	Boolean done1=<span class="hljs-keyword">false</span>;

	<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> 
	</span>{
		JFrame frame = <span class="hljs-keyword">new</span> JFrame(<span class="hljs-string">&quot;LogIn&quot;</span>);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			    
<span class="hljs-comment">////////////////////////////Welcome Screen////////////////////////////</span>
		JPanel f1_panel = <span class="hljs-keyword">new</span> JPanel();
		f1_panel.setPreferredSize(<span class="hljs-keyword">new</span> Dimension(<span class="hljs-number">550</span>, <span class="hljs-number">500</span>));
		
		JPanel subpanel_1= <span class="hljs-keyword">new</span> JPanel();
		JLabel f1_label=<span class="hljs-keyword">new</span> JLabel(<span class="hljs-string">&quot;Log In&quot;</span>);
		subpanel_1.add(f1_label, BorderLayout.NORTH);
		
		<span class="hljs-comment">///Operator Type</span>
		JLabel f1_label2 = <span class="hljs-keyword">new</span> JLabel(<span class="hljs-string">&quot;Please Select a User Type&quot;</span>);
		JComboBox user_type = <span class="hljs-keyword">new</span> JComboBox(type);
		<span class="hljs-comment">////////// ADD LISTENER //////////</span>
		
		
		<span class="hljs-comment">///User Name, Password, and Enter Button</span>
		JPanel subpanel_2 = <span class="hljs-keyword">new</span> JPanel();
		TextField username, password;
		username = <span class="hljs-keyword">new</span> TextField(<span class="hljs-string">&quot;User Name&quot;</span>);
		password = <span class="hljs-keyword">new</span> TextField(<span class="hljs-string">&quot;Password&quot;</span>);
		JButton button = <span class="hljs-keyword">new</span> JButton(<span class="hljs-string">&quot;Enter&quot;</span>);
		<span class="hljs-comment">//ButtonListener click = new ButtonListener();</span>
        <span class="hljs-comment">//button.addActionListener(click);</span>
		<span class="hljs-comment">///Builds SubPanel_2</span>
		subpanel_2.add(f1_label2);
		subpanel_2.add(user_type);
		subpanel_2.add(username);
		subpanel_2.add(password);
		subpanel_2.add(button, BorderLayout.SOUTH);
		<span class="hljs-comment">///////</span>
		
		
		
		<span class="hljs-comment">///New User Register</span>
		JPanel subpanel_3 = <span class="hljs-keyword">new</span> JPanel();
		JLabel f1_label3 = <span class="hljs-keyword">new</span> JLabel(<span class="hljs-string">&quot;Not Registered Yet?&quot;</span>);
		JButton reg = <span class="hljs-keyword">new</span> JButton(<span class="hljs-string">&quot;Register&quot;</span>);
		subpanel_3.add(f1_label3);
		subpanel_3.add(reg);
		
		<span class="hljs-comment">///Adds Subpanels to Main Panel(f1_panel)</span>
		f1_panel.add(subpanel_1, BorderLayout.NORTH);
		f1_panel.add(subpanel_2, BorderLayout.CENTER);
		f1_panel.add(subpanel_3, BorderLayout.SOUTH);
		
		<span class="hljs-comment">/* 
		 		NOTE:	Check User Name and Password Combination against .txt 
		 				File. If Incorrect, PopUp Error, Else Pass To Next 
		 				Screen.
		 				 
		///For Registration
		///User Name and Password Text File
		File file1=new File(&quot;Teacher User Name.txt&quot;);
		File file2=new File(&quot;Student User Name.txt&quot;);
		File file3=new File(&quot;Parent User Name.txt&quot;);
				
				NOTE: Still Need to Write User_type to String
		
		if(user_type==&quot;Teacher&quot;)   
	    {
	    	PrintWriter textout = new PrintWriter(file1);
	    }
	    if(user_type==&quot;Student&quot;)
	    {
	    	PrintWriter textout = new PrintWriter(file2);
	    }
	    else
	    {
	    	PrintWriter textout = new PrintWriter(file3);
	    }
		*/</span>
		
		<span class="hljs-comment">////////////////////////////////////</span>
	    frame.getContentPane().add(f1_panel);
	    frame.pack();
	    frame.setVisible(<span class="hljs-keyword">true</span>);  
	}
    
	<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ButtonListener</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">ActionListener</span>
    </span>{
    	<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">actionPerformed</span><span class="hljs-params">(ActionEvent event)</span>
    	</span>{
    		JButton ok=(JButton)event.getSource();
    		done1=<span class="hljs-keyword">true</span>;
    	}

       
    }

}

</pre><img src="https://cdn.hackaday.io/images/7586901437853257359.png"></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6865/log/21542-main-user-interface-bare-bone-designcode">Main User Interface: Bare Bone Design(CODE)</a></h2>
                            <small class="authorship">25 days ago  &bull;
                                <a class="gray-link" href="/project/6865/log/21542#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21542"><pre class="hljs java"><span class="hljs-comment">/*
 * Author: 			Matt Tucker
 *
 * Date Started:	18July15
 * 
 * Description: 	A Java app that is to be organized via unique tabs, representing a different facet of the classroom experience(i.e. Notes, Tests, ect.). The tabs are also to be limited in functionality by the user&apos;s roll in the classroom(i.e. parent, student, teacher).
 * 			The following is a barebone design of the Home Screen UI
 */</span>
<span class="hljs-keyword">import</span> javax.swing.*;
<span class="hljs-keyword">import</span> java.awt.*;


<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Tabs</span> 
</span>{

	<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> 
	</span>{
		JFrame frame = <span class="hljs-keyword">new</span> JFrame(<span class="hljs-string">&quot;LogIn&quot;</span>);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		<span class="hljs-comment">////////////////////////////////////</span>
		
		<span class="hljs-comment">////	Tabs	////</span>
		JTabbedPane tab_panels = <span class="hljs-keyword">new</span> JTabbedPane();
		
		<span class="hljs-comment">////Tab 1_Grades////</span>
		<span class="hljs-comment">// Create Panel</span>
		JPanel panel_1 = <span class="hljs-keyword">new</span> JPanel();
		panel_1.setPreferredSize(<span class="hljs-keyword">new</span> Dimension(<span class="hljs-number">550</span>, <span class="hljs-number">500</span>));
		<span class="hljs-comment">// &quot;JTabbedPane Object&quot;.addTab(&quot;String&quot;, component);</span>
		tab_panels.addTab(<span class="hljs-string">&quot;Grades&quot;</span>, panel_1);
		
		<span class="hljs-comment">////Tab 2_Notes////</span>
		JPanel panel_2 = <span class="hljs-keyword">new</span> JPanel();
		tab_panels.addTab(<span class="hljs-string">&quot;Notes&quot;</span>, panel_2);
		
		<span class="hljs-comment">////Tab 3_Presentation////</span>
		JPanel panel_3 = <span class="hljs-keyword">new</span> JPanel();
		tab_panels.addTab(<span class="hljs-string">&quot;Presentation&quot;</span>, panel_3);
		
		<span class="hljs-comment">////Tab 4_Tests and Quizzes////</span>
		JPanel panel_4 = <span class="hljs-keyword">new</span> JPanel();
		tab_panels.addTab(<span class="hljs-string">&quot;Tests and Quizzes&quot;</span>, panel_4);
		
		<span class="hljs-comment">////Tab 5_Homework////</span>
		JPanel panel_5 = <span class="hljs-keyword">new</span> JPanel();
		tab_panels.addTab(<span class="hljs-string">&quot;Homework&quot;</span>, panel_5);
		
		
		
		<span class="hljs-comment">////////////////////////////////////</span>
		frame.getContentPane().add(tab_panels);
		frame.pack();
		frame.setVisible(<span class="hljs-keyword">true</span>); 
	}

}

</pre><img src="https://cdn.hackaday.io/images/9386921437853280513.png"><br></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6865/log/21543-main-user-interface-bare-bone-designcode2">Main User Interface: Bare Bone Design(CODE)#2</a></h2>
                            <small class="authorship">25 days ago  &bull;
                                <a class="gray-link" href="/project/6865/log/21543#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21543"><pre class="hljs java"><span class="hljs-comment">/*
 * Author: 			Matt Tucker
 *
 * Date Started:	22July15
 * 
 * Description: 	A Java app that is to be organized via unique tabs, representing a different facet of the classroom experience(i.e. Notes, Tests, ect.). The tabs are also to be limited in functionality by the user&apos;s roll in the classroom(i.e. parent, student, teacher).
 * 
 * 			The following is a brief expansion of the barebone design for the Home Screen UI
 */</span>
<span class="hljs-keyword">import</span> javax.swing.*;
<span class="hljs-keyword">import</span> java.awt.*;


<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Tabs_Continued</span> 
</span>{
	<span class="hljs-keyword">static</span> String user_type;
	
	<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> 
	</span>{
		JFrame frame = <span class="hljs-keyword">new</span> JFrame(<span class="hljs-string">&quot;LogIn&quot;</span>);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		<span class="hljs-comment">////////////////////////////////////</span>
		
		<span class="hljs-comment">////	Tabs	////</span>
		JTabbedPane tab_panels = <span class="hljs-keyword">new</span> JTabbedPane();
		
		<span class="hljs-comment">////Tab 1_Grades////</span>
		<span class="hljs-comment">// Create Panel</span>
		JPanel panel_1 = <span class="hljs-keyword">new</span> JPanel();
		panel_1.setPreferredSize(<span class="hljs-keyword">new</span> Dimension(<span class="hljs-number">550</span>, <span class="hljs-number">500</span>));
		<span class="hljs-comment">// &quot;JTabbedPane Object&quot;.addTab(&quot;String&quot;, component);</span>
		tab_panels.addTab(<span class="hljs-string">&quot;Grades&quot;</span>, panel_1);
		
		<span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Teacher&quot;</span>)
		{
			<span class="hljs-comment">//Show All Grades and Class Average</span>
			<span class="hljs-comment">/*
			 * Pull data from class_grades.txt
			 * Graph each student&apos;s grade
			 * Graph the class average grade
			 */</span>
		}
		<span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Student&quot;</span>)
		{
			<span class="hljs-comment">//Show Student Grades and Class Average</span>
			<span class="hljs-comment">/* 
			 * Graph the student&apos;s grade
			 * Graph the class average grade
			 */</span>
		}
		<span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Parent&quot;</span>)
		{
			<span class="hljs-comment">//Show Student Grades and Class Average</span>
			<span class="hljs-comment">/* 
			 * Graph the student&apos;s grade
			 * Graph the class average grade
			 */</span>
		}
		
		<span class="hljs-comment">////Tab 2_Notes////</span>
		JPanel panel_2 = <span class="hljs-keyword">new</span> JPanel();		
		tab_panels.addTab(<span class="hljs-string">&quot;Notes&quot;</span>, panel_2);
		
		<span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Teacher&quot;</span>)
		{
			<span class="hljs-comment">//Add Notes and Show All Student Notes </span>
		}
		<span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Student&quot;</span>)
		{
			<span class="hljs-comment">//Show Teacher&apos;s Notes and Student&apos;s Notes</span>
		}
		<span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Parent&quot;</span>)
		{
			<span class="hljs-comment">//Show Teacher&apos;s Notes and Student&apos;s Notes</span>
		}
		
		
		<span class="hljs-comment">////Tab 3_Presentation////</span>
		JPanel panel_3 = <span class="hljs-keyword">new</span> JPanel();
		tab_panels.addTab(<span class="hljs-string">&quot;Presentation&quot;</span>, panel_3);
		
		<span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Teacher&quot;</span>)
		{
			<span class="hljs-comment">//Show Class Presentations</span>
		}
		<span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Student&quot;</span>)
		{
			<span class="hljs-comment">//Show Class Presentations</span>
		}
		<span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Parent&quot;</span>)
		{
			<span class="hljs-comment">//Show Class Presentations</span>
		}
		
		<span class="hljs-comment">////Tab 4_Tests and Quizzes////</span>
		JPanel panel_4 = <span class="hljs-keyword">new</span> JPanel();
		tab_panels.addTab(<span class="hljs-string">&quot;Tests and Quizzes&quot;</span>, panel_4);
		
		<span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Teacher&quot;</span>)
		{
			<span class="hljs-comment">//Add/Make Tests and Quizzes</span>
		}
		<span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Student&quot;</span>)
		{
			<span class="hljs-comment">//Show Dates for Tests and Quizzes and Allow Access to Take them</span>
		}
		<span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Parent&quot;</span>)
		{
			<span class="hljs-comment">//Show Dates for Tests and Quizzes</span>
		}
		
		<span class="hljs-comment">////Tab 5_Homework////</span>
		JPanel panel_5 = <span class="hljs-keyword">new</span> JPanel();
		tab_panels.addTab(<span class="hljs-string">&quot;Homework&quot;</span>, panel_5);
		
		<span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Teacher&quot;</span>)
		{
			<span class="hljs-comment">//Add/Make Homework</span>
		}
		<span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Student&quot;</span>)
		{
			<span class="hljs-comment">//Show Dates for Homework and Allow Access to Take them</span>
		}
		<span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Parent&quot;</span>)
		{
			<span class="hljs-comment">//Show Dates for Homework and Related Notes</span>
		}
		
		
		<span class="hljs-comment">////////////////////////////////////</span>
		frame.getContentPane().add(tab_panels);
		frame.pack();
		frame.setVisible(<span class="hljs-keyword">true</span>); 
	}

}

</pre><img src="https://cdn.hackaday.io/images/594931437853379700.png"></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6865/log/21598-grade-graph">Grade Graph</a></h2>
                            <small class="authorship">23 days ago  &bull;
                                <a class="gray-link" href="/project/6865/log/21598#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21598"><p>Found some nice example code for building a graph of multiple data points (Source: <a href="http://www.java-forums.org/new-java/7995-how-plot-graph-java-given-samples.html">http://www.java-forums.org/new-java/7995-how-plot-graph-java-given-samples.html</a>):</p><pre class="hljs java"><span class="hljs-keyword">import</span> java.awt.*;
<span class="hljs-keyword">import</span> java.awt.font.*;
<span class="hljs-keyword">import</span> java.awt.geom.*;
<span class="hljs-keyword">import</span> javax.swing.*;
 
<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Graph_Example2</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">JPanel</span> </span>{
    <span class="hljs-keyword">int</span>[] data = {
        <span class="hljs-number">21</span>, <span class="hljs-number">14</span>, <span class="hljs-number">18</span>, <span class="hljs-number">03</span>, <span class="hljs-number">86</span>, <span class="hljs-number">88</span>, <span class="hljs-number">74</span>, <span class="hljs-number">87</span>, <span class="hljs-number">54</span>, <span class="hljs-number">77</span>,
        <span class="hljs-number">61</span>, <span class="hljs-number">55</span>, <span class="hljs-number">48</span>, <span class="hljs-number">60</span>, <span class="hljs-number">49</span>, <span class="hljs-number">36</span>, <span class="hljs-number">38</span>, <span class="hljs-number">27</span>, <span class="hljs-number">20</span>, <span class="hljs-number">18</span>
    };
    <span class="hljs-keyword">final</span> <span class="hljs-keyword">int</span> PAD = <span class="hljs-number">20</span>;
 
    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">paintComponent</span><span class="hljs-params">(Graphics g)</span> </span>{
        <span class="hljs-keyword">super</span>.paintComponent(g);
        Graphics2D g2 = (Graphics2D)g;
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                            RenderingHints.VALUE_ANTIALIAS_ON);
        <span class="hljs-keyword">int</span> w = getWidth();
        <span class="hljs-keyword">int</span> h = getHeight();
        <span class="hljs-comment">// Draw ordinate.</span>
        g2.draw(<span class="hljs-keyword">new</span> Line2D.Double(PAD, PAD, PAD, h-PAD));
        <span class="hljs-comment">// Draw abcissa.</span>
        g2.draw(<span class="hljs-keyword">new</span> Line2D.Double(PAD, h-PAD, w-PAD, h-PAD));
        <span class="hljs-comment">// Draw labels.</span>
        Font font = g2.getFont();
        FontRenderContext frc = g2.getFontRenderContext();
        LineMetrics lm = font.getLineMetrics(<span class="hljs-string">&quot;0&quot;</span>, frc);
        <span class="hljs-keyword">float</span> sh = lm.getAscent() + lm.getDescent();
        <span class="hljs-comment">// Ordinate label.</span>
        String s = <span class="hljs-string">&quot;data&quot;</span>;
        <span class="hljs-keyword">float</span> sy = PAD + ((h - <span class="hljs-number">2</span>*PAD) - s.length()*sh)/<span class="hljs-number">2</span> + lm.getAscent();
        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; s.length(); i++) {
            String letter = String.valueOf(s.charAt(i));
            <span class="hljs-keyword">float</span> sw = (<span class="hljs-keyword">float</span>)font.getStringBounds(letter, frc).getWidth();
            <span class="hljs-keyword">float</span> sx = (PAD - sw)/<span class="hljs-number">2</span>;
            g2.drawString(letter, sx, sy);
            sy += sh;
        }
        <span class="hljs-comment">// Abcissa label.</span>
        s = <span class="hljs-string">&quot;x axis&quot;</span>;
        sy = h - PAD + (PAD - sh)/<span class="hljs-number">2</span> + lm.getAscent();
        <span class="hljs-keyword">float</span> sw = (<span class="hljs-keyword">float</span>)font.getStringBounds(s, frc).getWidth();
        <span class="hljs-keyword">float</span> sx = (w - sw)/<span class="hljs-number">2</span>;
        g2.drawString(s, sx, sy);
        <span class="hljs-comment">// Draw lines.</span>
        <span class="hljs-keyword">double</span> xInc = (<span class="hljs-keyword">double</span>)(w - <span class="hljs-number">2</span>*PAD)/(data.length-<span class="hljs-number">1</span>);
        <span class="hljs-keyword">double</span> scale = (<span class="hljs-keyword">double</span>)(h - <span class="hljs-number">2</span>*PAD)/getMax();
        g2.setPaint(Color.green.darker());
        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; data.length-<span class="hljs-number">1</span>; i++) {
            <span class="hljs-keyword">double</span> x1 = PAD + i*xInc;
            <span class="hljs-keyword">double</span> y1 = h - PAD - scale*data[i];
            <span class="hljs-keyword">double</span> x2 = PAD + (i+<span class="hljs-number">1</span>)*xInc;
            <span class="hljs-keyword">double</span> y2 = h - PAD - scale*data[i+<span class="hljs-number">1</span>];
            g2.draw(<span class="hljs-keyword">new</span> Line2D.Double(x1, y1, x2, y2));
        }
        <span class="hljs-comment">// Mark data points.</span>
        g2.setPaint(Color.red);
        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; data.length; i++) {
            <span class="hljs-keyword">double</span> x = PAD + i*xInc;
            <span class="hljs-keyword">double</span> y = h - PAD - scale*data[i];
            g2.fill(<span class="hljs-keyword">new</span> Ellipse2D.Double(x-<span class="hljs-number">2</span>, y-<span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>));
        }
    }
 
    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getMax</span><span class="hljs-params">()</span> </span>{
        <span class="hljs-keyword">int</span> max = -Integer.MAX_VALUE;
        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; data.length; i++) {
            <span class="hljs-keyword">if</span>(data[i] &gt; max)
                max = data[i];
        }
        <span class="hljs-keyword">return</span> max;
    }
 
    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>{
        JFrame f = <span class="hljs-keyword">new</span> JFrame();
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.add(<span class="hljs-keyword">new</span> Graph_Example2());
        f.setSize(<span class="hljs-number">400</span>,<span class="hljs-number">400</span>);
        f.setLocation(<span class="hljs-number">200</span>,<span class="hljs-number">200</span>);
        f.setVisible(<span class="hljs-keyword">true</span>);
    }
}</pre><p><img src="https://cdn.hackaday.io/images/6296731437972195511.png"></p><p>I plan on using it as the skeleton for my own purposes. Modifications as follow(MIND THE COMMENTS):</p><p><span></span></p><pre class="hljs coffeescript">public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Graph_Grades</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">JPanel</span> </span>

{

<span class="hljs-regexp">///Create Loop To Define Data Points

int[][] data = 

{};

///</span>

    final int PAD = k;<span class="hljs-regexp">//</span>Use Max Value <span class="hljs-keyword">for</span> Array int[j][k]

    protected <span class="hljs-reserved">void</span> paintComponent(Graphics g) 

    {

<span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span>

 private int getMax() 

    {

    <span class="hljs-regexp">//</span>Add Loop to Move thru ALL Students

        int max = -Integer.MAX_VALUE;

        <span class="hljs-keyword">for</span>(int i = <span class="hljs-number">0</span>; i &lt; data.length; i++) 

        {

            <span class="hljs-keyword">if</span>(data[i] &gt; max)

                max = data[i];

        }

        <span class="hljs-keyword">return</span> max;

    }

<span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span><span class="hljs-regexp">//////</span>

    public static <span class="hljs-reserved">void</span> main(String[] args) 

    {

        JFrame f = <span class="hljs-keyword">new</span> JFrame();

        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        f.add(<span class="hljs-keyword">new</span> Graph_Grades());

        f.setSize(<span class="hljs-number">400</span>,<span class="hljs-number">400</span>);

        f.setLocation(<span class="hljs-number">200</span>,<span class="hljs-number">200</span>);

        f.setVisible(<span class="hljs-literal">true</span>);

    }

    <span class="hljs-regexp">//</span>Build Student Object to Import Data Thru

}</pre><br></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6865/log/22749-athena-bare-bone-designcode3">Athena: Bare Bone Design(CODE)#3</a></h2>
                            <small class="authorship">5 days ago  &bull;
                                <a class="gray-link" href="/project/6865/log/22749#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22749"><p>I&apos;ve been busy the last few days/weeks with a friend visiting, so progress was put on halt. However, yesterday and today I&apos;ve been doing a bit of extra coding work... Here is what I&apos;ve got:</p><pre class="hljs java"><span class="hljs-keyword">/*
 * Author:             Matt Tucker
 *
 * Date Started:    22July15
 * 
 * Description:     A Java app that is to be organized via unique tabs, representing a different facet of the classroom experience(i.e. Notes, Tests, ect.). The tabs are also to be limited in functionality by the user&apos;s roll in the classroom(i.e. parent, student, teacher).
*/
<span class="redactor-invisible-space">
</span>import</span> java.awt.*;
<span class="hljs-keyword">import</span> java.awt.event.*;
 
<span class="hljs-keyword">import</span> javax.swing.*;
 
<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Athena_1</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">JPanel</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">ActionListener</span> 
</span>{
    <span class="hljs-keyword">static</span> String[] type={<span class="hljs-string">&quot;Student&quot;</span>, <span class="hljs-string">&quot;Teacher&quot;</span>, <span class="hljs-string">&quot;Parent&quot;</span>};
    <span class="hljs-keyword">static</span> String user_type;
 
    JPanel f1_panel = <span class="hljs-keyword">new</span> JPanel();
    JTabbedPane tab_panels = <span class="hljs-keyword">new</span> JTabbedPane();
 
    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Athena_1</span><span class="hljs-params">()</span> 
    </span>{
        <span class="hljs-comment">//////////////LOG IN Screen////////////////</span>
        f1_panel.setPreferredSize(<span class="hljs-keyword">new</span> Dimension(<span class="hljs-number">550</span>, <span class="hljs-number">500</span>));
         
        JPanel subpanel_1= <span class="hljs-keyword">new</span> JPanel();
        JLabel f1_label=<span class="hljs-keyword">new</span> JLabel(<span class="hljs-string">&quot;Log In&quot;</span>);
        subpanel_1.add(f1_label, BorderLayout.NORTH);
         
        <span class="hljs-comment">///Operator Type</span>
        JLabel f1_label2 = <span class="hljs-keyword">new</span> JLabel(<span class="hljs-string">&quot;Please Select a User Type&quot;</span>);
        JComboBox user_type_box = <span class="hljs-keyword">new</span> JComboBox(type);
         
         
        <span class="hljs-comment">///User Name, Password, and Enter Button</span>
        JPanel subpanel_2 = <span class="hljs-keyword">new</span> JPanel();
        TextField name, password;
        name = <span class="hljs-keyword">new</span> TextField(<span class="hljs-string">&quot;User Name&quot;</span>);
        password = <span class="hljs-keyword">new</span> TextField(<span class="hljs-string">&quot;Password&quot;</span>);
        JButton button = <span class="hljs-keyword">new</span> JButton(<span class="hljs-string">&quot;Enter&quot;</span>);
        button.addActionListener(<span class="hljs-keyword">this</span>);
        <span class="hljs-comment">///Builds SubPanel_2</span>
        subpanel_2.add(f1_label2);
        subpanel_2.add(user_type_box);
        subpanel_2.add(name);
        subpanel_2.add(password);
        subpanel_2.add(button, BorderLayout.SOUTH);
        ////
         
         
         
        ///New User Register
        JPanel subpanel_3 = new JPanel();
        JLabel f1_label3 = new JLabel(&quot;Not Registered Yet?&quot;);
        JButton reg = new JButton(&quot;Register&quot;);
        subpanel_3.add(f1_label3);
        subpanel_3.add(reg);
         
         
         
        <span class="hljs-comment">///Adds Subpanels to Main Panel(f1_panel)</span>
        f1_panel.add(subpanel_1, BorderLayout.NORTH);
        f1_panel.add(subpanel_2, BorderLayout.CENTER);
        f1_panel.add(subpanel_3, BorderLayout.SOUTH);
         
         
        <span class="hljs-comment">///////////////////////////Tabs_Athena//////////////////////////</span>
         
        <span class="hljs-comment">////**Tab 1_Home**////</span>
        <span class="hljs-comment">// Create Panel</span>
        JPanel panel_1 = <span class="hljs-keyword">new</span> JPanel();
        panel_1.setPreferredSize(<span class="hljs-keyword">new</span> Dimension(<span class="hljs-number">550</span>, <span class="hljs-number">500</span>));
        <span class="hljs-comment">// &quot;JTabbedPane Object&quot;.addTab(&quot;String&quot;, component);</span>
        tab_panels.addTab(<span class="hljs-string">&quot;Home&quot;</span>, panel_1);
         
        <span class="hljs-comment">////**Tab 2_Grades**////</span>
        <span class="hljs-comment">// Create Panel</span>
        JPanel panel_2 = <span class="hljs-keyword">new</span> JPanel();
        panel_2.setPreferredSize(<span class="hljs-keyword">new</span> Dimension(<span class="hljs-number">550</span>, <span class="hljs-number">500</span>));
        <span class="hljs-comment">// &quot;JTabbedPane Object&quot;.addTab(&quot;String&quot;, component);</span>
        <span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Teacher&quot;</span>)
        {
            <span class="hljs-comment">//Show All Grades and Class Average</span>
            <span class="hljs-comment">//</span>
            <span class="hljs-comment">// Pull data from class_grades.txt</span>
            <span class="hljs-comment">// Graph each student&apos;s grade</span>
            <span class="hljs-comment">// Graph the class average grade</span>
            <span class="hljs-comment">//</span>
        }
        <span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Student&quot;</span>)
        {
            <span class="hljs-comment">//Show Student Grades and Class Average</span>
            <span class="hljs-comment">// </span>
            <span class="hljs-comment">// Graph the student&apos;s grade</span>
            <span class="hljs-comment">// Graph the class average grade</span>
            <span class="hljs-comment">//</span>
        }
        <span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Parent&quot;</span>)
        {
            <span class="hljs-comment">//Show Student Grades and Class Average</span>
            <span class="hljs-comment">// </span>
            <span class="hljs-comment">// Graph the student&apos;s grade</span>
            <span class="hljs-comment">// Graph the class average grade</span>
            <span class="hljs-comment">//</span>
        }
        tab_panels.addTab(<span class="hljs-string">&quot;Grades&quot;</span>, panel_2);
        <span class="hljs-comment">////**Tab 3_Notes**////</span>
        JPanel panel_3 = <span class="hljs-keyword">new</span> JPanel();
         
        <span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Teacher&quot;</span>)
        {
            <span class="hljs-comment">//Add Notes and Show All Student Notes </span>
        }
        <span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Student&quot;</span>)
        {
            <span class="hljs-comment">//Show Teacher&apos;s Notes and Student&apos;s Notes</span>
        }
        <span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Parent&quot;</span>)
        {
            <span class="hljs-comment">//Show Teacher&apos;s Notes and Student&apos;s Notes</span>
        }       
        tab_panels.addTab(<span class="hljs-string">&quot;Notes&quot;</span>, panel_3);
         
         
        <span class="hljs-comment">////**Tab 4_Presentation**////</span>
        JPanel panel_4 = <span class="hljs-keyword">new</span> JPanel();
        <span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Teacher&quot;</span>)
        {
            <span class="hljs-comment">//Show Class Presentations</span>
        }
        <span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Student&quot;</span>)
        {
            <span class="hljs-comment">//Show Class Presentations</span>
        }
        <span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Parent&quot;</span>)
        {
            <span class="hljs-comment">//Show Class Presentations</span>
        }
        tab_panels.addTab(<span class="hljs-string">&quot;Presentation&quot;</span>, panel_4);
         
        <span class="hljs-comment">////**Tab 5_Tests and Quizzes**////</span>
        JPanel panel_5 = <span class="hljs-keyword">new</span> JPanel();
        <span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Teacher&quot;</span>)
        {
            <span class="hljs-comment">//Add/Make Tests and Quizzes</span>
        }
        <span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Student&quot;</span>)
        {
            <span class="hljs-comment">//Show Dates for Tests and Quizzes and Allow Access to Take them</span>
        }
        <span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Parent&quot;</span>)
        {
            <span class="hljs-comment">//Show Dates for Tests and Quizzes</span>
        }
        tab_panels.addTab(<span class="hljs-string">&quot;Tests and Quizzes&quot;</span>, panel_5);
         
        <span class="hljs-comment">////**Tab 6_Homework**////</span>
        JPanel panel_6 = <span class="hljs-keyword">new</span> JPanel();
         
        <span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Teacher&quot;</span>)
        {
            <span class="hljs-comment">//Add/Make Homework</span>
        }
        <span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Student&quot;</span>)
        {
            <span class="hljs-comment">//Show Dates for Homework and Allow Access to Take them</span>
        }
        <span class="hljs-keyword">if</span>(user_type==<span class="hljs-string">&quot;Parent&quot;</span>)
        {
            <span class="hljs-comment">//Show Dates for Homework and Related Notes</span>
        }
        tab_panels.addTab(<span class="hljs-string">&quot;Homework&quot;</span>, panel_6);
        <span class="hljs-comment">/////////////Add panels////////</span>
        add(f1_panel);
    }
 
    <span class="hljs-javadoc">/** Listens to the buttons and perfomr the swap. */</span>
    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">actionPerformed</span><span class="hljs-params">(ActionEvent e)</span> 
    </span>{
 
        <span class="hljs-keyword">for</span> (Component component : getComponents())
            {
            remove(f1_panel);
            add(tab_panels);
            }
 
        repaint();
        revalidate();
    }
 
    <span class="hljs-comment">/*
     * Create the GUI and show it.
     */</span>
    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">createAndShowGUI</span><span class="hljs-params">()</span> 
    </span>{
        <span class="hljs-comment">// Create and set up the window.</span>
        JFrame frame = <span class="hljs-keyword">new</span> JFrame(<span class="hljs-string">&quot;Athena&quot;</span>);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
 
        <span class="hljs-comment">// Create and set up the content pane.</span>
        JComponent newContentPane = <span class="hljs-keyword">new</span> Athena_1();
        newContentPane.setOpaque(<span class="hljs-keyword">true</span>); <span class="hljs-comment">// content panes must be opaque</span>
        frame.setContentPane(newContentPane);
 
        <span class="hljs-comment">// Display the window.</span>
        frame.pack();
        frame.setVisible(<span class="hljs-keyword">true</span>);
    }
 
    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> 
    </span>{
        <span class="hljs-comment">// Creates and Shows GUI.</span>
        javax.swing.SwingUtilities.invokeLater(<span class="hljs-keyword">new</span> Runnable() 
        {
            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">run</span><span class="hljs-params">()</span> </span>{
                createAndShowGUI();
            }
        });
    }
}</pre>As you can see, I&apos;ve begun throwing things together. Currently, the program allows a user to &quot;log in,&quot; I use quotations as it does not yet check user inputs against registered users; and, greets them with a new screen(panel) composed of tabs.<p>I have also added a tab titled, &quot;Home.&quot; The idea behind this new tab is that it can be used to:</p><p>For students and parents, summarize a students performance and the agenda of the day as well as highlight area&apos;s of weaknesses</p><p>For a teacher, can do the same except for the class as a whole as opposed to an individual student. Perhaps I can later use this area to highlight which students a teacher might want to focus on due to performance issues.</p><p>I&apos;m currently turning my attention to the listener, and writing the code for the registration screen(panel). I&apos;ll admit, I&apos;m finding that adding the listener to multiple buttons and having it execute different commands depending on the button is a bit more difficult than I had originally anticipated.</p><p>After that, I hope to build the needed objects to represent each student, teacher, and parent. As well as develop a means to collect and store information such as user names, first and last names, passwords, grades, notes, presentations,  ect.</p><p>Following which, I hope to modify the messaging service</p><p>And finally, populate each tab with the appropriate material.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6865/log/23201-athena-bare-bone-designcode4">Athena: Bare Bone Design(CODE)#4</a></h2>
                            <small class="authorship">2 days ago  &bull;
                                <a class="gray-link" href="/project/6865/log/23201#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23201"><p>Here is the barebones version of Athena. Running/looking thru it you will find the tabs are not populated and a total lack of user objects for storage and user authentication. Again, this is barebones... the empty shell. The husk of what will hold the guts of Athena. </p><p>Feel free to ask any questions you may have.</p><pre class="hljs java"><span class="hljs-comment">/*
 * Author: 			Matt Tucker
 *
 * Date Started:	16AUG15
 * 
 * Description: 	<span class="redactor-invisible-space"></span>A Java app that is to be 
organized via unique tabs, representing a different 
facet of the classroom experience(i.e. Notes, Tests, 
ect.). The tabs are also to be limited in functionality by the user&apos;s roll in the classroom(i.e. parent, 
student, teacher).
 * 
 * 

NOTE:			
1.)Things to still be added: user_name and password 
check(objects), populate tabs.
 * 					
 */</span>

<span class="hljs-keyword">import</span> java.awt.*;
<span class="hljs-keyword">import</span> java.awt.event.*;

<span class="hljs-keyword">import</span> javax.swing.*;
 
<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Athena_3</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">JPanel</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">ActionListener</span> 
</span>{
	<span class="hljs-keyword">static</span> String[] type={<span class="hljs-string">&quot;Student&quot;</span>, <span class="hljs-string">&quot;Teacher&quot;</span>, <span class="hljs-string">&quot;Parent&quot;</span>};<span class="hljs-comment">//User type Array</span>
	String user_type=<span class="hljs-string">&quot;blank&quot;</span>;<span class="hljs-comment">//User type String</span>
    String[] period={<span class="hljs-string">&quot;Class Selection&quot;</span>};<span class="hljs-comment">//Class String Array</span>
    String[] student={<span class="hljs-string">&quot;Student Selection&quot;</span>};<span class="hljs-comment">//Student Array</span>
	JComboBox user_type_box = <span class="hljs-keyword">new</span> JComboBox(type);<span class="hljs-comment">//Builds Drop Down Box Object</span>
	JComboBox period_box = <span class="hljs-keyword">new</span> JComboBox(period);<span class="hljs-comment">//Builds Drop Down Box Object</span>
	JComboBox student_box = <span class="hljs-keyword">new</span> JComboBox(student);<span class="hljs-comment">//Builds Drop Down Box Object</span>
    JButton button = <span class="hljs-keyword">new</span> JButton(<span class="hljs-string">&quot;Enter&quot;</span>);<span class="hljs-comment">//Enter Button to Navigate to next Panel(*Later, Checks Values Entered into User Name and Password*)</span>
	JButton reg = <span class="hljs-keyword">new</span> JButton(<span class="hljs-string">&quot;Register&quot;</span>);<span class="hljs-comment">//Registration Button</span>
    JPanel f1_panel = <span class="hljs-keyword">new</span> JPanel();<span class="hljs-comment">//First Main Panel, &quot;Log In&quot; Panel</span>
    JTabbedPane tab_panels = <span class="hljs-keyword">new</span> JTabbedPane();<span class="hljs-comment">//Second Main Panel, Athena Tab Panels</span>
    JPanel panel_1 = <span class="hljs-keyword">new</span> JPanel();<span class="hljs-comment">//Panel for Home Tab</span>
    JPanel panel_2 = <span class="hljs-keyword">new</span> JPanel();<span class="hljs-comment">//Panel for Grades Tab</span>
    JPanel panel_3 = <span class="hljs-keyword">new</span> JPanel();<span class="hljs-comment">//Panel for Notes Tab</span>
    JPanel panel_4 = <span class="hljs-keyword">new</span> JPanel();<span class="hljs-comment">//Panel for Presentations Tab</span>
    JPanel panel_5 = <span class="hljs-keyword">new</span> JPanel();<span class="hljs-comment">//Panel for Tests and Quizzes Tab</span>
    JPanel panel_6 = <span class="hljs-keyword">new</span> JPanel();<span class="hljs-comment">//Panel for Homework Tab</span>
    JPanel registaration = <span class="hljs-keyword">new</span> JPanel();
    JButton logout = <span class="hljs-keyword">new</span> JButton(<span class="hljs-string">&quot;Log Out&quot;</span>);<span class="hljs-comment">//Returns user to Log In Screen*Later Add sets user values to &quot;blank&quot;*</span>
	JButton button2 = <span class="hljs-keyword">new</span> JButton(<span class="hljs-string">&quot;Enter&quot;</span>);<span class="hljs-comment">//Adds New User to List of Users, Stores: type, user name, first name, last name, password</span>
 
    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Athena_3</span><span class="hljs-params">()</span> 
    </span>{
        <span class="hljs-comment">////////////////LOG IN Screen//////////////////</span>
        f1_panel.setPreferredSize(<span class="hljs-keyword">new</span> Dimension(<span class="hljs-number">550</span>, <span class="hljs-number">500</span>));
        
        <span class="hljs-comment">///Title</span>
        JPanel subpanel_1= <span class="hljs-keyword">new</span> JPanel();
        JLabel f1_label=<span class="hljs-keyword">new</span> JLabel(<span class="hljs-string">&quot;     Log In     &quot;</span>);
        subpanel_1.add(f1_label, BorderLayout.NORTH);
        
        <span class="hljs-comment">///Operator Type</span>
        JLabel f1_label2 = <span class="hljs-keyword">new</span> JLabel(<span class="hljs-string">&quot;Please Select a User Type&quot;</span>);<span class="hljs-comment">//Prompt for &quot;user_type_box&quot; which will be used to define a value for &quot;user_type&quot;</span>
        
        <span class="hljs-comment">///User Name, Password, and Enter Button</span>
        JPanel subpanel_2 = <span class="hljs-keyword">new</span> JPanel();
        TextField name, password;
        name = <span class="hljs-keyword">new</span> TextField(<span class="hljs-string">&quot;User Name&quot;</span>);<span class="hljs-comment">//Text Box to Enter User Name</span>
        password = <span class="hljs-keyword">new</span> TextField(<span class="hljs-string">&quot;Password&quot;</span>);<span class="hljs-comment">//Text Box to Enter Password</span>
        button.addActionListener(<span class="hljs-keyword">this</span>);<span class="hljs-comment">//Navigates to the &quot;Tabs&quot; Panel</span>
        reg.addActionListener(<span class="hljs-keyword">this</span>);<span class="hljs-comment">//Navigates to the &quot;Registration&quot; Panel</span>
        
        <span class="hljs-comment">///Builds SubPanel_2</span>
        subpanel_2.add(f1_label2);
        subpanel_2.add(user_type_box);<span class="hljs-comment">//&quot;user_type_box&quot; is used to define a value for &quot;user_type&quot;</span>
        subpanel_2.add(name);
        subpanel_2.add(password);
        subpanel_2.add(button, BorderLayout.SOUTH); 
        
        <span class="hljs-comment">///New User Register(*ADD LATER, WILL BE USED TO NAVIGATE TO REGISTRATION*)</span>
        JPanel subpanel_3 = <span class="hljs-keyword">new</span> JPanel();
        JLabel f1_label3 = <span class="hljs-keyword">new</span> JLabel(<span class="hljs-string">&quot;Not Registered Yet?&quot;</span>);
        subpanel_3.add(f1_label3);
        subpanel_3.add(reg);
        
        <span class="hljs-comment">///Adds Subpanels to f1_panel</span>
        f1_panel.add(subpanel_1, BorderLayout.NORTH);
        f1_panel.add(subpanel_2, BorderLayout.CENTER);
        f1_panel.add(subpanel_3, BorderLayout.SOUTH);
         
         
        <span class="hljs-comment">///////////////////////////Tabs_Athena////////////////////////// </span>
        
        <span class="hljs-comment">////**Tab 1_Home**////</span>
        panel_1.setPreferredSize(<span class="hljs-keyword">new</span> Dimension(<span class="hljs-number">550</span>, <span class="hljs-number">500</span>));
    	panel_1.add(logout);
    	logout.addActionListener(<span class="hljs-keyword">this</span>);
		panel_1.add(period_box); <span class="hljs-comment">//*ADD LATER LIMIT TAB PRESENTATION BASED ON SELECTED CLASS TIME/PERIOD*</span>
        tab_panels.addTab(<span class="hljs-string">&quot;Home&quot;</span>, panel_1);<span class="hljs-comment">// &quot;JTabbedPane Object&quot;.addTab(&quot;String&quot;, component);</span>
       
        <span class="hljs-comment">////**Tab 2_Grades**////</span>
        tab_panels.addTab(<span class="hljs-string">&quot;Grades&quot;</span>, panel_2);<span class="hljs-comment">// &quot;JTabbedPane Object&quot;.addTab(&quot;String&quot;, component);</span>
        
        <span class="hljs-comment">////**Tab 3_Notes**////     </span>
        tab_panels.addTab(<span class="hljs-string">&quot;Notes&quot;</span>, panel_3);
         
        <span class="hljs-comment">////**Tab 4_Presentation**////</span>
        tab_panels.addTab(<span class="hljs-string">&quot;Presentation&quot;</span>, panel_4);
         
        <span class="hljs-comment">////**Tab 5_Tests and Quizzes**////</span>
        tab_panels.addTab(<span class="hljs-string">&quot;Tests and Quizzes&quot;</span>, panel_5);
         
        <span class="hljs-comment">////**Tab 6_Homework**////</span>
        tab_panels.addTab(<span class="hljs-string">&quot;Homework&quot;</span>, panel_6);
        
        <span class="hljs-comment">///////////////////////////Registration//////////////////////////</span>
		registaration.setPreferredSize(<span class="hljs-keyword">new</span> Dimension(<span class="hljs-number">550</span>, <span class="hljs-number">500</span>));
		
        JPanel subpanel_r1= <span class="hljs-keyword">new</span> JPanel();
		JLabel r1_label=<span class="hljs-keyword">new</span> JLabel(<span class="hljs-string">&quot;Registration&quot;</span>);
		subpanel_r1.add(r1_label, BorderLayout.NORTH);

		<span class="hljs-comment">///Operator Type and Name</span>
		JLabel r1_label2 = <span class="hljs-keyword">new</span> JLabel(<span class="hljs-string">&quot;Please Select a User Type&quot;</span>);
		JComboBox user_type = <span class="hljs-keyword">new</span> JComboBox(type);
		JPanel subpanel_r2 = <span class="hljs-keyword">new</span> JPanel();
		JPanel subpanel_r3 = <span class="hljs-keyword">new</span> JPanel();
		JPanel subpanel_r4 = <span class="hljs-keyword">new</span> JPanel();
		TextField username, firstname, lastname, password_tf;
		JLabel r1_label3 = <span class="hljs-keyword">new</span> JLabel(<span class="hljs-string">&quot;Enter a User Name&quot;</span>);
		username = <span class="hljs-keyword">new</span> TextField(<span class="hljs-string">&quot;User Name&quot;</span>);
		JLabel r1_label4 = <span class="hljs-keyword">new</span> JLabel(<span class="hljs-string">&quot;Enter your First Name&quot;</span>);
		firstname = <span class="hljs-keyword">new</span> TextField(<span class="hljs-string">&quot;First Name&quot;</span>);
		JLabel r1_label5 = <span class="hljs-keyword">new</span> JLabel(<span class="hljs-string">&quot;Enter your Last Name&quot;</span>);
		lastname = <span class="hljs-keyword">new</span> TextField(<span class="hljs-string">&quot;Last Name&quot;</span>);
		JLabel r1_label6 = <span class="hljs-keyword">new</span> JLabel(<span class="hljs-string">&quot;Enter a Password&quot;</span>);
		password_tf = <span class="hljs-keyword">new</span> TextField(<span class="hljs-string">&quot;Password&quot;</span>);
		button2.addActionListener(<span class="hljs-keyword">this</span>);
		<span class="hljs-comment">///Adds Action Listener to Button</span>

		<span class="hljs-comment">///Builds SubPanel_2</span>
		subpanel_r2.add(r1_label2);
		subpanel_r2.add(user_type);
		subpanel_r2.add(r1_label3);
		subpanel_r2.add(username);
		subpanel_r3.add(r1_label4);
		subpanel_r3.add(firstname);
		subpanel_r3.add(r1_label5);
		subpanel_r3.add(lastname);
		subpanel_r4.add(r1_label6);
		subpanel_r4.add(password_tf);
		subpanel_r4.add(button2, BorderLayout.SOUTH);

		registaration.add(subpanel_r1, BorderLayout.NORTH);
		registaration.add(subpanel_r2, BorderLayout.CENTER);
		registaration.add(subpanel_r3, BorderLayout.CENTER);
		registaration.add(subpanel_r4, BorderLayout.SOUTH);
        
        
        <span class="hljs-comment">/////////////Add panels////////</span>
        add(f1_panel);
    }
 
    <span class="hljs-comment">/////////////LISETENER////////////////////</span>
    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">actionPerformed</span><span class="hljs-params">(ActionEvent e)</span> 
    </span>{
    	<span class="hljs-keyword">if</span>(button==e.getSource())<span class="hljs-comment">//Removes Log In Panel and Replaces it with Tabs Panel </span>
    	{
    		user_type=(String) (user_type_box.getSelectedItem());
            <span class="hljs-comment">//The following if-statements limit what is presented in the tabs based on &quot;user_type&quot;</span>
            <span class="hljs-comment">//&quot;user_type&quot; is defined by earlier selection in &quot;user_type_box&quot;</span>
            <span class="hljs-keyword">if</span>(user_type.equals(<span class="hljs-string">&quot;Teacher&quot;</span>))<span class="hljs-comment">//If &quot;Teacher&quot; is selected, &quot;Grades&quot; Tab should be populated Accordingly</span>
            {
            	panel_2.add(student_box);
                <span class="hljs-comment">//Show All Grades and Class Average</span>
                <span class="hljs-comment">//</span>
                <span class="hljs-comment">// Pull data from class_grades.txt</span>
                <span class="hljs-comment">// Graph each student&apos;s grade</span>
                <span class="hljs-comment">// Graph the class average grade</span>
                <span class="hljs-comment">//</span>
            	
            	<span class="hljs-comment">//Add/Delete/Show Notes and Show All Student Notes</span>
            	
            	<span class="hljs-comment">//Add/Delete/Show Class Presentations</span>
            	
                <span class="hljs-comment">//Add/Delete/Make/Show Tests and Quizzes</span>
            	
            	<span class="hljs-comment">//Add/Delete/Make/Show Homework</span>
            }
            <span class="hljs-function"><span class="hljs-keyword">else</span> <span class="hljs-title">if</span><span class="hljs-params">(user_type.equals(<span class="hljs-string">&quot;Student&quot;</span>)</span>)
            </span>{
                <span class="hljs-comment">//Show Student Grades and Class Average</span>
                <span class="hljs-comment">// </span>
                <span class="hljs-comment">// Graph the student&apos;s grade</span>
                <span class="hljs-comment">// Graph the class average grade</span>
                <span class="hljs-comment">//</span>
            	
            	<span class="hljs-comment">//Show Teacher&apos;s Notes and Student&apos;s Notes</span>
            	
            	<span class="hljs-comment">//Show Class Presentations</span>
            	
            	<span class="hljs-comment">//Show Dates for Tests and Quizzes and Allow Access to Take them</span>

                <span class="hljs-comment">//Show Dates for Homework and Allow Access to Take them</span>
            }
            <span class="hljs-keyword">else</span>
            {
                <span class="hljs-comment">//Show Student Grades and Class Average</span>
                <span class="hljs-comment">// </span>
                <span class="hljs-comment">// Graph the student&apos;s grade</span>
                <span class="hljs-comment">// Graph the class average grade</span>
                <span class="hljs-comment">//</span>
            	
            	<span class="hljs-comment">//Show Teacher&apos;s Notes and Student&apos;s Notes</span>
            	
            	<span class="hljs-comment">//Show Class Presentations</span>
            	
            	<span class="hljs-comment">//Show Dates for Tests and Quizzes</span>

                <span class="hljs-comment">//Show Dates for Homework and Related Notes</span>
            }
            remove(f1_panel);
            add(tab_panels);
            <span class="hljs-comment">//System.out.println(&quot;This takes you to the Tabs Panel&quot;);</span>
            <span class="hljs-comment">//System.out.println(&quot;This is the selected user type: &quot;+user_type);//Checks if value is being passed to user_type</span>
    	}
    	
    	<span class="hljs-function"><span class="hljs-keyword">else</span> <span class="hljs-title">if</span><span class="hljs-params">(reg==e.getSource()</span>)<span class="hljs-comment">//Removes Log In Panel and Replaces it with Registration Panel </span>
    	</span>{
    		remove(f1_panel);
    		add(registaration);
    		<span class="hljs-comment">//System.out.println(&quot;This takes you to the Registration Panel&quot;);//Checks if Code is recognizing the &quot;reg&quot; button</span>
    	}
    	<span class="hljs-function"><span class="hljs-keyword">else</span> <span class="hljs-title">if</span><span class="hljs-params">(logout==e.getSource()</span>)<span class="hljs-comment">//Replace object values with an &quot;empty&quot; object</span>
    	</span>{
            remove(tab_panels);
            add(f1_panel);
    		
    	}
    	<span class="hljs-function"><span class="hljs-keyword">else</span> <span class="hljs-title">if</span><span class="hljs-params">(button2==e.getSource()</span>)<span class="hljs-comment">//Stores users info in appropriate location</span>
    	</span>{
            remove(registaration);
            add(f1_panel);
    		
    	}
    	<span class="hljs-keyword">else</span>
    	{
    		System.out.println(<span class="hljs-string">&quot;Source not known&quot;</span>);<span class="hljs-comment">//Prints the component&apos;s name</span>
    	}
        repaint();
        revalidate();
    }
 
    <span class="hljs-comment">///////////////BUILDS GUI////////////////////</span>
    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">createAndShowGUI</span><span class="hljs-params">()</span> 
    </span>{
        <span class="hljs-comment">// Create and set up the window.</span>
        JFrame frame = <span class="hljs-keyword">new</span> JFrame(<span class="hljs-string">&quot;Athena&quot;</span>);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
 
        <span class="hljs-comment">// Create and set up the content pane.</span>
        JComponent newContentPane = <span class="hljs-keyword">new</span> Athena_3();
        newContentPane.setOpaque(<span class="hljs-keyword">true</span>); <span class="hljs-comment">// content panes must be opaque</span>
        frame.setContentPane(newContentPane);
 
        <span class="hljs-comment">// Display the window.</span>
        frame.pack();
        frame.setVisible(<span class="hljs-keyword">true</span>);
    }
 
    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> 
    </span>{
        <span class="hljs-comment">// Creates and Shows GUI.</span>
        javax.swing.SwingUtilities.invokeLater(<span class="hljs-keyword">new</span> Runnable() 
        {
            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">run</span><span class="hljs-params">()</span> 
            </span>{
                createAndShowGUI();
            }
        });
    }
}</pre>
<p> It might be worth mentioning, I do hope to add a messaging feature later.</p><p>Again the idea of Athena is to run on any device with internet connection. To give a student, teacher, or parent the means to access any and all class materials in an organized format. As well as, the ability to stay informed and up to date on progress in class. This is access to the classroom, on a screen, 24/7. </p><p>Lost your notes? Solved that! Forgot the h/w assignment? Found it! Forgot part of today&apos;s lecture? We saved that for you too! All you need is internet access and a school with a dedicated means of storing the data via the internet!</p><p>Note: This same idea could be extended to other industries/facets of life as well! Work meetings anyone?</p><p>Here is a quick glimpse of what the GUI looks like:</p><p>Log In screen-</p><p><img src="https://cdn.hackaday.io/images/3044421439781890648.png"> </p><p>Athena(Tabs Panel: Click &quot;Enter&quot; button)-<br></p><p><img src="https://cdn.hackaday.io/images/8805101439781979784.png"></p><p>Log In(Click &quot;Log Out&quot; button)-</p><p><img src="https://cdn.hackaday.io/images/9216691439782041780.png"></p><p>Registration(Click &quot;Register&quot; button)-</p><p><img src="https://cdn.hackaday.io/images/270971439782087796.png"></p><p>Run down of what each button and panel will do as more of the code is complete:</p><p>Log In Screen:</p><p>The user will select the capacity with which they are using the program. Are they a &quot;student,&quot; &quot;teacher,&quot; or &quot;parent?&quot; This is in part to limit the number of potential users the program has to scan thru to verify if the &quot;User Name&quot; and &quot;Password&quot; combination is registered. The job of the &quot;Enter&quot; button is to pass these variables thru, &quot;user type,&quot; &quot;user name,&quot; and &quot;password&quot; and check them against an array of other users. It will then either return a pop up error(assuming the combination is not found to exist) or pass the user on to the &quot;tabs panel&quot; and store these values accordingly. The &quot;Registration&quot; button will navigate the user to the registration screen.</p><p>Athena(tabs panel):</p><p>There is much work to be done here! In the future each tab will be limited to a class( and student), with access to the schools dedicated server of choice. For example, the &quot;Grades&quot; tab will show a student a list of their grades(stored on said server) for some class, as well as the class average, and plot these on a graph to make it easier to track progress. Similarly the &quot;Notes&quot; tab will pull the students personal notes, as well as any notes posted by the class instructor, from the server. The &quot;Log Out&quot; button will be on the &quot;Home&quot; tab and return a user to the &quot;Log In&quot; screen, and replace all stored values to &quot;blank.&quot;</p><p>Registration:</p><p>Upon clicking the &quot;Enter&quot; button on the registration screen, all user inout data will be stored accordingly with other users.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6865/log/23357-athena-entry-video">Athena Entry Video</a></h2>
                            <small class="authorship">2 days ago  &bull;
                                <a class="gray-link" href="/project/6865/log/23357#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23357"><p>The following is my entry video for Athena</p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/9TfVOQLewuQ" frameborder="0" allowfullscreen=""></iframe></div>
                            </div>
                        </li>
                    
                </ul>

                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'ouxoqKNU-nQC-vG3ImU9_Bp6gnOGZEdn9bdA';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>