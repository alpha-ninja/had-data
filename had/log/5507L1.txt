<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; XORYA - extremely low cost game console on PIC32 &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F5507%2Flogs%3Fpage%3D1">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/5507-xorya-extremely-low-cost-game-console-on-pic32">XORYA - extremely low cost game console on PIC32</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">XORYA game console is just one chip PIC32MX170F256B (32-bit MIPS core, 256K flash, 64K data mem) in DIP28 package and a few other components</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/59851-alexander-shabarshin" title="Visit Profile">Alexander Shabarshin</a><span>&bull;</span>
                
                4 months ago<span>&bull;</span><a href="/project/5507#discussion-list" title="See Comments">17 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/5507-xorya-extremely-low-cost-game-console-on-pic32">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/5507/logs/sort/newest">Newest</option>
                    <option value="/project/5507/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/5507/log/17091-basic-black-and-white-circuit">Basic black and white circuit</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/5507/log/17091#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17091"><p>Basic circuit to produce black and white NTSC signal could be assembled on the breadboard or soldered directly on top of rolled over DIP28 package ("dead bug" style) and it will run onboard MIPS core on 60 MHz:</p><p><img src="https://cdn.hackaday.io/images/5928571430272376003.png"></p><p>Note that 6-pin header is required if you need to reprogram the chip in<br>the circuit by PICKit3 device - this is pinout for connector:</p><ol><li>MCLR (pin 1)</li><li>3.3V (pin 13)</li><li>GND (pin 8)</li><li>PGED1 (pin 4)</li><li>PGEC1 (pin 5)</li><li>Not connected</li></ol></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5507/log/17092-color-signal-requires-precise-frequency">Color signal requires precise frequency</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/5507/log/17092#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17092"><p>Adding 14.31818 MHz crystal with 2 additional 33 pF capacitors will unlock color capabilities of XORYA and MIPS core in this case will run on 57.27272 MHz to be able to generate proper "color burst" signal:</p><p><img src="https://cdn.hackaday.io/images/9699851430272671378.png"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5507/log/17093-rotating-color-bars">Rotating color bars</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/5507/log/17093#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17093"><p>1 degree per frame - 60 frames per second - it takes about half time of 1 frame to generate 1 frame - and during that circuit eats 40 mA:</p><iframe style="width: 500px; height: 281px;" src="//www.youtube.com/embed/8ZoB1-8BEgk" allowfullscreen="" frameborder="0" height="281" width="500"></iframe><p>BTW it's <a href="http://nerdlypleasures.blogspot.pt/2013/11/ibm-pc-color-composite-graphics.html">CGA composite colors</a> (palette 1) - see </p><p>Source code of this example:<br><a href="https://github.com/shaos/xorlib/blob/master/examples/coloroto.c" target="_blank">https://github.com/shaos/xorlib/blob/master/examples/coloroto.c</a></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5507/log/17258-comparison-xorya-colors-with-composite-cga">Comparison XORYA colors with composite CGA</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/5507/log/17258#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17258"><p>Comparison of 4 palettes of Xorya with CGA, Tandy and PCjr composite colors:</p><p><img src="https://cdn.hackaday.io/images/568091430524010116.jpg"></p><p>CGA colors were copied from here:<br><a href="http://nerdlypleasures.blogspot.com/2013/11/ibm-pc-color-composite-graphics.html" target="_blank">http://nerdlypleasures.blogspot.com/2013/11/ibm-pc-color-composite-graphics.html</a></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5507/log/17259-showing-old-composite-cga-graphics-on-ntsc-tv">Showing old composite CGA graphics on NTSC TV</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/5507/log/17259#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17259"><p>Examples of composite graphics of INDIANAPOLIS 500 game from <a href="http://nerdlypleasures.blogspot.com/2013/11/ibm-pc-color-composite-graphics.html" target="_blank">http://nerdlypleasures.blogspot.com/2013/11/ibm-pc-color-composite-graphics.html</a></p><p>CGA version of image as showed by XORYA (palette 1):<br></p><p><img src="https://cdn.hackaday.io/images/4061371430524928414.jpg"></p>Tandy version of image as showed by XORYA (palette 2):<p><img src="https://cdn.hackaday.io/images/9922951430524986130.jpg"></p><br></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5507/log/17348-xorya-colors-in-hue-order">XORYA colors in Hue order</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/5507/log/17348#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17348"><p>Removed one more resistor - now colors are bright and solid:</p><p><img src="https://cdn.hackaday.io/images/8446971430704883921.png"></p><p>This is walk through all colors in Hue order (except for grays) with intermediate dithered colors (27 colors total):<br><img src="https://cdn.hackaday.io/images/4945861430704959980.jpg"></p><p>The same thing on DOSBox +60 degrees CGA simulation ( <a href="https://github.com/shaos/xorlib">XORLib</a> has port to PC with CGA ) :</p><p><img src="https://cdn.hackaday.io/images/9431131430705063960.png"></p><p>This is preparation for Mandelbrot Set viewer ;)</p><p>P.S. Source code of this program:</p><p><a href="https://github.com/shaos/xorlib/blob/master/examples/colorman.c" target="_blank">https://github.com/shaos/xorlib/blob/master/examples/colorman.c</a><br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5507/log/17365-mandelbrot-set-on-xorya">Mandelbrot Set on XORYA</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/5507/log/17365#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17365"><p>It's slow, but it's working (long doubles were used for precision):<br><a href="https://github.com/shaos/xorlib/blob/master/examples/mandelbr.c" target="_blank">https://github.com/shaos/xorlib/blob/master/examples/mandelbr.c</a></p><p><img src="https://cdn.hackaday.io/images/9613461430741794731.jpg"></p><p><img src="https://cdn.hackaday.io/images/6853201430741817976.jpg"></p><p><img src="https://cdn.hackaday.io/images/9552371430741836148.jpg"></p><p><img src="https://cdn.hackaday.io/images/8440851430741869995.jpg"></p><p><img src="https://cdn.hackaday.io/images/9240051430741901114.jpg"></p><p><img src="https://cdn.hackaday.io/images/9341461430741925667.jpg"></p><p><img src="https://cdn.hackaday.io/images/111071430741943523.jpg"></p><br></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5507/log/17474-deep-into-mandelbrot-set-in-real-time">Deep into Mandelbrot Set in Real-Time</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5507/log/17474#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17474"><p>64-bit fixed point on 57 MHz PIC32 with 16 colors in effective resolution 160x100 on NTSC TV:</p><iframe style="width: 500px; height: 281px;" src="//www.youtube.com/embed/MXtf1pEs5lo" allowfullscreen="" frameborder="0" height="281" width="500"></iframe><p>Source code: <a href="https://github.com/shaos/xorlib/blob/master/examples/mandelbr.c" target="_blank">https://github.com/shaos/xorlib/blob/master/examples/mandelbr.c</a></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5507/log/17809-fast-into-mandelbrot-set-in-real-time">Fast into Mandelbrot Set in Real-Time</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5507/log/17809#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17809"><p>Faster version with 32-bit fixed point math (at some point it's INCREDIBLY fast) on the same PIC32 running on 57 MHz CPU freq, but obviously less precise - error level doesn't allow to travel deep into the Set and it goes off the track too soon:<br></p><iframe style="width: 500px; height: 281px;" src="//www.youtube.com/embed/xmRPiYDKo3Y" allowfullscreen="" frameborder="0" height="281" width="500"></iframe><p>The same source code: <a href="https://github.com/shaos/xorlib/blob/master/examples/mandelbr.c" target="_blank">https://github.com/shaos/xorlib/blob/master/examples/mandelbr.c</a></p>But with FIXED32 macro instead of FIXED64 and "fake wide-screen" ratio 16:9 (with the same resolution 160x200)...</div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5507/log/17952-problems">Problems</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5507/log/17952#discussion-list">
                                    1 comment
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17952"><p>For now I have 3 problems:</p><p>1) When I switched from 32-bit DMA-to-SPI to 8-bit (to have video memory ordered similar to CGA) I got gap after 1st byte if transfer is happened on every 2nd peripheral clock (or 14 MHz), so before (with 32-bit transfers) I had bytes displayed in this order:</p><p><strong>32107654BA98FEDC...</strong><br>After switch to 8-bit DMA-to-SPI I expected to get this:<br><strong>0123456789ABCDEF...</strong><br>But instead I got this (with a gap between byte 0 and byte 1):<br><strong>0 123456789ABCDEF...</strong><br>I fixed this by shifting visible part 1-byte to the right (anyway I already had this invisible left part of the screen for "color burst" and rest of the "back porch") - any ideas how to setup DMA and SPI on PIC32 chip to eliminate this gap?...<br><br>2) Colors are stable on LCD and LED TVs (I tested it on SONY, LG and Sumsung), but it doesn't work properly on CRT TV (I tested "Last CRT TV" SONY produced in 2005) - instead of solid colors I got red and green spots over black and white pixels - may be crystal is not precise enough to work with CRT and I need to put adjustable capacitor somewhere sequentially?...<br><br>3) Single color pixel (pattern that consists of 4 black-and-white pixels) not always may produce color (or at least expected color) and 2 different color pixels sitting together may eliminate each other completely, so it is a little tricky to convert arbitrary RGB image to these 15 colors with dithering, so may be I need to write a special software that can do such conversion considering a number of rules of composite colors combinations or may be somebody may advice me to get some existing one?...<br></p></div>
                            </div>
                        </li>
                    
                </ul>

                
                <div class="pagination">
                    
                    
                    <a href="?page=2" class="grey-gold-button next-button show">Next</a>
                    
                </div>
                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'cGX1jZUy-vOgvvJ_0CQvKMgasm1pK2IBUtxk';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>