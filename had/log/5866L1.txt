<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; AluPi - Pocketable Game and Computer System &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F5866%2Flogs%3Fpage%3D1">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/5866-alupi-pocketable-game-and-computer-system">AluPi - Pocketable Game and Computer System</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">AluPi is a portable device designed for playing games and performing general computing which is straightforward to assemble.</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/68941-stephen-m" title="Visit Profile">Stephen M</a><span>&bull;</span>
                
                3 months ago<span>&bull;</span><a href="/project/5866#discussion-list" title="See Comments">0 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/5866-alupi-pocketable-game-and-computer-system">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/5866/logs/sort/newest">Newest</option>
                    <option value="/project/5866/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/5866/log/18153-powercharging-system-design-log-1">Power/Charging System Design Log 1</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5866/log/18153#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-18153"><p><strong>Overview</strong></p><p>The power/charging system will provide 5V and the raw battery voltage to the other subsystems of the design (pi, display, and input). The rationale behind providing both of these voltages is that 5V will be the main power rail for the pi, external devices, and (likely) the input system, and the raw battery voltage will be used for boosting up or dropping down the voltage with greater efficiency. The raw battery voltage will be used for the step-up converter for the backlight , and will be locally regulated for (what will probably be) an FPGA to control the lcd.</p><p>The power into the charging circuit will be provided by a micro-USB cable. There will also be a USB-A port which can provide power to external devices.</p><p><strong>Design Log</strong></p><p>The most concrete development so far is the choice of battery for the design. I have chosen <a href="http://www.batteryspace.com/polymerli-ionbattery37v5ah185wh85arate.aspx">this battery</a> for the device. It's dimensions seem fairly ideal for the design. It will be able to fit underneath the pcb and beside the pi, while providing some room for taller components if needed, and it stores quite a bit of power to boot! There are a couple options for the termination of the leads, but bare wires simplify the BOM, are cheaper, smaller, and can be replaced by a battery with a JST connector later if necessary.</p><p>Last night I spent quite a some time looking for battery charging IC's. <a href="https://www.youtube.com/watch?v=A6mKd5_-abk">Dave Jones has a video on li-po charging if you're interested.</a> The battery I've chosen has a maximum charge rate of 2.5 A. Initially I was looking for a charger which would vary the current output based on the output of the load of the rest of the circuit. Most chargers, it seems, have the battery and load in parallel. If the charger is set to charge at 1.5 A in constant-current mode, and the load draws 1 A of current, the battery is only being charged at 0.5 A. Most, if not all, of the IC's with this feature are not hand-solderable (leadless or BGA packaged). I realized this morning that because the maximum charge current is so high (2.5 A), there are very few cases where the battery would discharge while a USB charging cable is attached.</p><p>I have not found an IC yet, but now I know what I want, and sort-of what's available. It should charge at least at 1.5 A, be a switching type (to not produce as much heat as a linear regulator), work with a single-celled battery, and be fairly integrated (not too many peripheral components). I feel like it shouldn't be too long until I've found a good match.</p><p>A bq2057 seems like it would work if I was willing to use a linear device rather than a switching device.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5866/log/18275-now-on-github">Now on GitHub</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5866/log/18275#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-18275"><p>Git the files here: <a href="https://github.com/WimbledonLabs/AluPi">https://github.com/WimbledonLabs/AluPi</a></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5866/log/18276-powercharging-system-design-log-2">Power/Charging System Design Log 2</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5866/log/18276#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-18276"><p>Hello everyone,</p><p>Yesterday I decided on the LTC4002ES8-4.2 as the battery charger IC. It has all of the features I was looking for in a charger IC:</p><ul><li>2A charging current</li><li>Hand-solderable</li><li>Switching regulator</li><li>Fairly integrated (for a switching regulator)</li><li>Single cell charging</li><li>(Bonus) Charge indicator output</li></ul><p><img src="https://cdn.hackaday.io/images/4609831432188902147.png" style="width: 460px; height: 369.393939393939px;"></p><p>As well, the main voltage regulator was chosen as the TPS61030. I was considering going with the TPS61032 which maxes out at 5V, but the TPS61030 (max 5.5V) allows me to set the voltage a bit above 5V to have a bit more ripple while staying above 5V. The voltage for the TPS61032 droops at higher currents as well. Based on the efficiency graph of the TPS61032 in the datasheet (no data for TPS61030), I'm expecting to get around 95% efficiency with the boost circuit while not powering external devices. I didn't spend too much time looking for other options: the regulator met my requirements and anything else would be for cost savings.</p><p><img src="https://cdn.hackaday.io/images/198721432189451502.png" style="width: 650px; height: 348.963133640553px;"></p>The current version of the schematic can be found on <a href="https://github.com/WimbledonLabs/AluPi">GitHub</a>.<p>Thanks, </p><p>Stephen</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5866/log/18520-input-system-design-log-1-story-so-far">Input System Design Log 1 - Story So Far</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5866/log/18520#discussion-list">
                                    1 comment
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-18520"><p>Hi Everyone,</p><p>I thought I would give an update with regards to the input system in the AluPi.</p><p>The input system will consist of a keyboard and gaming controls. The controls may or may not include analog sticks (though it would be pretty sweet!) More on this later. The input system will (if everything works out) be able to interface with the raspberry pi or external devices over USB. This means that you could use it as a gamepad for your laptop, or a portable keyboard for a single-board computer. By not limiting the controls to just the AluPi it makes the device 1) more useful, and 2) more modular. Both points are goals of the project. Ideally someone could take the design of the AluPi, easily strip away everything not related to the input system, and make their own USB gamepad.</p><p>I am currently planning on using a PIC microcontroller for the USB interface. I have the option to design the system based on the Arduino Leonardo (or other similar designs) that already have USB libraries, but doing it more "from scratch" will provide more value to the community in terms of knowledge, and is much lower cost per chip ($1.94 vs. $6.50 in single quantities).</p><p>The schematic design is influenced by microchip's USB Keypad reference design: <a href="http://www.microchip.com/pagehandler/en_us/promo/usbkeypad/">http://www.microchip.com/pagehandler/en_us/promo/usbkeypad/</a></p><p>Their schematics and source code will be a jumping block for the design.</p><p>The digital inputs will be arranged in a matrix to allow for the required number of inputs. I haven't solidified any ideas, but I figure that about 64 digital inputs will be required (26 letters, 10 numbers, at least 10 special keys [space, alt, Fn, etc], 14 gamepad, and 4 more that I might need). I'll be using the C bank of pins as the switch input, and 3 other GPIO pins going into a decoder to select which 8 switches are currently being read.</p><p>I'm planning on using low-profile tactile switches such as <a href="http://ca.mouser.com/ProductDetail/CK-Components/PTS530-GK055-SMTR-LFS/?qs=sGAEpiMZZMsgGjVA3toVBAOa31dqKfOfgx%252bnhHEsrCU%3d">this</a> for the buttons. If this were being designed for higher volumes I would use tactile domes such as the ones sold by <a href="http://www.snaptron.com/">snaptron</a>. Unfortunately, these are very hard to get in small quantities for the individual, do it would be bad for the design. I want anyone to be able to order the parts and assemble it themselves. It would taint the openness of the design if people can't reliably get the materials.</p><p>For now, I'm planning on 3D printing the case and keycaps (even though I've done nothing of the sort). In the design, the key cap will be trapped between the case and the switch, with enough room to travel vertically to activate the switch.<br></p><p>Hopefully this picture demonstrates the concept:</p><p><img src="https://cdn.hackaday.io/images/4990631432702456628.png"><span></span><br></p><p>I currently plan on using 3DS analog sticks. Unfortunately, it's not a very sustainable thing to design into an open hardware project, but I don't know where else to get nubs. Additionally, there is a software hurdle to make the microscontroller act as a USB mouse (joystick?) in addition to a keyboard. I have done very little with regards to USB, but  it seems like it's possible to do using the standard HID interface.</p><p>My hope is that these design logs leave breadcrumbs for people to follow if I don't personally finish the project, which is statistically likely for me :P</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5866/log/18521-display-system-design-log-1-pixels-and-chips">Display System Design Log 1 - Pixels and Chips</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5866/log/18521#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-18521"><p>Ideally there would be an IC which takes in a composite video signal (in its many forms) and drives a variety of different LCDs (especially the one I'm planning on using). It seems as though they exist. You can buy LCD driver boards on eBay which take in composite and drive an LCD, and it looks like a single chip solution. The downside is that I haven't been able to find a datasheet, or a reliable source for any of these chips. If I recall correctly, Analog devices also has an IC which takes in composite and drives and LCD. The (major) problem with this is that it is designed as an integrated solution for TV's and is massive (in terms of area and price).</p><p>The best solution seems to be using an IC dedicated to converting the video input into a digital format (search "ntsc decoder ic"), and using an FPGA to drive the LCD from the information received. From what information I've gathered so far, the typical output resolution of the decoders is 720x525 (NTSC) or 720x625 (PAL). This pixel data would need to be scaled to the appropriate size for the display. Storing 3 lines of video data just about fills the block RAM for the FPGA dev board I'm using. This should be just enough of a buffer to scale the pixel data and output to the LCD. It would be a huge pain to have to use external RAM, so I really really hope this works out.</p><p>I've ordered <a href="http://www.adafruit.com/products/1591">an LCD from Adafruit</a> to play around with. I haven't been able to find a better deal on an LCD screen, so it's in the design for now.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5866/log/18889-display-system-design-mini-log-2-breakthrough">Display System Design (Mini) Log 2 - Breakthrough</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5866/log/18889#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-18889"><p>After many, many hours of searching, I think I've found a single chip solution (almost) for driving the LCD from the composite output of the raspberry pi. The salient features are:</p><ul><li>About $10 in single quantities</li><li>NTSC, PAL, SECAM, etc. input</li><li>"TFT panel support" with "8 bits per pixel" (I really hope this means per <strong>color</strong>)</li><li>Supports up to 800x600 LCD panels</li><li>Configured over I2C</li><li>In stock at Mouser</li></ul><p>The reason it's almost a single chip solution is that the configuration can be done the microcontroller that handles the keyboard input, but a microcontroller would need to be added to the design if the display system was used in a separate design.</p><p>And before I forget, it's the TW883* series of TFT display controllers. I'm still waiting on the datasheet from intersil (grr...) to make sure it will actually work as I inferred</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5866/log/18890-mechanical-design-log-1-openscad-and-3d-hubs-sad">Mechanical Design Log 1 - OpenSCAD and 3d Hubs Sad</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5866/log/18890#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-18890"><p>Hi Everyone,</p><p>I made some progress on the mechanical design of the AluPi this weekend, and I thought I'd give an update.</p><p>I'm trying out OpenSCAD for the mechanical design and planning of the device. OpenSCAD allows you to define geometry programmatically. This makes it relatively easy to create parameterized geometry. The case design I'm working on (not shown), and the numpad shown in the image below use basically the same code. I have data to define the position and symbol on each button, general button properties (width, length, symbol padding etc.), and size of the case. Everything else is produced from that information. If you've done programming before you should definitely give it a try. I've mainly used SketchUp for mechanical designs and sketches (as you can see in a previous project log and the project thumbnail), but I wanted to make this project as open as possible. I've even been burned very recently from SketchUp because I migrated to a Windows Vista machine. Since SketchUp doesn't support  anymore, I had to venture to the corners of the internet to find an old installer.</p><p><img src="https://cdn.hackaday.io/images/1560321433311773649.png" style="width: 666px; height: 422.011933174224px;"></p><p>I wanted to get a rough idea of how the mechanical design would work in terms of the buttons, so I sent the model shown above to a person who lived near me through 3d Hubs. Sadly, the print order was declined. I haven't spent the time to look for another "hub" to print the design, but I'll need to try again at some point later on in the project. I don't really need to get anything printed at the moment, I was just hoping to get some early feedback on the mechanical design.</p><p>Thanks for reading!</p><p>-Stephen</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5866/log/19638-big-update-prototype-pcb-design-complete-and-more">Big Update - Prototype PCB Design Complete and More</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/5866/log/19638#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19638"><p>Hello Everyone,</p><p>I haven't updated recently because I've been focusing my time on working on the project. Normally I update when I hit a roadblock, but in this case I just hit a milestone!</p><p>I finished a preliminary version of the the schematic Friday June 5th. I spent that weekend building up a mouser cart with the parts, and modifying the schematic to better match the availability and cost of components. This took <strong>way</strong> longer than I anticipated, and resulted in a completely different battery charging circuit, battery, analog nubs, and many other things. </p><p>Initially I was planning on making a prototype circuit board with no mechanical constraints so that I could get a smaller, cheaper board (100mm by 100mm) to verify the electrical functionality. That would mean that I would still need to order another board to do mechanical prototyping, and 3rd board to finalize the project. Instead, I decided to go for the full size board from the start (150mm by 90mm) with mechanical constraints. This made routing very difficult.</p><p><strong>#Start Rant</strong><br></p><p>The analog nubs, battery, buttons, raspberry pi, and the various connectors caused posed mechanical constraints. No components could be placed on the top side where the battery will sit. No components could be near the push buttons on the bottom of the board. The clearance on the bottom of the board is about 3mm. The analog nubs create huge holes in the middle of the board. The LCD connector had to be in a very specific place so that the LCD cable lines up exactly. The LCD driver had to be oriented a particular way so that the data lines wouldn't cross. Lastly, the raspberry pi USB, HDMI, DSI, CSI, and A/V connectors can interfere with the component placement on the top (and their positions aren't that well defined). And then there are the electrical constraints...</p><p><strong>#End Rant</strong><br></p><p>There are innumerable things that I could change, but I need to keep moving forward with the project. Major things are: I decided to leave the audio portion of the design to the next board revision, the USB signal integrity will probably be terrible, sub-optimal component placement, and inadequate heat dissipation.</p><p>Things that will be changed for this revision will be changing the top right and top left buttons to right angle tact switches, and moving silkscreen designators.</p><p><img src="https://cdn.hackaday.io/images/4120071434512711011.png"></p><p><strong><br></strong></p><p><strong>Mechanical Stuff</strong><br></p><p>I got my little keypad thing from shapeways! Unfortunately I didn't start my project early enough to get the free credit, but it was inexpensive enough anyways when there are few other options (like $6 before shipping). I put in small supports between the buttons so that they would be one part during manufacturing. I was able to break them all out, but it was a bit difficult to remove the middle ones (the ones still attached in the picture below). Since I don't have sandpaper I can't do the post-processing that they need. Based on the buttons that came out cleanly, and despite not having a PCB to test with, it seems like the design works fairly well. I want the 3D printed pieces to be manufacturable using a consumer 3D printer, so I might have to buy one to start prototyping with.</p><p><img src="https://cdn.hackaday.io/images/24451434514728244.JPG"></p><p><strong>Software</strong><br></p><p><span class="redactor-invisible-space">Since I want the design to be platform agnostic, there will be no custom software on the raspberry pi. To achieve this, the keyboard and gaming controls will interface with the raspberry pi through a microcontroller over USB. I ordered a USB dev board so that I could start working on the microcontroller<span class="redactor-invisible-space"> software (with a known good board) before getting my boards in.</span></span></p><p>Things are coming along!</p><p>Thanks for reading,</p><p>-Stephen</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5866/log/19883-project-cost-summary">Project Cost Summary</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/5866/log/19883#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19883"><p>Hello Everyone,</p><p>I've ordered PCBs for the first revision of the circuit board. At this point I have a pretty good estimate for the total cost of the project. I've broken it down at the bottom of this post. The mouser order for this revision of the project can be found <a href="http://www.mouser.com/ProjectManager/ProjectDetail.aspx?AccessID=88393d87cd ">here</a>. The battery can be ordered from adafruit, but a larger battery with more capacity and higher discharge rating can be had <a href="http://www.batteryspace.com/polymerli-ionbatterymoduleullisted37v2800mah1036wh-prewiredwithpcb.aspx">elsewhere</a>. The adafruit order includes the following (each linked individually): <a href="https://www.adafruit.com/products/444">joysticks</a>, <a href="https://www.adafruit.com/products/1680">LCD</a>, <a href="https://www.adafruit.com/products/2358">Raspberry Pi 2</a>, <a href="https://www.adafruit.com/products/2225">replacement USB jacks</a>.</p><p>The costs are as follows (in USD):</p><ul><li>Mouser order $47.19</li><li>Adafruit order $78.40 (battery is extra $12.50)</li><li><a href="http://www.batteryspace.com/polymerli-ionbatterymoduleullisted37v2800mah1036wh-prewiredwithpcb.aspx">Battery</a> $16.68</li><li>Both microcontrollers pre-programmed $2.94</li><li>Estimated about $4 for audio circuitry</li></ul><p>In total, the parts come to $149.21 with the better battery before shipping. The PCB price is intentionally not included because the prices vary, and often come in multiples. For this revision I ordered 5 boards for $30 before shipping. That works out to $6 per board. I also left out the cost of 3D printing the case because I don't have any experience with 3D printers.</p><p>With everything added up, I feel like the project is a good value. There is about $115 in big ticket items (RPI, LCD, battery, LCD driver, switches, and joysticks). Most of these items don't have readily available alternate sources, so it would be hard to bring the cost down by trying to replace them.  After that there are a bunch of small items like voltage regulators, microcontrollers, other IC's, and passives which begin to add up. At this point I'm fairly pleased with the total, so reducing the cost is something that will go far into the background.</p><p>Thanks for reading! Feel free to comment if you have any questions or anything else you'd like to say.</p><p>-Stephen</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5866/log/20307-quick-general-update">Quick General Update</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/5866/log/20307#discussion-list">
                                    1 comment
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20307"><p>Hello Everyone,</p><p>This is a quick update so that you guys are aware of the current status, but I won't go into details.</p><p>The PCBs and all parts came in late last week. I spent the weekend assembling the electronics and debugging/developing code for the microcontrollers. Both had issues connecting to the PicKit, but I resolved both of those. I got the input controller microcontroller communicating with my laptop over USB. There seems to be an issue with both joysticks that I got in one particular axis, and it seems to be a problem with the joystick itself, but it still needs more investigation.</p><p>I screwed up the footprint for the buttons, so I won't be able to fully electrically test them before the next board revision. I can still probe things to make sure things are working properly, so it's not a huge concern.</p><p>I'm still working on the software for controlling the LCD driver, so I haven't been able to test that.</p><p>I also haven't gotten the battery charging circuitry up yet either. During development I find that having a constant source of power isn't what you want while soldering. I probably won't get to it until I am stuck on other things.</p><p>I also just bought a 3D printer! So I'll be able to start working on prototype cases soon. I haven't gotten a shipping notice yet, but I'm hoping to get the printer before the weekend!</p><p>Thanks for reading,</p><p>Stephen</p></div>
                            </div>
                        </li>
                    
                </ul>

                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'AqHKg2kg-X_IqtehDSn7y3nQsESab0U17vI8';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>