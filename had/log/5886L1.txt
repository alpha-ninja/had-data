<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; Authenticator USB Key &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F5886%2Flogs%3Fpage%3D1">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/5886-authenticator-usb-key">Authenticator USB Key</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">A USB key that simulates a keyboard to automatically enter your [Google] Authenticator code automatically.</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/14891-alistair-macdonald" title="Visit Profile">Alistair MacDonald</a><span>&bull;</span>
                
                3 months ago<span>&bull;</span><a href="/project/5886#discussion-list" title="See Comments">5 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/5886-authenticator-usb-key">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/5886/logs/sort/newest">Newest</option>
                    <option value="/project/5886/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/5886/log/20898-initial-plan">Initial Plan</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/5886/log/20898#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20898"><p>Here is the overview of the project plan. The minimum viable solution will have to have a processor that and a real time clock to calculate the correct keys, and a way of emulating a USB keyboard. I am keen to keep the hardware simple and use the V-USB library on the same processor that will calculate the keys.</p><p>Another element to this project will be configuration as the computer needs to be able to securely deliver a key from the web site, and the real time clock will need setting at least once. For this I am going to try and transfer data at a low speed from the PC screen to the device using optical sensors. This has been done in the past but will need refining.</p><p><img src="https://cdn.hackaday.io/images/7698131436855565491.png"></p><p>Although not essential to it&apos;s initial operation I suspect I will probably add some kind on user input (a button) and device feedback (some LEDs) to help with development and debugging.<br></p><p>So the headline development tasks are...</p><ul><li>The RTC needs reading</li><li>The authenticator checksum needs calculating</li><li>V-USB needs implementing.</li><li>The optical input needs developing</li><li>The client side app for configuration needs developing.</li></ul><p>I have already done the RTC and V-USB parts in other projects and this code can be used here. Some work has already been done by others on porting the checksum calculation code but this needs finishing. My intention is to put this together as a prototype in a weekend or at a hack day.</p><p>Although there have been projects that use optical sensors to read data from the computer screen they have not worked very well. I have the advantage on not needing to move much data, and that it does not happen often, so I can do it slowly. My hope is this will solve the issues others have had. Again my intention is to put this together as a prototype in a weekend or at a hack day.</p><p>The client software will need some thinking about to make it secure. It is easy to hack together, but for the final version we do not want the secret keys being passed back and fourth across the internet. I believe it should be possible to make this as an HTML5 web app that runs completely on the client machine.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5886/log/23013-a-weekend-of-hacking">A weekend of hacking</a></h2>
                            <small class="authorship">3 days ago  &bull;
                                <a class="gray-link" href="/project/5886/log/23013#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23013"><p>The hack days I was hoping to have worked on the base of this project have just not happened so I have decided to use the Hackaday prize as an excuse to have a weekend of hacking away at the base of this. It is an excuse as I have zero chance of winning, but that is not the reason I do building this.</p><p><img src="https://cdn.hackaday.io/images/4050671439714360967.JPG"></p><p><img src="https://cdn.hackaday.io/images/3970751439714321522.JPG"></p><p>I have the components together and have started on the USB interface. I will not have time to get the optical reader working this weekend and will come back to that later, perhaps at a hack day.</p><p>I have also done some research and it appears that a lot of the heavy lifting has been done. Annoyingly the licence of the code most are build on is not clear so I suspect I will need to rewrite the Authenticator code, but I have a framework to work from.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5886/log/23035-code-generation-working">Code generation working...</a></h2>
                            <small class="authorship">3 days ago  &bull;
                                <a class="gray-link" href="/project/5886/log/23035#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23035"><p>Considering the head start I had this took longer than it should have done, but it is working now. Here are some test codes being generated and being compared to the Google Authenticator app on my phone. Apologise for the bad framing. I did not want to show and real codes although they expire after 30 seconds.</p><p><img src="https://cdn.hackaday.io/images/8926171439724751205.JPG"></p><p><img src="https://cdn.hackaday.io/images/7268361439724778189.JPG"></p><p>Also full credit to...</p><ul><li><a href="https://github.com/lucadentella/ArduinoLib_TOTP">https://github.com/lucadentella/ArduinoLib_TOTP</a></li><li><a href="https://github.com/maniacbug/Cryptosuite">https://github.com/maniacbug/Cryptosuite</a><span class="redactor-invisible-space"> (and the original work at </span><a href="https://github.com/Cathedrow/Cryptosuite">https://github.com/Cathedrow/Cryptosuite</a>) for the SHA1 library</li><li><a href="https://github.com/NetRat/Base32">https://github.com/NetRat/Base32</a></li><li><a href="https://github.com/leomil72/swRTC">https://github.com/leomil72/swRTC</a></li></ul><p>Also thank you to <a href="https://github.com/damico/ARDUINO-OATH-TOKEN">https://github.com/damico/ARDUINO-OATH-TOKEN</a><span class="redactor-invisible-space"> for the useful documentation in their project.</span></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5886/log/23290-rtc-added">RTC Added</a></h2>
                            <small class="authorship">2 days ago  &bull;
                                <a class="gray-link" href="/project/5886/log/23290#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23290"><p>The RTC module has been added thanks to <a href="https://github.com/msparks/arduino-ds1302">https://github.com/msparks/arduino-ds1302</a> . I used the DS1307 over the DS1307 as it was lower cost and had all the functionality I needed, but I was surprised at the lack of support in the Arduino world. Partly because of the I have decided to stick with the software clock and have that synced with the hardware clock when inserted in to a computer. This allows any RTC module to be easily retrofitted to the design without a large anount of work.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5886/log/23299-prototype-working">Prototype working</a></h2>
                            <small class="authorship">2 days ago  &bull;
                                <a class="gray-link" href="/project/5886/log/23299#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23299"><p>It is a bit cobbled together, but the prototype is working. Very much a minimum viable but it is working and doing what it needs to do.</p><p><img src="https://cdn.hackaday.io/images/4201951439809986404.JPG">I used the USB keyboard emulation code from my <a href="http://www.agm.me.uk/blog/2014/07/zx-keyboard.php">ZX Keyboad</a> project that uses the <a href="https://code.google.com/p/vusb-for-arduino/">VUSB for Arduino</a> library. This currently limits it to the Arduino 1.0.x IDEs but I intend to update this library in time and this is another good reason to do so.</p><p>Next I need to miniaturise it so it is portable. The final version will be a low cost custom board, but I really need to try it in the field first, and this means a some what smaller hardware prototype.</p><p>Also I have a lot of features I want to add to the device, including making the setup easy for the &quot;man in the street&quot;, but one step at a time.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5886/log/23406-demo-video">Demo video</a></h2>
                            <small class="authorship">2 days ago  &bull;
                                <a class="gray-link" href="/project/5886/log/23406#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23406"><p>After a little tidying of the code and hardware I have made an video introduction and demo of the prototype.</p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/URUkNCO_Ku8" frameborder="0" allowfullscreen=""></iframe></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5886/log/23433-portable-prototype">Portable Prototype </a></h2>
                            <small class="authorship">2 days ago  &bull;
                                <a class="gray-link" href="/project/5886/log/23433#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23433"><p>I have managed to get the prototype shrunk down to a usable size. It needs some tidying but is usable. This gives a platform to refine the firmware and add features.<img src="https://cdn.hackaday.io/images/6631221439832353815.JPG"></p></div>
                            </div>
                        </li>
                    
                </ul>

                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'DLo9eadx-q_mIxgVGSXkvUKexGAVyOwBFcNE';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>