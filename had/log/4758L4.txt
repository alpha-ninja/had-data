<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; SentriFarm &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F4758%2Flogs%3Fpage%3D4">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/4758-sentrifarm">SentriFarm</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">Solving a key farming problem: is it safe to harvest / spray / sow today? (+experiments with &#39;big&#39; data in agriculture) </p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/46379-pastcompute" title="Visit Profile">pastcompute</a><span>&bull;</span>
                
                5 months ago<span>&bull;</span><a href="/project/4758#discussion-list" title="See Comments">13 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/4758-sentrifarm">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/4758/logs/sort/newest">Newest</option>
                    <option value="/project/4758/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/4758/log/19108-keeping-it-educational">Keeping it educational</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/4758/log/19108#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19108"><p>So today we finally had a chance to work on the first control board, the radio and I/O shield for the Carambola2.</p><p>I only learned how to solder SMD components myself 6 months ago, so this was a good chance to teach Mr.14 as well :-)</p><p><img src="https://cdn.hackaday.io/images/2910831433590960466.jpg"></p><p>Everything lined up perfectly! The only bug, as it turned out, was that I had the i2c SDA and SCL lines swapped on the PCB, aargh!</p><p>The solution is easy thankfully, as i2c on the Carambola2 is simply the Linux i2c over GPIO driver, so all I had to do to fix it was swap the GPIO on the module load command.</p><p><img src="https://cdn.hackaday.io/images/814841433591112804.jpg"></p><p>The purple OSHPark PCB does look pretty good!<br></p><p>Next step is to hook up the radio.  I have been making progress with the software; we are now going to use MQTT-SN as the protocol, with a bit of luck we might be sending messages by the end of the long weekend.</p><p>Once we manage to get some reliable comms going then we can come back and populate some of the general I/O on the shield.<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4758/log/19169-incremental-steps-20kmhh20cm">Incremental steps. 20km^H^H20cm!</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/4758/log/19169#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19169"><p>Well, I'm finally subscribed to MQTT-SN topics over a radio distance of 20 cm...</p><p>I'm losing about 40% of messages output by my beacon publisher, mainly due to an occasional dropped message about only 10% of the time (due to the Bus Pirate end not being as reliable as the embedded Linux spidev)  seeming to interrupt the 'flow' of MQTT. My bridge is currently dumb, doing nothing other than a checksum. I thought that MQTT-SN would be more robust than that, being designed for such links, so I probably should read the spec now!  In the medium term that wont be a problem anymore once I can replace the bus Pirate completely.</p><p>We had a planning meeting over the long weekend and refined the architecture a bit, so the main diagrams are going to need to be updated.</p><p>We'll probably end up with three node types.</p><p>First, the farmstead, with Ethernet and no requirement for low power - we'll probably use a Raspberry Pi because these can be had at short lead time here. </p><p>Second, a more powerful fencepost with store and forward capability, as this topology maps best onto typical farms in this area.  The Carambola 2 will be put to use in this capacity as the first deployed node, Linux powering  store-and-forward with backup logging to USB, and a suite of additional sensors including USB goodies that wont necessarily be deployed to the leaves, and if required more than one radio.  This will need a largish solar panel, but will be better for low power than a Raspberry Pi.</p><p>Currently  the comms is all effectively dumb half duplex with no media access control, and initially for multiple spokes we'll drive multiple radios on the store and forward node. Longer term of course we need to upgrade to a proper link protocol, maybe LoRa or Dash7, but that can be done in software in the longer term future.<br></p><p>The leaf fencepost nodes we are now looking at coupling an ESP8266 (201) with the SX1276, they have enough grunt to drive it but are much cheaper than the Linux modules, and still provide wifi for a farmer to drive up and communicate with using a phone. At this stage the fencepost nodes still going to provide wifi to the ground sensors yet have enough GPIO be able to pivot to 433MHz.</p><p>Finally we are going to use Arduino Nanos or maybe the new  uHex Atmel powered models for low power sensor applications where a MCU cant sleep (like rain gauges) slaved from the fencepost nodes.</p><p>All this is of course a work in progress and subject to further change!</p><p> Soon hopefully James will be providing an update one of the whether sensors we are designing.<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4758/log/19283-a-quick-first-post">A Quick First Post</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/4758/log/19283#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19283"><p>I have been hiding in the background for a while being pre-occupied with other things (Life), but am taking the time to post what I am up to. I have been busy working on the design of an eventually accurate digital rain gauge. Rainfall measurement is important in agriculture and a lot of activities and planning are related to rainfall. Current measurements of rain involve travel to manually read graduated cylinder gauges. These tell you how much rain fell since you last measured it. Helpful and in most cases good enough, but labour intensive. </p><p>I have looked at many different digital rain gauge designs and settled on the tipping bucket gauge. I plan t make my own with an 8" funnel and have each tip represent .25mm of rainfall. I will use 150mm stormwater pipe for the gauge body. I intend to have the water go to a collector so that I can check the accuracy of the digital mechanism. For the tipping bucket I am considering making the prototype from some unetched copper clad board.</p><p>The electronic side of the gauge is a work in progress at this point. I am building the prototype with an Arduino nano using the Atmel 328P chip. This will allow for versatility in data output. For the initial prototype communication I will use an ESP8266 module with the MQTT client firmware. This will be fed by the Nano. The Nano may become an IC2 slave when we start merging the sensors and functions and a custom PCB will be designed to combine things nicely. The gauge will work by collecting rain in a tipping bucket design and counting how many tips occur over a given period of time. I may use the timer function of the Atmel chip to gauge how long between tips to give an indication of rainfall intensity. This may help for calibration. It will be nice for my records to include this information as rainfall intensity can make a difference to many aspects of agriculture.</p><p>At this point I have all of the components I need to make the first prototype and have the nano and a hall effect sensor on a breadboard outputting data over the com port for each hall effect sensor activation. I plan test the hall effect sensor's latching function better as that will influence my bucket design, which will be the next step. My next update should include some pictures and hopefully some progress. </p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4758/log/19550-another-pcb-building-a-network-on-an-oily-rag">Another PCB : building a network on an oily rag</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/4758/log/19550#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19550"><p>So far I have prototyped the MQTT_SN code and have the software communicating over radio between OpenWRT and a BusPirate. However, the BusPirate with an extra serial layer between SPI and the software is not fast enough and often drops messages. So we need to ratchet up and build a link between two Linux/OpenWRT  direct SPI systems or OpenWRT and a MCU module like the ESP8266 or Teensy.<br></p><p>I only have one Carambola2, and the lead time / cost for more or similar alternatives is more than we would like at the moment.</p><p>We have a few Raspberry PI, plus model A are cheaply and very quickly available in Australia. The Raspberry Pi though probably will use the most power so is best suited for the farmhouse.</p><p>We do have several ESP201 modules, and now a Teensy LC on hand (thanks Hackaday!)</p><p>So what to do... hardware costs $$ and lead time, whereas software is just code... (and time, but not waiting time!)</p><p>So I designed a second board that the SX1276 carambola2 shield plugs into that allows the shield to connect to either a Raspberry PI, a Teensy LC or an ESP201 (not all at once though!).  Thanks to the Hackaday OshPark prize they are nice and purple as well!</p><p><img src="https://cdn.hackaday.io/images/2854261434373585606.PNG"></p><p>To work with a Pi just requires a Raspberry Pi running OpenWRT and a 26-pin connector soldered to the board.</p><p>To work with the ESP201 requires a variety of pullup resistors, and the programming switches / connections for a CP2102 or FTDI adaptor, etc. Also the ESP201 is one GPIO short so it needs a i2c to 1-wire adaptor, DS2482</p><p>To work with the Teensy, like the PI should just require the connectors.</p><p>The ESP201 and the Teensy mount on the underside relative to the SX1276 board so that there is room.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4758/log/20018-status-update">Status update</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/4758/log/20018#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20018"><p>Life has been hectic recently, and also we have been waiting some parts.</p><p>The plan is to complete the Carambola node and build the teensy node once the next circuit board arrives, and start conducting MQTT-SN experiments out in a real paddock :-) Hopefully by the end of July we will be in a position to bolt a module in a box to my back fence and start doing some ranging measurements.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4758/log/20300-brief-update-esp8266-plus-lora">Brief update - ESP8266 plus LoRa</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/4758/log/20300#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20300"><p>So I now have an ESP8266 controlling the SX1276 module, successfully sending or receiving a beacon. This is working much more reliably as a receiver (as does the carambola2) compared to the bus pirate</p><p>This weekend is GovHack Unleashed, so not much happening for a few days.</p><p>Next step is solder the pin header onto the TeensyLC and test that I didn't accidentally put any ESP8266 specific assumptions in the code.</p><p>Then it will be on to implementing the end node MQTT-SN sensor transmissions, and hopefully soon, building up a board when the OshPark adaptor board arrives.</p><p><img src="https://cdn.hackaday.io/images/8255921435753661793.jpg"></p><p>The picture from left to right shows the SX1276 inAir9, a CP2102 using RTS &amp;c for programming control and  ESP201 module  The carambola2 with the other SX1276 is about a meter away. Only 9999 meters left to go!<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4758/log/21073-teensyesp201-adaptor-shield-build-works">teensy/ESP201 adaptor shield build works</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/4758/log/21073#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21073"><p>My shield adaptor boards arrived last week and tonight we soldered one up.</p><p>It works!</p><p><img src="https://cdn.hackaday.io/images/8391341437137277934.jpg"></p><p>There is a little bit of dodgy wiring because the ESP-201 had the serial pins in breadboard mode and I couldn&apos;t be bothered resoldering them at the moment. But it works!</p><p>The screenshot foreground window shows the carambola2 running an MQTT subscriber, reporting clock ticks and version info from the ESP8266, received via RSMB MQTT broker, MQTT-SN to SX1276 inAir9 bridge, and transmitted by the module in the photo.</p><p><img src="https://cdn.hackaday.io/images/8387171437137411331.png"></p><p>The ESP8266 is using the deep sleep mode to draw almost no current in between publish events, when it wakes up and (soon) reads sensors and transmits using MQTT-SN via the LoRa module.</p><p>Next step is to repeat the test using the Teensy-LC, then write code to read the sensors.<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4758/log/22320-soldering-again-at-last">Soldering again at last</a></h2>
                            <small class="authorship">11 days ago  &bull;
                                <a class="gray-link" href="/project/4758/log/22320#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22320"><p>Things have been a bit slow last week between work and a  family member in hospital</p><p>Finally assembled the Teensy and Raspberry Pi node version of the SX1276 adaptor shields.</p><p><img src="https://cdn.hackaday.io/images/1141331439043953027.jpg"></p><p>The raspberry pi version is a bit top heavy and will need extra support by the look of it.<br></p><p><img src="https://cdn.hackaday.io/images/5791011439043965147.jpg"></p><p>This will do for prototyping the software, but I think I&apos;ll be designing a much more compact board allowing higher clearance so it mounts  the other way over the pi.</p><p>Just in case you hadn&apos;t guessed, we haven&apos;t planned on entering the best product prize category until 2016 :-)<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4758/log/22762-minor-update">Minor update</a></h2>
                            <small class="authorship">5 days ago  &bull;
                                <a class="gray-link" href="/project/4758/log/22762#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22762"><p>Last weekend we all met up and had a mini hackathon.</p><p>We assembled a rough cut of the node that will go in the paddock with solar panels and casing, to see what could be learned about building the actual nodes.  Luckily we had plenty of cable ties...</p><p>(photos coming soon)</p><p>I have several board variants built now, allowing us to build up and start developing and testing in earnest sensor software for the  configurations.</p><p><img src="https://cdn.hackaday.io/images/2825321439545310509.jpg"></p><p>Along the way I discovered various minor mods to resistor and other component values and layout niggles to fix up in the next iteration of the design.</p><p>I also discovered that it is a royal pain to desolder a miniature screw terminal blocks without destroying it once soldered in the wrong way around !</p><p>Sensors to be deployed soon include temperature varieties, humidity, barometer, and UV, smoke, carbon gas, and vibration (for measuring coarsely whether it is a windy day / the device is being butted by sheep) and experimentally, using NFC for on-site readings</p><p><img src="https://cdn.hackaday.io/images/2690221439545534019.jpg"></p><br></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4758/log/22879-last-weekend-physical-prototyping">Last weekend : physical prototyping</a></h2>
                            <small class="authorship">4 days ago  &bull;
                                <a class="gray-link" href="/project/4758/log/22879#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22879"><p>In the background work has been progressing on the improved rain gauge.</p><p>There are a couple of criteria:</p><ul><li>need to cope with intermittent extra big deluge</li><li>need to be much cheaper than present varieties on the market</li><li>to achieve that we need to use a tipping bucket rather than a siphon, but find a way to be much more accurate than a tipping bucket</li><li>the solution involves more internal sensors than is typical along with a microcontroller, in this case an arduino micro</li></ul><p>This is the first rought cut, used for sizing enclosures (hint: this is too big), designing the funnel and tipping mechanisms and electronics mounting points so we can start thinking about CAD&apos;ing the design for 3D-printing and/or laser cutting<br></p><img src="https://cdn.hackaday.io/images/4261911439640984796.jpg"><p>We also spent some time considering casing options for the sensor nodes.  An obvious option is to mount the lot inside a PVC pipe, but another way is just using a sealed jiffy case or variant.</p><p>Turns out for the Linux based system we need to think a bit more about how to fit both the compute module and sensor electronics in with the solar panel charging circuits.</p><p>Probably didn&apos;t help that my junk box seemed to be full of plastic boxes that were either too small or too large... Note, the following image is actually equipped with the Teensy LC we wont from hackaday (thanks!) rather than the Linux node</p><p><img src="https://cdn.hackaday.io/images/6971381439641270396.jpg"></p><p>And of course we took the chance of a sunny winter day to go trapseing in a paddock posing for photos:</p><p><img src="https://cdn.hackaday.io/images/5199201439641374280.jpg"></p><p>We also used plenty of cable ties and drank plenty of coffee :-)</p><p><img src="https://cdn.hackaday.io/images/3617561439641495876.png"></p></div>
                            </div>
                        </li>
                    
                </ul>

                
                <div class="pagination">
                    
                    <a href="?page=3" class="grey-gold-button prev-button ">Previous</a>
                    
                    
                    <a href="?page=5" class="grey-gold-button next-button ">Next</a>
                    
                </div>
                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'qM6fvB5n-yver77kxBhZsfY-k8yupbg-aiOw';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>