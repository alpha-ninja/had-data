<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; Takologic &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F5742%2Flogs%3Fpage%3D1">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/5742-takologic">Takologic</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">STM32 based Logic Analyzer</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/2050-kuro" title="Visit Profile">Kuro</a><span>&bull;</span>
                
                3 months ago<span>&bull;</span><a href="/project/5742#discussion-list" title="See Comments">5 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/5742-takologic">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/5742/logs/sort/newest">Newest</option>
                    <option value="/project/5742/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/5742/log/17706-some-info-about-the-project">Some info about the project</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5742/log/17706#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17706"><p>So, here's the first project log.</p><p>I'll keep this short and try to show how it's being developed, tested and explain the logic flow of the analyzer.</p><p>Currently, there are four main hardware being used:</p><ol><li>a cheap STM32F103C8T6 development board;</li><li>a ST-Link clone for programming and debugging the STM32;</li><li> an Arduino Nano, to create a test signal and borrow the USB to UART converter;</li><li>and DSO Nano v3 oscilloscope.</li></ol><p>The other hardware being used is a PicKit 2 as a logic analyzer (the UART tool, to be precise) so I can sniff the data being transmitted in a serial console on the PC.</p><p><br>I've set the TX and RX pin on the Arduino as floating inputs, so I can use the USB to UART converter with the ARM MCU. I've also set a ~50kHz signal on pin D13, so I can read with the ARM.</p><p><img src="https://cdn.hackaday.io/images/6490851431352731050.jpg"></p><p>About the code, it follows a very simple logic:</p><ol><li>Blink a led if sampling</li><li>If sampling is done, transmit</li><li>If there's data available, attend to it</li><li>Repeat</li><li>Sampling is done in interruption routine</li></ol><p>The tricky part is number 3, as it includes receiving commands, changing sampling settings, arming the trigger, etc.</p><p>A crude flow chart without details about part 3:</p><p><img src="https://cdn.hackaday.io/images/1213191431353042522.jpg"></p>And to finish this project log, a OLS screenshot of the 50kHz signal captured at 100kHz sampling rate:<p><img src="https://cdn.hackaday.io/images/4693361431353549542.png"></p><br></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5742/log/17820-usb-cdc-and-the-analyzer">USB CDC and the analyzer</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5742/log/17820#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17820"><p>I've been fiddling with the USB CDC on the STM32.</p><p>I was expecting to USB being a problem because I knew the USB interrupts in ~1ms intervals could ruin the data grabbing interruptions. I've tried implementing a simple CDC program and the USB interrupts took around 6µs every millisecond.</p><p>If I tried to sample with intervals of around 6µs or less, I would be fighting with the USB interruptions constantly, even with a higher priority to the data grabbing interruption. That means I would be limited to around 150kHz sampling time.</p><p><span class="read-more-tag"></span><span></span><br></p><p>Setting the data grabbing as high priority and USB as low priority, the high priority interrupt would run, then the USB interrupt would follow, but no other interrupts would take place until the USB interrupts finish. I may be wrong. Hopefully, high priority interruptions may be able to interrupt low priority interruptions in STM32, so I'll have a read on this.</p><p>As I had the program already running in front of me I had nothing to lose testing another thing to use in the worst scenario: disable the USB interrupts for a set time. Sampling 10KB of data, a byte per sample, at 200kHz should take around 51ms. If I could maintain the USB device connected without attending to interrupts for a little more than that, I could sample everything while not having to worry about the USB interrupting while sampling.</p><p>For my surprise, it worked. The host didn't disconnect the device even with 1 second without attending to the interruptions. Obviously, if the host sent any data during this time, it would be completely lost.</p><p>This is not the right way to do it, but it seems possible to use in a worst case scenario.<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5742/log/17980-code-on-github">Code on GitHub</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5742/log/17980#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17980"><p>I've committed the code as it is now to GitHub.</p><p><a href="https://github.com/kurozz/takologic" target="_blank">https://github.com/kurozz/takologic</a><br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5742/log/18127-data-acquisition-through-dma">Data acquisition through DMA</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5742/log/18127#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-18127"><p>In the weekend, I've been trying to use  DMA to sample data.</p><p>I've been reluctant to use DMA mainly because two reasons:</p><ul><li>there's seems to be no way to get MSB only from a port through DMA</li><li>the LSB of PORTB on F103C8 is not fully 5V tolerant</li></ul><p>That means I would need to either use LSB for the 8 first channels or have half of the sampling memory.</p><p>Using the LSB, care needs to be taken when sampling 5V signals. Also, on the dev board I'm using, PB2 is BOOT1 and not available through the pin headers.</p><p>Having half of the sampling memory sucks.</p><p>I've tried using DMA with the LSB, but there seems to be some misreadings every 1~2ms, which I couldn't find what was causing it.</p><p><img src="https://cdn.hackaday.io/images/1263961431985884526.png"></p><p>I'll have a look with an oscilloscope at college on how much time it takes to capture data through the interruption acquisition to see if it's really worth using DMA.<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5742/log/18770-updated-code">Updated code</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5742/log/18770#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-18770"><p>I've updated the code.</p><p>While fiddling with the STM32, I've noticed several things that changed what I am expecting of this project.</p><ul><li>The max rate of sampling will be 8MHz, as this seems to be as fast as the MCU can grab data from the input port.</li><li>Serial and complex triggers seems to be out of question. Simple parallel trigger is running at a max of 500kHz sample rate.</li><li>I've opted for 8/16 channels with PB0~PB7 as first 8 channels and PB8~PB15 as the last 8 channels</li><li>Sampling only channels 8~15 is not supported</li><li>Sampling with rates 1MHz and over will start instantly with no trigger</li></ul><p>I'm still trying to speed up the interruption routine even more, to achieve 1MHz sampling with trigger support.<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5742/log/19539-slow-progress-and-teensy-lc">Slow progress and Teensy LC</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/5742/log/19539#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19539"><p>Yo, guys.</p><p>I've been rather busy with two other projects and college last weeks so I've made very little progress with the logic analyzer. Soon I'll be having the final tests for this term and I'll probably won't be able to work much on this on July.</p><p>I've also received the Teensy LC from the Hackaday prize last Thursday. Thanks a lot, Hackaday!. </p><p>It was shipped on May 15 and arrived here in Brazil on May 18. After that it took only a month to go through customs and be delivered. To top it off, I had to pay $11 from import duties. That's Brazil for you, and why I've never bought a Teensy for me before, as I would've paid for two of them to get only one.</p><p><img src="https://cdn.hackaday.io/images/3693781434356778926.jpg"></p><p>I'll be posting about one of the projects I was working on soon. It's a custom clock that I built that monitor power failures to leave in my parents house.</p></div>
                            </div>
                        </li>
                    
                </ul>

                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = '6lUxnzOt-D_7VpnyFClSOjWnsz8nrhe5_7gY';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>