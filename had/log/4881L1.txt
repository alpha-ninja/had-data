<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; EZeeSample &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F4881%2Flogs%3Fpage%3D1">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/4881-ezeesample">EZeeSample</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">One master device is held by someone walking a set course. One or more slave devices lets you mark points within a set r of base.</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/2428-johnowhitaker" title="Visit Profile">johnowhitaker</a><span>&bull;</span>
                
                5 months ago<span>&bull;</span><a href="/project/4881#discussion-list" title="See Comments">0 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/4881-ezeesample">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/4881/logs/sort/newest">Newest</option>
                    <option value="/project/4881/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/4881/log/16967-attinys-ready-to-go">ATtinys ready to go</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/4881/log/16967#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-16967"><p>I have my tool-chain all set up. Tested it today by uploading the obligatory LED blinking program.</p><p>The code will be written in C, compiled with gcc-avr and uploaded with a bus pirate (my favourite tool of late) using avrdude -p attiny85 -c buspirate -P /dev/ttyUSB0. </p><p><img src="https://cdn.hackaday.io/images/8687821430063756160.jpg"></p><p>Using the bus pirate as an AVR programmer is wonderful - no external components or power needed. I just connect  +3.3V and GND to +V and GND on the 'tiny, wire up MOSI and MISO, CLK goes to SCK on the 'tiny and CS goes to RESET (pin 1 of the ATtiny85). Here is the makefile I use:</p><pre>DEVICE     = attiny85
CLOCK      = 1000000
PROGRAMMER = -c buspirate -P /dev/ttyUSB0
OBJECTS    = main.o
FUSES      = -U lfuse:w:0x62:m -U hfuse:w:0xdf:m -U efuse:w:0xff:m
# generated by <a href="http://www.engbedded.com/fusecalc/" target="_blank">http://www.engbedded.com/fusecalc/</a>

AVRDUDE = avrdude $(PROGRAMMER) -p $(DEVICE)
COMPILE = avr-gcc -Wall -Os -DF_CPU=$(CLOCK) -mmcu=$(DEVICE)

all:	main.hex

.c.o:
	$(COMPILE) -c $&lt; -o $@

.S.o:
	$(COMPILE) -x assembler-with-cpp -c $&lt; -o $@

.c.s:
	$(COMPILE) -S $&lt; -o $@

flash:	all
	$(AVRDUDE) -U flash:w:main.hex:i

fuse:
	$(AVRDUDE) $(FUSES)

install: flash fuse

load: all
	bootloadHID main.hex

clean:
	rm -f main.hex main.elf $(OBJECTS)

main.elf: $(OBJECTS)
	$(COMPILE) -o main.elf $(OBJECTS)

main.hex: main.elf
	rm -f main.hex
	avr-objcopy -j .text -j .data -O ihex main.elf main.hex

disasm:	main.elf
	avr-objdump -d main.elf

cpp:
	$(COMPILE) -E main.c</pre><p>Nice to have everything ready, so now I can get down to prototyping. I also plan on whipping up a PCB during my next Altium lecture (uni student, so free access) although I am tempted to go with Kicad. The only reason I'm considering Altium is that this project will probably be simple enough for others to reproduce just by looking at the schematic, and I need the practice...<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4881/log/17021-begging-for-pcbs">Begging for PCBs</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/4881/log/17021#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17021"><p><img src="https://cdn.hackaday.io/images/4467911430115406692.jpg"></p><p>In this log I'll outline the PCB work I'll need to move this project along, as suggested <a href="http://hackaday.com/2015/04/24/50k-in-play-thirty-projects-will-win-custom-pcbs-this-week/">in this HAD post</a>, although the dog makes my case fairly eloquently already :)</p><p>There will be two separate boards for this projects, which I'm going to call the master and slave. I'm not sure how I'll design the master board yet. It may be an expensive but easy arduino+GPS+SD Card stack, a nice custom board or (the option I'm leaning toward for now) AA simpler board that plugs into a phones earphone socket and offloads the hard work of logging, GPS, UI to the phone. I think this last idea would be best as it will keep costs very low and allow me to get started without waiting 2 months for a GPS breakout board. If I go with this option, I'll just need a fairly small PCB with a few IR LEDs and IR recievers (like those in DVD players, which have some extra circuitry built in to make life easy), a micro (probably an ATtiny85 just to be consistent) and a battery connector.</p><p>The 'slaves' will be easier. Each one will be an ATtiny85, a boost converter to power from a AA battery, an IR LED/reciever pair, an electret microphone with a preamp (1 transistor, some resistors), an RGB LED for status info, a push button or two for input (may need a shift register if I go with two buttons and an RGB LED, but I'll try to get away with just the pins available) and a battery holder. </p><p>Since the whole goal of this project is to keep everything small, cheap and robust, some professionally made PCBs will be a much better fit than my usual messy protoboard mashups, and if I ever plan on selling these having some nice purple prototypes would be useful ;)<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4881/log/17580-advice-requested-phone-or-teensy">Advice requested: Phone or Teensy</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/4881/log/17580#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17580"><p>The main base station (Master) needs to be able to time the delay between an IR flash and the arrival of an ultrasound pulse (my best idea for estimating distance). I was thinking of offloading some of the work to a phone by using the headphone jack as IO. However, the post on teensies made me wonder if detecting a 25kHz tome would be doable fast enough on a low cost arm processor. This would make the project more self-contained and probably cheaper... Anyone have thoughts on this, or experience detecting specific frequencies with a micro?</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4881/log/19683-attiny-test-code-working-trinket-has-arrived">ATtiny test code working, trinket has arrived!</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/4881/log/19683#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19683"><p>I finally got the ATtiny85 code behaving as I want. It simultaneously sends out an ultrasound beep and flashes an LED. I can now start writing code to detect these and estimate distance. The code uses the internal timer1 to do PWM, generating the required frequency without using up CPU resources. This is vital as it will need to do other things. I also have interrupt code for when a button is pressed and some other fluff, but for now this is all I need to test everything. Here is the code:</p><pre class="hljs cpp"><span class="hljs-preprocessor">#<span class="hljs-keyword">include</span> &lt;avr/io.h&gt;</span>
<span class="hljs-preprocessor">#<span class="hljs-keyword">include</span> &lt;util/delay.h&gt;</span>
<span class="hljs-preprocessor">#<span class="hljs-keyword">include</span> &lt;avr/interrupt.h&gt;</span>



<span class="hljs-comment">// write digital high or low to pin &lt;pn&gt; on port &lt;prt&gt; - good for arduino converts</span>
<span class="hljs-preprocessor">#<span class="hljs-keyword">define</span> DIGIWRITE_H(prt, pn) prt |= (1&lt;&lt;pn)</span>
<span class="hljs-preprocessor">#<span class="hljs-keyword">define</span> DIGIWRITE_L(prt, pn) prt &amp;= ~(1&lt;&lt;pn)</span>



<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">initTimer</span><span class="hljs-params">()</span></span>{
  <span class="hljs-comment">//TCCR1 = _BV (CS10);       // for no prescaling   </span>
  TCCR1 |= (<span class="hljs-number">1</span> &lt;&lt; CS10);       <span class="hljs-comment">// PCK/2</span>
  <span class="hljs-comment">//TCCR1 |= (1 &lt;&lt; CS11);      // uncomment the rest of these to lower the frequency to ~1Hz</span>
  <span class="hljs-comment">//TCCR1 |= (1 &lt;&lt; CS12);      // look at ATtiny85 datasheet to see which bits scale the clock of timer 1 by what amount</span>
  <span class="hljs-comment">//TCCR1 |= (1 &lt;&lt; CS13);</span>
  GTCCR = _BV (COM1B1) | _BV (PWM1B);  <span class="hljs-comment">//  clear OC1B on compare, we'll be doing PWM with the output directly toggling PB4 (OC1B)</span>
  GTCCR = _BV (COM1B1) | _BV (PWM1B);  <span class="hljs-comment">//  clear OC1B on compare, we'll be doing PWM with the output directly toggling PB4 (OC1B)</span>
  OCR1B = <span class="hljs-number">80</span>;                   <span class="hljs-comment">// duty cycle (50%) = freq/2</span>
  OCR1C = <span class="hljs-number">160</span>;                  <span class="hljs-comment">// frequency (lower = higher frequency)</span>
}  <span class="hljs-comment">// end of setup</span>



<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{
    initTimer();
    <span class="hljs-comment">//DDRB is the data direction register for port B - the io pins on the ATtiny85 are all in port B.</span>
    <span class="hljs-comment">//Each bit refers to one pin. 0 means input, 1 means output.</span>
    DDRB = <span class="hljs-number">0</span>b00001000; <span class="hljs-comment">//pin PB3 to output and PB4 + the rest to input for now(pins 2 and 3 on DIP ATtiny85)</span>
    <span class="hljs-keyword">for</span>(;;){
        DIGIWRITE_H(PORTB, PB3); <span class="hljs-comment">//turn LED on</span>
        DDRB = <span class="hljs-number">0</span>b00011000; <span class="hljs-comment">//allow output on the speaker pin (PB4). This saves having to stop and restart the timer each time.</span>
        _delay_ms(<span class="hljs-number">500</span>);
        DIGIWRITE_L(PORTB, PB3); <span class="hljs-comment">//turn LED off</span>
        DDRB = <span class="hljs-number">0</span>b00001000; <span class="hljs-comment">//turn speaker off</span>
        _delay_ms(<span class="hljs-number">500</span>);
        
    }
}</pre><br><p>I program the chip with a bus pirate as detailed in a previous log, and I can then easily test it by turning on power from the bus pirate from a serial console. The uses of that tool continue to amaze :)</p><p><img src="https://cdn.hackaday.io/images/3537981434610645125.jpg"></p><p>Next in the TODO list is to hook up a mic + preamp to the teensy and see if we can detect sound...<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4881/log/20337-sound-output-looking-noisy">Sound output looking noisy</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/4881/log/20337#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20337"><p>I'm using a timer to toggle a pin on the ATtiny85. Was hoping for a nice square wave, but looks a little noisy:</p><p><img src="https://cdn.hackaday.io/images/610721435829194864.png">Should still do the job.</p><p>NB this could also be because of my utterly hacky 'scope (<a href="https://hackaday.io/project/6511-cell-phone-oscilloscope">https://hackaday.io/project/6511-cell-phone-oscilloscope</a>)<br></p></div>
                            </div>
                        </li>
                    
                </ul>

                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'UpsZFCqU-EgerZF9DLXGtkwH4aMtqZw2JoqI';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>