<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; A Smart Fridge With Brains &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F5117%2Flogs%3Fpage%3D1">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/5117-a-smart-fridge-with-brains">A Smart Fridge With Brains</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">All prior smart fridge attempts have basically been tablets glued to fridges. My idea is a blueprint for a fridge that is actually &#34;smart&#34;.</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/15966-joshua-t" title="Visit Profile">Joshua T</a><span>&bull;</span>
                
                5 months ago<span>&bull;</span><a href="/project/5117#discussion-list" title="See Comments">0 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/5117-a-smart-fridge-with-brains">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/5117/logs/sort/newest">Newest</option>
                    <option value="/project/5117/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/5117/log/16142-research-stage-part-1">Research Stage: Part 1</a></h2>
                            <small class="authorship">5 months ago  &bull;
                                <a class="gray-link" href="/project/5117/log/16142#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-16142"><p>I am just getting started with this project, which means all I have at the moment is a concept and a list of desired features. However, I have started researching what I would need to bring something like this to life, and have discovered some things worth noting:</p><p>The first thing to note is that I will likely <strong>not</strong> be using <a href="http://opencv.org/">OpenCV</a>. When I first thought of attempting a smart fridge with object recognition, my very first thought was that I would have to use OpenCV, which I believed was the industry standard. However, after actually looking at the website and documentation, I think OpenCV, although powerful, is too complex and non-user-friendly for my needs. </p><p>Instead of OpenCV, I think I will try using <a href="http://caffe.berkeleyvision.org/">Caffee</a>, which appears to be very powerful, easy to use, and is also covered under a more generous license (BSD). The demo on their site is absolutely amazing and makes it seem as though the software would be a perfect match for my needs. </p><p><img src="https://cdn.hackaday.io/images/2893201428289911431.png"></p><p>The other thing I realized is that my original plan, to use a raspberry pi, is probably not a good idea. The computational requirements for near real-time object recognition exceed what the raspberry pi was designed for, and although there have been developments in optimizing Caffee for the device, <a href="http://stevenhickson.blogspot.com/2015/03/classifying-everything-using-your-rpi.html">the fastest it appears to run is at 3 seconds of processing per frame</a>, which is too slow for my needs. I think what I will use instead is an actual laptop or desktop computer. I have an old laptop that is not in use that would be great for running a lightweight linux distro and Caffee, so I will probably try that before spending money on any new hardware.<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5117/log/16687-dr-strain-gauge-or-how-i-learned-to-love-pre-made-scales">Dr. Strain Gauge (Or: How I Learned to Love Pre-made Scales)</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/5117/log/16687#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-16687"><p>My speed of progress on this project has been a little slower than anticipated, mostly due to school (BLERGH), but I have made a little bit of progress. To me, the most important part of this concept for a smart fridge is the way (or should I say <em>weigh) </em>I am envisioning it using weight sensors to make intelligent assumptions without user input. Example: you take a carton of milk out of the fridge, pour yourself a glass, and then put the carton back on the fridge shelf. Because the fridge has weight sensors, it knows the weight of the carton before and after you consumed some, so combined with publicly available nutrition information, it can tell you exactly how many calories of milk you consumed, without requiring a single button to be pressed. </p><p><br><span></span></p><p>Here is the thing though, weight sensing seems to a lot more complex than you might think. There are so many sensors out there that can be easily integrated into MCU projects (simply hook sensor output up to ADC), but I had no idea where to even start with weight. I started researching and it seems like the most commonly used sensor is a <em><a href="https://en.wikipedia.org/wiki/Strain_gauge">strain gauge</a>.</em> This is essentially a flexible film that has an embedded resistor. As the gauge flexes (or is strained), the resistance changes. However, this change in resistance is miniscule, so you need to use the strain gauge in a <a href="https://en.wikipedia.org/wiki/Wheatstone_bridge">Wheatstone Bridge</a> configuration in order to actually measure the change in resistance. After that, you need a special kind of amplifier, an <a href="https://en.wikipedia.org/wiki/Instrumentation_amplifier">instrumentation amplifier</a>, to amplify the signal before it can be fed into a microcontroller, if you want a wide range of values to be read. This video is an excellent overview of the process:</p><iframe style="width: 500px; height: 281px;" src="//www.youtube.com/embed/fPzUtzFJFus" allowfullscreen="" frameborder="0" height="281" width="500"></iframe><p>All of this is certainly feasible to do, but the costs start adding up really quickly. For some reason it is really hard to source strain gauges (also often sold in the form of <em>load cells</em>) for cheap. When you add in the cost of an instrumentation amplifier (hard to find under $3 per IC), things really start getting pricey. I think this comment thread (on <a href="http://hackaday.com/2013/06/12/building-a-digital-scale-from-scratch/">this HAD article</a>) best sums up the dilemma: </p><p><img src="https://cdn.hackaday.io/images/6980251429388894745.png"></p><p>At this point, I think the best option for this project might actually be to just head over to Goodwill (or some other thriftstore) and purchase some already made kitchen scales, then disassemble them and see if there is any easy way to tap into the output. Even on Amazon, I can get a digital kitchen scale for around $7, coming from inside the US, which is LESS than a single order of strain gauges. </p><p>In the meantime, while I was thinking about all of this, I was trying to come up with alternative ways to measure weight, other than the go-to method of strain gauges. I happened to have a few Hall Effect sensors laying around, so I came up with a concept for using them to measure the change in distance between a platform (holding the object to be weighed) and a base platform, separated by some sort of spring. Based on price, this might be a more cost-effective method, considering I probably only paid about a penny for each sensor, but much more labor-intensive to implement.  I'm not actually going to use this method in my project, but it was something fun to play around with. Here is short video of me goofing around with this concept:</p><iframe style="width: 500px; height: 281px;" src="//www.youtube.com/embed/6UskPQEhCzY" allowfullscreen="" frameborder="0" height="281" width="500"></iframe><p>I should also note that I am far from the first person to experiment with using hall effect sensors to measure weight. Hall effect sensors are commonly used in automotive applications for measuring force/displacement:</p><p><a target="_blank" href="https://books.google.com/books?id=Gv1DAgAAQBAJ&amp;lpg=PA23&amp;vq=hall%20effect&amp;pg=PA23#v=snippet&amp;q=hall%20effect&amp;f=false"><img style="display: block; margin: auto;" alt="" src="https://cdn.hackaday.io/images/524731429389439253.png"></a></p><p>The best example I could find of a hall-effect sensor scale was actually a project featured on Hackaday previously: <a href="http://hackaday.com/2011/01/21/magnetic-digital-scale/" target="_blank">http://hackaday.com/2011/01/21/magnetic-digital-scale/</a>. <br></p></div>
                            </div>
                        </li>
                    
                </ul>

                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'negyvDvw-VBlUrp1EwZswn6KuBMI6vunPcUU';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>