<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; HydroPWNics &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F2964%2Flogs%3Fpage%3D3">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/2964-hydropwnics">HydroPWNics</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">An open source hydroponic garden control, monitoring, and grow system with cloud database integration</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/2632-adam-vadala-roth" title="Visit Profile">Adam Vadala-Roth</a><span>&bull;</span>
                
                a year ago<span>&bull;</span><a href="/project/2964#discussion-list" title="See Comments">16 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/2964-hydropwnics">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/2964/logs/sort/newest">Newest</option>
                    <option value="/project/2964/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/2964/log/21200-update-grow-unit-build-prototypes-and-software">Update, Grow Unit build, Prototypes, and Software</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/2964/log/21200#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21200"><p>This week I managed to get a bit more done, a little bit of work here and  there on each of the different parts. At the start of the week I ordered all the components for populating the PCBs, they should be in from Digikey after the weekend. I went through my inventory of components on hand and decided to just order all new components, to keep things simple, it ended up being a lot cheaper than I originally estimate too.  </p><p>During this week I also got a lot more done on the grow unit. With the help of some friends I went to the local hackerspace&apos;s free night and drilled out all the wholes for the pots in the fence post. Unfortunately I forgot my camera so I don&apos;t have any pictures at the space of the drilling. </p><p>Posts all drilled with pots in all but 4 positions, see that the frame isn&apos;t finished, more on that next!</p><p><img src="https://cdn.hackaday.io/images/2782161437363380292.JPG"></p><p>Today I finished the wooden frame of the  whole unit. I added the crossboards and legs, take a look at the pictures to see what I mean:</p><p>Dry fitting the legs after the cross boards added to the top of the frame. </p><p><img src="https://cdn.hackaday.io/images/6886621437362906809.JPG"></p><p><img src="https://cdn.hackaday.io/images/6382901437362969680.JPG"></p><p>To attach the legs securely and straight, I clamped them tightly into each corner with the same two clamps I used the other day. I used a spare piece of the 4X4 wood to hammer each leg after being clamped to make sure its flat up against the board on the top of the frame. I used 4 screws on each leg. I&apos;m trying to decide if I want to have crossmembers between the legs or have a skirt for the frame at the bottom, or both. I think a skirt at the bottom is definitely going to happen, mainly so I can build a giant drawer underneath the unit to store the water reservoirs.</p><p><img src="https://cdn.hackaday.io/images/1933951437363021175.JPG"></p><p>Another view:</p><p><img src="https://cdn.hackaday.io/images/9446411437363186185.JPG"></p><p>Done for now, there will be a two by four skirt added to the bottom (as I stated previously), next trip to the hardware store I will be getting the remaining wood to build the skirt and bright green paint!</p><p><img src="https://cdn.hackaday.io/images/6211441437363230569.JPG"></p><p>What it looks like with the rows of fence on top:</p><p><img src="https://cdn.hackaday.io/images/8708761437363328193.JPG"></p><p>Overall I like how the frame came out, its almost a perfect 4X4 foot square and a little less than two feet of the ground. Orignally I was going to make it 5 tall off the ground, but I wanted more height for the plants to grow. I am also going to be using rubbermaide tubs for a reservoir instead of a 55 gallon water barrel which was also another reason to make it shorter. </p><p>As for software updates I did some more basic test work on the embdedded side and made some changes to how the GUI will be done.  The GUI to control HydroPWNics will be just be a Jquery web application on a web page that the user logs into. The application will receive data to display from the cloud data server and send/receive JSON packets to the Java application running locally on the beaglebone black. With all these changes I should also mention that user Shane Kirkbride has joined the project offering his Microsoft Azure based cloud data system for plants.The platform is called Viva Planet and can be found here: <a href="http://www.vivaplanet.io/">http://www.vivaplanet.io/</a> I will be adjusting the HydroPWNics API to talk to his system, so all the java I wrote and posted is subject to heavy change. This development is very good news though, now  cloud database doesn&apos;t have to be created from scratch and I can now focus on the application and embdedd software. </p><p>As for embedded work I have been experimenting with the ESP8266 modules I have and the Arduino IDE. The reason for using the IDE is that its a simple way to see if the ESP modules I purchased are non-counterfeit or just work like they are supposed to. I also messed around with my Sparkfun ESP8266-Thing but did not get it to program with the IDE. I explored it with a logic analyzer and discovered that the chip isn&apos;t talking back but thats as far as I got with it. Here are some pictures of the two test setups I&apos;m working with:</p><p>Standard ESP-02 module, hooked up to an FTDI breakout that can do 3v3 and 5v power. Pictured is the logic analyzer wired up to monitor the RX/TX lines. I was looking to record an entire programming sequence and see how it compared to the the sparkfun module&apos;s response.</p><p><img src="https://cdn.hackaday.io/images/5984111437370567572.JPG"></p><p>Sparfun board setup, I really hope I figure out whats wrong with it, I think I might have bricked it. Though I have to say this logic analyzer has been super useful !</p><p><img src="https://cdn.hackaday.io/images/8449391437370764254.JPG"></p><p>My next plan for the ESP hardware is to setup the bare metal GCC based toolchain under linux and perform tests with that. I will be using the standard toolchain for compiling the Bowler MCU server for the ESP chip. After I have the ESP working with its toolchain I&apos;m turning my attention back towards the FreeScale hardware, the plan is to setup a terminal build script under linux using the ARM GNU toolchain so that I can work independently of the Kinetis IDE. Stay tuned for more interesting updates to come, next week I am soldering all the PCBs together by hand, I promise there will be lots of pictures!!!!<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/2964/log/21309-components-are-in-its-happening">Components Are In, ITS HAPPENING</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/2964/log/21309#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21309"><p>Today UPS arrived with my Digikey order containing all the components to build revision 1 of the HydroPWNics hardware. I am hoping to solder and test the hardware this week, and get each board functioning/ready for development. If there are any problems or mistakes in the design, I&apos;m going to attempt to modify the PCBs with wire and trace cutting, and if that cant render the current hardware revisions functional next week will be dedicated to revising the PCBs. If the PCBs are functional or repaired to function the plan is to spend next week on the embedded software. Here is what the pile of parts looked like:</p><p><img src="https://cdn.hackaday.io/images/7873981437547548606.JPG"></p><p>So yeah yay parts! So as for populating these PCBs successfully without damaging components I have sort of a protocol I follow for populating boards. With a prototype I like to do manual assembly placing  each component on one at a time under a stereo microscope. I like to ensure that every single component is soldered on perfectly to prevent shorts and keep components well secured to the pads. Now when the PCB is populated I do it in stages/sections rather than solder on all the components, cross my fingers and turn on the power. I found that that method can result in blown components and that&apos;s not fun for anyone, components cost money and can be difficult to remove depending on the package. The first stage/section thats populated is the power supply, whatever it is composed of in the case of these board a decoupling cap and a regulator. After the power supply is populated, I inspect it for shorts under the microscope and power it on. The goal is to debug the power circuit and make sure it is function correctly. The next thing I do is manually test all the pads that should be receiving power and make sure they are recieving the correct voltage (some designs have more than one voltage). In the case that the design has a more complex power circuit such as the module hub with its two regulators, then the process is the same except one regualtor is populated and tested before the other. The next stage for population and testing really depends on the topology of the PCB, in this case the hydroPWNics boards are microcontroller boards like most of my projects tend to be. In this case the next thing I populate and test is the micro controller and its supporting passive components everything it needs to boot up. After the microcontroller is soldered in place with its supporting components I power it up and attempt to program the micro, if it is succesfful I just populate the rest of the board if not consult the datasheet and figure it out! Thats basically my PCB population protocol I&apos;ll try to cover each section of the population of each board in the next project log.</p><p>Amongst the components in the box from digikey was something else. I also purchased a FreeScale FRDM-KL05Z Freedomboard, this will function as a development tool acting as a dev board and programmer for the two sensor modules. I do also believe I will be able to program the Module Hub with the OpenSDA debugger built into the Freedomboard but I have yet to test it. Anyways I thought the packaging for the little board was pretty neat so here a picture:</p><p><img src="https://cdn.hackaday.io/images/1004421437549009203.JPG"></p><p>Open Box</p><p><img src="https://cdn.hackaday.io/images/2917221437549043803.JPG"></p><p>On another note, I went out to the hardware store today and picked up some more supplies for the NFT rig I will be using to deploy and develop HydroPWNics with. I got more PVC pipe for the fitting I have, the missing endcaps for the posts, and some spraypaint for the frame. I got a cool matte green color and some primer so this thing is gonna look pretty. Endcaps not pictured, I couldnt help myself and put them on as soon as I got home. </p><p><img src="https://cdn.hackaday.io/images/955911437549204023.JPG"></p><p>And one more thing, a while back I bought a ton of ESP8266 stuffs on ebay for development and projects. I grabbed up enough ESP-12E modules for populating the Module Hub PCBs but also got a breadboard breakout kit. I soldered it up a while ago and didn&apos;t do anything with it. Last night I wired it up with some mini breadboards I had lying around to an FTDI breakout. I just wanted to test the module since i heard counterfeits of this particular one are common. To test the module I loaded example project code from the Arduino IDE with ESP8266 support, I&apos;m happy to say that the module programmed successfully a few times, next step now is to setup the toolchain and learn how to build projects for it that way.</p><p><img src="https://cdn.hackaday.io/images/3782721437549493272.JPG"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/2964/log/21642-hardware-build-update">Hardware Build Update</a></h2>
                            <small class="authorship">22 days ago  &bull;
                                <a class="gray-link" href="/project/2964/log/21642#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21642"><p>Friday of last week I started assembling the hardware.  Most of my time was spent organizing components and tracking down all the tools and missing parts at the hackerspace. I didn&apos;t get as much don the first day but I didn&apos;t expect to, hopefully this week the build will pick up pace and more will get done per day. Anyways the first board I got started with was the analog sensor module PCB. Following my PCB population protocol I described int he last update I started by populating the power supply of the PCB first. In the case of the analog sensor module the power supply consisted of a TPS62162DSG DCDC switching regulator circuit with a fixed output of 3.3v. First I assembled the regulator then I cleaned up the board with isopropyl alcohol and a toothbrush just to get rid of flux and solder balls that could cause shorts. Before moving on with any more assembly I tested the power supply circuit. When testing a voltage regulator its best to limit the current on your benchtop powersupply to mitigate the severity of component failures if there is a short or mistake in the design. In my case I limited the PSU to 100mA at 12V , when I tested the board the regulator powered on successfully and outputted a steady 3.3v volts!! The regulator working on this board is a good sign for the rest since they are using the same circuit and same PCB layout. Given that the power supply worked, I populated the microcontroller part of the PCB, however I held off on testing it because I still am figuring out the programming routine for the Kinetis chips from the Kinetis IDE. Anyways here is a picture of the first PCB so far:</p><p><img src="https://cdn.hackaday.io/images/7772211438030484278.png"></p>So yeah more to come on populating PCBs in the coming days, also i hope to have a guide up on the wikis on how to setup toolchains for the MCUs and SoC hardware being used on the HydroPWNics project. Stay tuned!!!!!</div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/2964/log/22485-custom-grow-lights">Custom Grow Lights !</a></h2>
                            <small class="authorship">8 days ago  &bull;
                                <a class="gray-link" href="/project/2964/log/22485#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22485"><p>So last week after a short vacation I got some work in on the project. The electronics is on hold while I develop the embedded software a bit further and order some more swtitching regs. In the mean time I have been working on other aspects of the project. I am buuilding custom LED grow lights that will be powered of cheap switching PSUs, the standard LED power supply you find on ebay. The LEDs are 5050 variety mounted on strip, they are two red wavelengths and one blue wavelength (forgot at the time of posting), between this combination the plants should get all they need. I also got some 5050 purple LEDs too to mix in for more wavelength variety. The lights are a simple plywood design, three cental boards cut with 60 degree bevels glued together to form a half hexagon shape. Ends will be made from ply wood ans well and the whole assembly will be glued and screwed together. The inside will be plated in tin foil mounted using spray mount glue. The electronics for driving/switching the strips wil be mounted on the outside one end of the light. So far I started building one light, I havent decided 100% on how they are gonna work/be controlled, the tentative idea is using a DyIO and the 8 channel relay board you can get off ebay to individually switch strips on an off , allowing for changing light coor temp configurations or cutting power down to save on energy costs. I might just wire them all in parallel and just power them straight, not sure yet. Anyways I took some pictures of what I&apos;m working with:</p><p>Boards Cut for custom grow light, half inch think birch plywood.</p><p><img src="https://cdn.hackaday.io/images/8744031439272218316.JPG"></p><p>laying out the LEDs on the board with the relay board and DyIO module</p><p><img src="https://cdn.hackaday.io/images/8872731439272413536.JPG"></p><p>Up close shot of controller electronics </p><p><img src="https://cdn.hackaday.io/images/7664461439272515699.JPG"></p><p>Stay tuned for more!!!</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/2964/log/22520-water-circulation-parts-and-components">Water Circulation Parts and Components!</a></h2>
                            <small class="authorship">8 days ago  &bull;
                                <a class="gray-link" href="/project/2964/log/22520#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22520"><p>Part of HydroPWNics is building a Nutrient Film Technique grow system, this post is mostly about the various parts I made for the NFT grow system I&apos;ve been working on for the project. Also if you wish to build your own version of this cheap NFT setup I made a separate project page and will be adding pictorial instruction to it to help folks build their own! The other page wont be getting project logs and updates like this one, its mostly to cut down on clutter and be a standalone guide.  Project page yo build your own NFT: <a href="https://hackaday.io/project/7116-low-cost-nft-hydroponic-garden-under-250">https://hackaday.io/project/7116-low-cost-nft-hydroponic-garden-under-250</a></p><p>Most of the work in this log pertains to water circulation and management within the NFT grow system. As mentioned before and pictured the NFT grow system is constructed from PVC fneceposts and PVC pipe. The fence posts hold the netted pots where the plants grow, the PVC pipe is used for piping the water in and out. For this system I build an input manifold from 3/4 inch PVC pipe and PVC ball valves. The purpose of the ball valves is to so the water level inside the fenceposts can be adjusted, when the plants are first starting out the water level has to be high, when their roots grow big enough the water level can be lowered. Eventually I intend to motorize these valves and add sensors to enable closed loop water level tuning. The next piece I worked on was the drainage manifold, it consists of 1 1/4 pipe and a few 1 1/4 inch fittings. The drain manifold is made from larger sized PVC so that the water drains fast enough relative to the circulation pump. In the picture below I show how the drain manifold will go together:</p><p>Pipes, fittings, valves, etc</p><p><img src="https://cdn.hackaday.io/images/7300861439307824865.JPG"></p><p>As for attatching the manifolds to the fenceposts I originally was planing on drilling holes in the endcaps and using PVC glue and epoxy to hack it all together. I decieded that would be a rather terrible way to put it together so I did some research on what other folks are doing with similar builds and someone recommended uniseal gaskets.  They work really well and they are very simple to install, basically you buy a seal based on the size of pipe and they have a hole-saw chart explaining what size hole is required for the seal, just drill the hole pop in the seal and push in the pipe, water proof and you can take it apart for cleaning. Here is where I got them BTW <a href="http://www.aussieglobe.com/uniseal1.htm">http://www.aussieglobe.com/uniseal1.htm</a></p><p><br>The input manifold pictured not yet finished, next pipe needs to be cut to join the two sides with a t fitting in the middle that connects to the circulation pump in the reservoir. Also in the picture the two halves are different sized, I was still deciding on the exact spacing I wanted. I should also note that I primed and painted the wood frame to that nice planty looking green color, I think it turned out great and gives the rig a nice look, the plan is to build another rig but paint it a different color. Its really just for fun.</p><p><img src="https://cdn.hackaday.io/images/13931439310997252.JPG"></p><p>In addtion to the manifolds I finally found a reservoir for the system. I was planning on a 55 gallon water barrel originally but that would be too much water and require a bigger more expensive pump, I also decided to build the green two by four stand shorter in case plants get way too tall. The next idea for a reservoir was a storage container, at first I was going to go with a 10 gallon container but ultimately decided to get a 16 Gallon container because the dimensions allowed for a better fit underneath the grow system itself. Inside the reservoir is s submersible pump used for circulating the water through the NFT system, connected directly to the input manifold. Also in the reservoir are aquarium airstones connected to an aquarium air pump , this serves to aerate the water/nutrient-solution and agitate it to prevent stagnation/algea growth.</p><p>Submersible Pump, airstones, tubing, fittings, and leftover air valves. </p><p><img src="https://cdn.hackaday.io/images/2629171439307954754.JPG"></p><p>16 Gallon storage container, AKA the reservoir!</p><p><img src="https://cdn.hackaday.io/images/4270751439308089635.JPG"></p><p>Rervoir internal setup, 185GPH submersible pump and airstone setup.</p><p><img src="https://cdn.hackaday.io/images/2744881439312573931.JPG"></p><p>How all this works:</p><p><img src="https://cdn.hackaday.io/images/7521211439322489959.png"></p>The diagram above should explain the general idea behind everything discussed in this log update. The pump sits in the reservoir and pumps water into the fenceposts via the input manifold, the water drains after flowing from the fenceposts into the drain manifold and back into the reservoir. Stay tuned for more!</div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/2964/log/22625-nft-progress-manifold-installation">NFT Progress: Manifold installation</a></h2>
                            <small class="authorship">6 days ago  &bull;
                                <a class="gray-link" href="/project/2964/log/22625#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22625"><p>So this last week a lot of progress was made towards completing the NFT grow system that HydroPWNics will be implemented on. Most specifically this past week was dedicated to finishing the water manifolds, drilling holes in the posts for manifolds, and installing the posts and manifolds assembled into the frame.</p><p>The posts, parts, and partially assembled manifolds were brought over to Technocopia hackerpsace for drilling. To connect the manifolds to the fence posts holes had to be drilled for the uniseal gaskets talked about in the last update. The gasket makea  tight seal between the hole, fencepost, and PVC pipe that is water tight. This method also allows for adjustments to be made and some flexibility when assembling.  Also at the space the holes for pipes and manifolds were drilled into the reservoir. </p><p><img src="https://cdn.hackaday.io/images/7837661439401896676.JPG"></p><p>Drain manifold uniseal installed</p><p><img src="https://cdn.hackaday.io/images/1327251439403411556.JPG"></p><p>Outer view of drain manifold uniseal, also Will giving into his screen addiction</p><p><img src="https://cdn.hackaday.io/images/2144941439403713602.JPG"></p><p>Will Getting ready to drill the reservoir holes</p><p><img src="https://cdn.hackaday.io/images/4257581439401988413.JPG"></p><p>Next big chunk of work was done a few days after the day at the hackerspace, this work was done on the frame and general assembly of the whole unit. The frame was drilled to fit the drain manifold tightly between the top of the frame and top of the reservoir (about 8 inches of clearance). After the holes were drilled it was only a bit of eyeballing and measuring to figure out the dimensions of the pipe sections, we cut them fast on a chop saw and assembled/installed it into the frame. The pictures tell a much better story:</p><p>Hole drilled in frame for drain manifold, 2&quot; hole for 1 1/4 inch pipe, left it with enough slack to be moved around some.</p><p><img src="https://cdn.hackaday.io/images/4150631439401379664.JPG"></p><p>Drilling the second hole in the frame for the drain manifold.</p><p><img src="https://cdn.hackaday.io/images/965841439404639617.JPG"></p><p>Testing out cut pipe</p><p><img src="https://cdn.hackaday.io/images/3659221439405686330.JPG"></p><p>Assembling the manifold within the frame</p><p><img src="https://cdn.hackaday.io/images/3978141439405711693.JPG"></p><p>Working out on the deck</p><p><img src="https://cdn.hackaday.io/images/8066441439405775136.JPG"></p><p>More assembly of the drain manifold</p><p><img src="https://cdn.hackaday.io/images/3348611439405978667.JPG"></p><p>One side assembled and installed</p><p><img src="https://cdn.hackaday.io/images/8840561439406020842.JPG"></p><p>Close up of drain manifold in frame, connected to two fence post rows.</p><p><img src="https://cdn.hackaday.io/images/7134811439406047991.JPG"></p><p>Another view of the drain manifold within the frame and the input manifold pipe between the posts.</p><p><img src="https://cdn.hackaday.io/images/8569451439406092760.JPG"></p><p>Underneath view of drain manifold installation/assembly</p><p><img src="https://cdn.hackaday.io/images/6319261439406140659.JPG"></p><p>Better view of drain manifold from underneath feeding into the storage bin reservoir</p><p><img src="https://cdn.hackaday.io/images/9413661439406173945.JPG"></p><p>A view of the outer ends of the manifold (right angle instead of T)</p><p><img src="https://cdn.hackaday.io/images/3004241439406220703.JPG"></p><p>Lining up the posts after finishing the manifold installation/assembly.</p><p><img src="https://cdn.hackaday.io/images/3911551439406308713.JPG"></p><p>All cleaned up and put out of the way until the next build day</p><p><img src="https://cdn.hackaday.io/images/8821281439406624075.JPG"></p><p>Now its just a matter of time, waiting for the plants to mature in the cloner and a few more parts for a water drainout option and this system will be up and running. The next step will be finishing the HydroPWNics hardware and electronics and deploying it on this system. Stay tuned for more!</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/2964/log/23358-quarterfinals-and-stage-2-submission">Quarterfinals and Stage 2 Submission!</a></h2>
                            <small class="authorship">2 days ago  &bull;
                                <a class="gray-link" href="/project/2964/log/23358#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23358"><p>I am pleased to announced that I have everything for the next stage of the prize subitted!!</p><p>You can view my video on youtube here:</p><p><iframe width="500" height="281" src="//www.youtube.com/embed/2PfVzaNYGDQ" frameborder="0" allowfullscreen=""></iframe>You can View my System Design Document on Google Docs<br></p><p><a href="https://docs.google.com/document/d/1IXcoCZAEUiCCFRzxCEFl9DJrIT8ejn9sYGAsC8lhNkU/edit?usp=sharing">https://docs.google.com/document/d/1IXcoCZAEUiCCFRzxCEFl9DJrIT8ejn9sYGAsC8lhNkU/edit?usp=sharing</a><br></p><p>Open Source Licenses related to the project</p><p><a href="https://docs.google.com/document/d/1EE3hQ9SbHJR79v5ZPckmglshI-BAw0UKrCl2D9yt2_w/edit"></a><a href="https://docs.google.com/document/d/1EE3hQ9SbHJR79v5ZPckmglshI-BAw0UKrCl2D9yt2_w/edit?usp=sharing">https://docs.google.com/document/d/1EE3hQ9SbHJR79v5ZPckmglshI-BAw0UKrCl2D9yt2_w/edit?usp=sharing</a><span class="redactor-invisible-space"><br></span></p><p>I have to say the support for this project by the community has been a lot more than expected, and I thank everyone for their support! Now I am all in so expect much more to come, stay tuned!!!!!</p></div>
                            </div>
                        </li>
                    
                </ul>

                
                <div class="pagination">
                    
                    <a href="?page=2" class="grey-gold-button prev-button show">Previous</a>
                    
                    
                </div>
                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'joRaRR1w-qC-k7o9PLf8VA-0VlLKR0rdJb5Y';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>