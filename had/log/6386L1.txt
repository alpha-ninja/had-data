<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; uSenseCam &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F6386%2Flogs%3Fpage%3D1">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/6386-usensecam">uSenseCam</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">Open source multispectral array camera for vegetation analysis for UAV.</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/76232-southmade" title="Visit Profile">SouthMade</a><span>&bull;</span>
                
                2 months ago<span>&bull;</span><a href="/project/6386#discussion-list" title="See Comments">0 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/6386-usensecam">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/6386/logs/sort/newest">Newest</option>
                    <option value="/project/6386/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/6386/log/19797-components-ii">Components II</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/6386/log/19797#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19797"><p>Because of the large learning curve of the project. We have two approaches to start learning the technical issues of the system.</p><p>FIRST APPROACH</p><ul><li>Raspberry Pi (In future would be replaced with Oduino-W)</li><li>USB Camera with Aptina AR0130</li><li>I2C micro SD Reader</li></ul><p>SECOND APPROACH</p><ul><li>SMT32 F4 Dev Board</li><li>MT9D1111 Camera Module</li><li>I2C micro SD Reader</li></ul><p>In the following posts, you will find project logs of the two approaches.</p><p>The final system is expected to be based on our own custom board.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6386/log/19799-designing-the-enclosure">Designing the enclosure</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/6386/log/19799#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19799"><p>One of the most important part of the project is the enclosure desgin. The enclosure should allowed to place and replace the custom filter, and assemble different sensor arrays (2x1, 3x1 , etc.)<br></p><p><em>Video</em></p><p>Our solution is a modular design which has a detachable  front lid to place the filter between the CMOS sensor and the lens.</p><p>For assembling the modules in an array, each camera has four strong magnets in each side, and a dip connector to synchronize the trigger and data.</p><p><img src="https://cdn.hackaday.io/images/1321251435189235581.jpg"></p><p>In the back lid  it has a power button, micro SD card slot, micro USB connector and a dip connector for accessing the controller .</p><p>The 3d design was done in Solidworks and will be 3d printed for testing.<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6386/log/20618-checking-mt9d111-communication">Checking MT9D111 communication</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/6386/log/20618#discussion-list">
                                    3 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20618"><p><img src="https://cdn.hackaday.io/images/7625561436587204858.JPG"></p><p><img src="https://cdn.hackaday.io/images/392461436587238006.JPG"></p><p>For checking the MT9D111 two wire interface I started wiring the camera module to an Arduino Nano.   Then, I programmed the Arduino based on the 16 Bit Register Read and Write Examples in page 9 to 11 of the Developer Guide.  </p><p>Wiring:<br></p><p><strong>MT9D111 ------           Arduino</strong></p><p><span class="redactor-invisible-space">GND ------------ GND</span></p><p><span class="redactor-invisible-space">XCLK ----------- D9</span></p><p><span class="redactor-invisible-space">VCC ------------ 5V</span></p><p><span class="redactor-invisible-space">GND ------------ GND</span></p><p><span class="redactor-invisible-space">SCL ------------- A5</span></p><p><span class="redactor-invisible-space">SDA ------------- A4</span></p><p>After a few hours trying to generate the 8Mhz clock on Arduino, I realize that timer1 could perform that task without compromising other functions such as delay() and millis(). </p><p>Finally, the results were successful, Arduino could write and read registers in MT9D111 Camera Module with these two custom functions:</p><p>write_reg(register_address, page, data_msb, data_lsb)<br></p><p>read_reg(register_address);<span class="redactor-invisible-space"><br></span></p><pre class="hljs cpp">/*
Author: Jose Barreiros
Date: 01/June/2015


This code is Arduino Nano compatible, the READ CODE is based on the work of Anthony Balducci:
https://github.com/anthonybalducci/MT9D111-Teensy-3.1/blob/master/MT9D111_16-bit_Register_Read_Example.ino


Useful note from Anthony Balducci code:
"The MTD9111 Developer Guide states that 0xBA and 0xBB are the default read/write addresses respectively.
   However, it is important to note, while converting 0xBA and 0xBA to binary at first 'appears' to give us
   two distinct addresses:
   
   (Write) 0xBA --&gt; 10111010
   (Read)  0xBB --&gt; 10111011
   
   The two values only different in their LSB (least significant bit), or in this case, the first value on the
   'right'. The '0' / '1' in this position is what specifies the write (0) or read (1) condition accordingly.
   In the Arduino language the LSB read/write portion is already built into the Wire.write / Wire.read commands,
   thus the original register addressess specified must be truncated by the read/write bit to seven bits, leaving 
   us with 1011101 --&gt; Ox5D in both cases."
*/


#include &lt;Wire.h&gt;
#include &lt;avr/io.h&gt;
#include &lt;util/delay.h&gt;
#include &lt;TimerOne.h&gt;
#include &lt;avr/interrupt.h&gt;


#define TMR1 0  //Timer1 used for 8Mhz PWM Output
void setup()
{
 delay(500);  //Initial delay
 Wire.begin(); // join i2c bus as master
 Serial.begin(9600);
 Serial.println("MT9D111 Camera Module + Arduino Nano");
 Serial.println("Read and Write 16-bit register value example");
 Serial.println("*  Read expected value = 0x1519 from Register 0x00");
 Serial.println("*  Write value = 0xA5F0 to Register 0x20:1");
 Serial.println();
//Generating 8MHZ PWN on pin9


 pinMode(9, OUTPUT); // output pin for OCR2B


 TCCR1B |= (1 &lt;&lt; CS10);  //selecting prescaler 0b001 (Tclk/1)
 TCCR1B &amp;= ~((1&lt;&lt;CS12) | (1&lt;&lt;CS11));    // turn off CS12 and CS11 bits
 TCCR1A |= ((1&lt;&lt;WGM11) | (1&lt;&lt;WGM10));  //Configure timer 1 for TOP mode (with TOP = OCR1A)
 TCCR1B |= ((1&lt;&lt;WGM13) | (1&lt;&lt;WGM12));
 TCCR1A |= (1 &lt;&lt; COM1A0); // Enable timer 1 Compare Output channel A in toggle mode 
 TCCR1A &amp;= ~(1 &lt;&lt; COM1A1);
 TCNT1 = 0;
 OCR1A = TMR1;
 
init1(); //perform code just 1 time
}


void loop()
{


}


void init1(){
int16_t a;
  delay(500);  //wait until start
    Serial.print("Read result from register 0x00");
  a=read_reg(0);
   Serial.println();
    Serial.print("0x");
  Serial.println(a, HEX);  //print result
    Serial.println();
  
  Serial.print("Read original data from register 0x20:1");
  a=read_reg(32);
  Serial.println();
  Serial.print("0x");
  Serial.println(a, HEX);  //print result
    Serial.println();
 
 
 //Enable this part for writing register
 
 // Serial.print("Writing 0xA5F0 in register 0x20:1");
//    Serial.println();
 // write_reg(32,1,165,240);


  
  // Serial.print("Read new value from register 0x20:1");
  //a=read_reg(32);
    // Serial.println();
  //Serial.print("0x");
  //Serial.println(a, HEX);  //print result 
    //Serial.println();
}


void write_reg(int direccion, int page, int data_msb, int data_lsb){
  delay(5);  //5ms
  Wire.beginTransmission(93); // transmit to device 93, Camera Module
  Wire.write(240);   //page register address  
  Wire.write(0);   
  Wire.write(page);   //select page 0/1/2
  Wire.endTransmission(1);    // stop transmitting
  
  Wire.beginTransmission(93); // transmit to device 93, Camera Module
  Wire.write(direccion);   //register address 8bit, decimal    
  Wire.write(data_msb);  //msb
  Wire.write(data_lsb);  //lsb
  Wire.endTransmission(1);    // stop transmitting
}


int16_t read_reg(int direccion){
  delay(5);  //5ms
  Wire.beginTransmission(93); // transmit to device 93, Camera Module
  Wire.write(direccion);   //register address 8bit, decimal    
  Wire.endTransmission(1);    // stop transmitting


 Wire.requestFrom(93,2,1);   //request value form device 93, 2 bytes with stop bit
 int16_t result = ((Wire.read() &lt;&lt; 8) | Wire.read());  //read 16 bits
return result;
}<br></pre><br></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6386/log/20630-first-approach">First Approach</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/6386/log/20630#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20630"><p><img src="https://cdn.hackaday.io/images/9943321436587299195.jpg"></p><p>The first approach goal is interfacing an USB camera with Raspberry Pi, triggering the camera with a button, saving a photo and finally do these tasks with an auto-run program on startup.</p><p>In the following project logs I'll post details on the development process.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6386/log/20807-aptina-ar0130-has-arrived">Aptina AR0130 has arrived</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/6386/log/20807#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20807"><p><img src="https://cdn.hackaday.io/images/3607071436590175185.jpg"></p><p><img src="https://cdn.hackaday.io/images/7788481436590292770.png"></p><p>We plan to use Aptina AR0130 USB Camera for testing the UVC drivers on Raspberry also because it has a great spectral response, we're going to do some NIR photo tests.</p></div>
                            </div>
                        </li>
                    
                </ul>

                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = '3SiOelOp-Os_NhVCTlUTC5RMnIzsMrUOzl8w';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>