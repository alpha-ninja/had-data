<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; The Road to Zero Tolerance &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F6948%2Flogs%3Fpage%3D1">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/6948-the-road-to-zero-tolerance">The Road to Zero Tolerance</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">The purpose of this project was to create a device that would be an improvement on the ignition interlock device.</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/76945-joy-shah" title="Visit Profile">Joy Shah</a><span>&bull;</span>
                
                23 days ago<span>&bull;</span><a href="/project/6948#discussion-list" title="See Comments">0 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/6948-the-road-to-zero-tolerance">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/6948/logs/sort/newest">Newest</option>
                    <option value="/project/6948/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/6948/log/21689-description-of-code-and-circuit">Description of Code and Circuit</a></h2>
                            <small class="authorship">22 days ago  &bull;
                                <a class="gray-link" href="/project/6948/log/21689#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21689"><p><strong>The Circuit:</strong></p>    <p>To power our microcontroller, we required 5V DC. Since we were plugged into a wall outlet we were receiving 120V AC. To convert the 120V AC to 5V DC we used a 5V AC wall adaptor or a &quot;wall wart&quot;. The way the wall wart works is that inside of it, are two wire windings that wrap around a single iron core. When the first winding receives the 120V AC supplied from the wall outlet it creates an electric field in the iron core. The second wire winding converts the newly created electric field into a smaller alternating current. The voltage of the new current depends on the ratio of the number of coils in the first winding in comparison to the second winding; therefore if the second winding has half as many coils as the first winding, the resulting voltage will be half that of the original voltage. Now the question remains how to convert the AC current into a DC current? The answer to this is that behind the two windings and the iron core are two rubber wrapped diodes that convert AC to DC by allowing the current to flow in one direction. Even though the wall wart was supposed to supply 5V DC, it wasn&#x2019;t. This is because a wall wart uses cheap tricks to get the voltage to drop. We actually got an output of around 9V DC that was very noisy, meaning there was a ripple and the output would fluctuate. <br> <br> </p>  <p>To get the voltage down to 5V DC and eliminate the ripple, we had to use a regulator. The regulator we used was the LM7805 with a TO-220 package. Our regulator is classified as a linear regulator. The way a linear regulator works is very simple, it has three pins: an input pin, a ground, and an output pin.  The input voltage could receive any voltage between 7V and 30V. In our case the regulator had an input of about 9V. When it received the voltage it converted it to a steady output of 5V. The regulator takes the input voltage of 9V and then turns it into an output of 5V by turning the difference between the input and output in to waste heat energy.</p>    <p>Next we hooked up a switch to the output of our regulator to allow us to easily turn power on and off. After the switch, we had a LED, along with a 330 ohm resistor to protect the LED from too much current, which was plugged into our 5V power supply and then to ground. This is to show us that we are getting power to our circuit rather than using a multimeter every time we needed to check if there was power. It was also a safety requirement for the science fair. </p>    <p>Once we had verified that we had a working 5V power supply, we hooked up our microcontroller. The microcontroller has 4 ports: A, B, C, and D. Port A is powered separately from Port B, C, and D. So the first thing we did was power all four ports up by connecting the VCC (power) pins to the 5V power supply and connecting the ground pins to ground. Once the microcontroller was powered up and working, we had to program it. To program it we used the AVR Pocket Programmer which had six pins: MOSI (Master Out Slave In), MISO (Master In Slave Out), SCK (Programming Clock), RESET, VCC (Power), and GND (Ground). To connect the pocket programmer to the microcontroller we used jumper wires. Once we could program the microcontroller, we hooked up three LEDs with a 330 ohm resistor. The LEDs went to port B in pins PB0, PB1, and PB2. This is because port B has simple I/O (input/output) pins. Now depending on the output of the alcohol sensor, either the green, yellow, or red LED would turn on. </p>    <p>Next, we connected the MQ-3 alcohol sensor to our microcontroller. The MQ-3 alcohol sensor has six pins; 2 go to the 5 volt power supply and two go to ground. One of the ground pins also goes to the microcontroller, and we chose to put it into port A. Port A was actually the only choice as it was the only port that can do analog to digital conversion (ADC). This was a must as the sensor has an output of analog information and the microcontroller understands digital.</p>    <p>Lastly we connected a motor to the microcontroller to represent the engine of a car that would shut down when alcohol is detected. We connected the motor to port C for easy access as again we needed simple I/O pins.</p>    <p><strong>Description of Code:</strong></p>    <p>To program the microcontroller, we installed winAVR from the internet. In that file we got a lot of different programs. Out of them we used Programmers Notepad and MFile. The notepad program is the IDE (integrated development environment) where we typed the code. The code created in the notepad program will be a .c file. </p>    <p>The include statements at the top of the code add the header files that we will be using during the code. The header file has a lot of code that is important for the microcontroller to work. Using a header file makes your actual code a lot smaller. The &#x201C;define&#x201D; command is used to set the value of the yellow limit and the green limit. The yellow and green limits were set using known alcohol values. It is also used tell the microcontroller that the motor is plugged into PORTC. The next line of code creates the routine that will initialize the analog digital converter (PORT A). The line after that creates a routine that will read the voltage coming in from PINA0 and convert it to digital information. </p>    <p>The main routine has the main part of the code. In that routine, we used the routines created earlier and will tell the microcontroller what to do when it reads certain values. We first need to store the ADC (analog digital conversion) to a variable. This is the &#x201C;uint16_t adc_result0;&#x201D; That portion is declaring adc_result0 as a 16bit integer. The next two portions of code are the data direction registers for PORT C and D. They assign PINC0 and PINB0, 1, 2 as outputs. Port C is for the motor and port B is for the indicator LEDs. </p>  <p>Then we tell the microcontroller to follow the adc_init routine which will initialize the ADC. Here we introduce a delay so that the ADC can finish initializing and so that the sensor has time to warm up. The while loop tells the microcontroller to repeat that portion of the code until either the power is shut off or there is an interrupt introduced. In our code there will be no interrupts so to restart the code, the microcontroller must be turned off. </p>    <p>          The first thing we will do in the while loop is reset the LEDs. Then we will read the analog value of the sensor at pinA0. The routine also converts it to digital in that step and assigns that value to another variable. Next we have if statements. We first check if the reading is below or equal to the green limit. If so, voltage is applied to pinB2, turning on the green LED. Voltage is also applied to pinC0, turning the motor on. If it isn&#x2019;t less than or equal to the green value, the next if statement checks whether the value was below or equal to the yellow limit. If so, voltage is applied to pinB2, turning on the yellow LED. Voltage is also applied to pinC0, turning on the motor. If not, then the red LED turns on and there is no voltage to the motor, turning it off. There is a delay at the end of the sequence so that the results can be displayed for two seconds. </p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6948/log/21794-avr-atmega-16l-diagram">AVR ATmega 16L Diagram</a></h2>
                            <small class="authorship">20 days ago  &bull;
                                <a class="gray-link" href="/project/6948/log/21794#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21794"><p><img src="https://cdn.hackaday.io/images/5552791438201569458.png"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6948/log/22969-testing-the-breathalyzer">Testing the Breathalyzer</a></h2>
                            <small class="authorship">3 days ago  &bull;
                                <a class="gray-link" href="/project/6948/log/22969#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22969"><p>This is one of the many tests we did. Testing our sensor with alcohol. In this case, beer.</p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/fR7jjJq4CJE" frameborder="0" allowfullscreen=""></iframe><p>This test is done using wine</p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/sx2ivRwMB44" frameborder="0" allowfullscreen=""></iframe><p>We had gotten several questions about if our breathalyzer would prevent the car from starting if the driver was wearing perfume or had just cleaned their hands with hand sanitizer. So we decided to test our sensor using different household items that contain alcohol. In this video, we tested hand sanitizer.</p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/fxmSN9dvHIY" frameborder="0" allowfullscreen=""></iframe><p>This test is with body spray.</p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/2384-VanoUw" frameborder="0" allowfullscreen=""></iframe><p>The final test is with mouthwash. </p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/mR0FABVm5_g" frameborder="0" allowfullscreen=""></iframe>

</div>
                            </div>
                        </li>
                    
                </ul>

                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'Q1Y0nDtE-4OyyROUfDUNmyLIl65hZN8o2ODM';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>