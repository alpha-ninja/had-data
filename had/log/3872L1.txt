<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; PIC-On-The-Go &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F3872%2Flogs%3Fpage%3D1">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/3872-pic-on-the-go">PIC-On-The-Go</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">PIC Microcontroller dev board, in an Arduino form factor</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/3720-jarrett" title="Visit Profile">Jarrett</a><span>&bull;</span>
                
                7 months ago<span>&bull;</span><a href="/project/3872#discussion-list" title="See Comments">11 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/3872-pic-on-the-go">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/3872/logs/sort/newest">Newest</option>
                    <option value="/project/3872/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/3872/log/12971-angry-rant-part-1">Angry Rant part 1</a></h2>
                            <small class="authorship">7 months ago  &bull;
                                <a class="gray-link" href="/project/3872/log/12971#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-12971"><p>With the huge popularity of Arduino in the past few years, everything that can be advertised "Arduino-compatible" is being commoditized to such a huge degree that it can be hard to find price-competitive components that do not have that distinctive Arduino pin layout.</p><p>An example is <a href="http://misc.ws/2013/11/08/touch-screen-shield-for-arduino-uno/" target="_blank">this</a> TFT touchscreen LCD. It's like, 6 bucks, which is insane. This is definitely going to show up in some future projects of mine.</p><p>Having everything work as an Arduino shield is all well and great, but I'm generally against using them. My problem with that whole ecosystem has always been that:</p><p>A) It shields(get it?) you from what is really happening on the microcontroller</p><p>B) It follows that if the user is unfamiliar with the inner workings of their system, then they will be motivated to leave the entire Arduino in place in their project</p><p>Historically, that second point has meant that people will build a project and run it permanently using what amounts to a single $30 microcontroller.</p><p>With the above commoditization argument, this point is fast losing ground when you can now buy a Chinese Arduino clone for $3.</p><p>Those arguments don't even make sense anymore! I guess what it boils down to now is that Arduino offends my inner perfectionist.</p><p>Microchip PICs are fantastic because they are easy to use, powerful, and extremely inexpensive.</p><p>I can find a 60 cent chip that has exactly the peripherals I need, with almost no bloat.</p><p>The problem is that I have to build it into a circuit every time, thus negating the cost benefits with a time penalty.</p><p>Anyway. I have a whole bunch of PIC18F4520 DIP packages kicking around, and some other similar ones (4430 I think?). I suspect that I will be forced to start using Arduino eventually, but at least with this method I can now do some of my simpler PIC development on-the-go with USB power.</p><p>For some reason the TSA doesn't like it when I try and take a breadboard, wire, and wire strippers onto a plane.</p><p>So the result:</p><p>A PIC dev board in an Arduino form factor.</p><p><a href="http://jrainimo.com/build/wp-content/uploads/2015/01/PIC-On-The-Go_fill.png"><img src="http://jrainimo.com/build/wp-content/uploads/2015/01/PIC-On-The-Go_schematic-300x199.png" alt="PIC-On-The-Go Schematic"></a><a href="http://jrainimo.com/build/wp-content/uploads/2015/01/PIC-On-The-Go_nofill.png"><img src="http://jrainimo.com/build/wp-content/uploads/2015/01/PIC-On-The-Go_nofill-300x238.png" alt="PIC-On-The-Go Bare Board"></a><a href="http://jrainimo.com/build/wp-content/uploads/2015/01/PIC-On-The-Go_fill.png"><img src="http://jrainimo.com/build/wp-content/uploads/2015/01/PIC-On-The-Go_fill-300x235.png" alt="PIC-On-The-Go with fill"></a></p><p>Powered by USB (no communication, though), switch-selectable 5V/3.3V power rail (don't hit this while plugged in!), reset button, 3 LEDs, and I've tried to match most of the Arduino pins with the associated PIC functions (eg. SPI and analog pins are in the same location).</p><p>You still need an external programmer, but that's okay. Programmers are pretty cheap and come in a sleek form factor. The programming header pins match the Pickit 3's pinout, so it's just plug-and-play with MPLAB.</p><p>When I get the board and give it a test ride, I'll release the source files. Altium, though, so many people won't be able to edit them.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/3872/log/13068-resettable-fuse">Resettable Fuse</a></h2>
                            <small class="authorship">7 months ago  &bull;
                                <a class="gray-link" href="/project/3872/log/13068#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-13068"><p>As per the suggestion below, I added a PTC.</p><p><img src="https://cdn.hackaday.io/images/resize/600x600/896921421769442954.PNG"></p><img src="https://cdn.hackaday.io/images/resize/600x600/2568581421769466010.PNG"><p>I'm unclear how to get HaD to not crop these images. I'll post all of these files, including the images up on GitHub today or something, that should get around it.</p><p>I like adding features like these, because it turns it into a better piece of engineering This whole project is intended to be fast, easy, and cheap, so the best part about features like that - and all of the features on this board, really - is that they're totally optional.</p><p>For example, I'm probably not even going to populate most of the components on the very first board I build. I'll solder in the 40-pin DIP socket, the decoupling caps, USB connector, and the pulldown resistor. Literally nothing else is mandatory, assuming I'm okay with sticking to 5V logic. The fuse, inductive choke, and switch will need solder bridges.</p><p>That's also why I haven't included an external oscillator. There is very little reason to use one, now, unless you need very high speeds or good stability. I rarely need either.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/3872/log/14196-obsolete-before-i-even-started">Obsolete before I even started</a></h2>
                            <small class="authorship">6 months ago  &bull;
                                <a class="gray-link" href="/project/3872/log/14196#discussion-list">
                                    1 comment
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-14196"><p>The switch-mode regulator I used (Skyworks AAT2148, because it was cheap) has been end-of-lifed. That's kind of annoying.</p><p>So I'm trying to fill up my panel with some other boards because I have some extra space. What else should I throw up on there?</p><p>Right now I've got this PIC board, the <a href="https://github.com/fenlogic/vga666" target="_blank">Gert VGA 666</a>, and I might toss in some breakout boards.</p><p>I'm also vaguely working on a board for the Raspberry Pi Compute module that would be nice to bundle in there, but I've done the RasPi harness and USB, and now I've lost focus a little bit. What should I turn the board into?</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/3872/log/14314-just-about-ready-to-send-off">Just about ready to send off</a></h2>
                            <small class="authorship">6 months ago  &bull;
                                <a class="gray-link" href="/project/3872/log/14314#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-14314"><p>For the last update, I put out the call for suggestions on what to fill my panelised board with, given that I have some extra space.</p><p><a data-mention-user-id="2648" href="/hacker/2648">@jaromir.sukuba</a> posted a link to his <a data-mention-project-id="530" href="/project/530">#Breakout board set</a>, and <a data-mention-user-id="13" href="/hacker/13">@Adam Fabio</a> and <a data-mention-user-id="130" href="/hacker/130">@mpinner</a> both suggested the <a href="https://oshpark.com/shared_projects" target="_blank">OSHPark shared project</a> repository.</p><p>All excellent suggestions, and along the same lines, I checked out the <a href="http://dirtypcbs.com/view.php" target="_blank">Dirty PCBs equivalent</a>. I was surprised to see that one of my PCBs from last year still shows up there fairly prominently.</p><p>I didn't really find anything that piqued my interest in any of them. There were a couple kind cool ones, but the BOM costs were quite high for a project that I wasn't super into.</p><p>So I dumped some breakout boards in there. As you can see, there are some errors in those because I didn't create them myself right in Altium. I don't even really care. I'm planning on using DirtyPCBs to fulfil my order, and their whole shtick is that if there's a problem with your board, they don't go back to you requesting changes, they just attempt to build it, and if it fails, sucks. That means that this is more of an experiment then a legitimate attempt to get some spare breakout boards.</p><p><img src="https://cdn.hackaday.io/images/2901271424448053736.PNG"></p><p>Here's the panelised board. You can see the errors in the top right.</p><p>It may be interesting to note that I laid out and built the Gert board from scratch, despite the files being freely available online in Eagle format. It was easier and faster (~2 hours) just to do it myself than try and deal with conversion and all of the problems that would bring. It's a simple board.</p><p>Stuff came up today that I have to deal with, so I'll probably send this off early next week, after I have time to dick around with CAM settings.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/3872/log/14454-sent">Sent</a></h2>
                            <small class="authorship">6 months ago  &bull;
                                <a class="gray-link" href="/project/3872/log/14454#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-14454"><p><a href="http://dirtypcbs.com/view.php?share=4982&amp;accesskey=92c7bbbb7ad38ec1d885d0c614f78988" target="_blank">http://dirtypcbs.com/view.php?share=4982&amp;accesskey=92c7bbbb7ad38ec1d885d0c614f78988</a></p><p>It's pretty sketchy, tbh.</p><p>I give it a non-zero chance of being rejected outright.</p><p>Unfortunately the Eagle CAM rules supplied by most cheap board houses don't work in Altium, so I did it by hand. I used different Gerber layers for the internal slots and the outside perimeters, and I have no idea if that will work. Worth a shot! I guess!<br></p><p>I delayed a little long with this, so it's Chinese New Year, and they won't even be back at work until the 27th. And won't start catching up with the backlog until even later. I guess I'll see it in four to six weeks!</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/3872/log/15920-aww-yeah">Aww yeah</a></h2>
                            <small class="authorship">5 months ago  &bull;
                                <a class="gray-link" href="/project/3872/log/15920#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-15920"><img src="https://cdn.hackaday.io/images/2101911427867165381.jpg"></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/3872/log/16639-dammit-molex">Dammit, Molex</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/3872/log/16639#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-16639"><p>I built a really really cut down version of this, using the limited amount of parts that were kicking around my hackspace.</p><p>There were some compromises made.</p><p><img src="https://cdn.hackaday.io/images/9747951429287302299.jpg"><br></p><p>I populated all of the headers, the USB connector, and the DIP socket. The decoupling cap C2 and the pull-down R1 is on there, too.</p><p>Notice that the USB footprint is kinda terrible. The signal/power traces were too short, so I had to shove the connector in towards the board a lot more, which meant the mounting pads didn't line up anymore. Bah.</p><p>The protection circuitry, F1 and L1, are both substituted with jumper wire because I'm sketchy like that. Protection diode D4 is left off entirely. The 3.3V power supply is also absent.</p><p>The SMD LEDs were replaced with small through-hole versions.</p><p>I didn't have a good switch, so it had to be replaced with this one:</p><p><img src="https://cdn.hackaday.io/images/8241631429287937232.jpg"></p><p>Due to its pinout and orientation, the bottom is the only place it could work in order to not have interferences.</p><p>A reminder: This is an in-between project. I totally don't care about it! I only need something that is marginally better than a breadboard, because having to wire that up every time sucks.</p><p>After all of that, I plugged it in, and... Nothing. My PIC programmer wouldn't read anything, and all of my test gear at home is in storage (because I prefer to come into the hackspace to use their's, now). As I was doing this, I was making dinner, so I went off to handle that for a bit.</p><p>Later, came back to my board. "Is something burning?"</p><p>My microcontroller was very toasty. After unplugging it (very very quickly), it got dumped off to the side for a few days until I had time to troubleshoot.</p><p>Totally coincidentally, this was about the time I finished another PCB for a different project. As I was looking around in Altium's 3D view, I noticed something a little bit off.</p><p><img src="https://cdn.hackaday.io/images/1476511429288980057.PNG"></p>Yup! The 3D model is flipped, clipping through the board. A short internet search later, and sure enough, the Molex-supplied library component has its pins in the wrong order. If you look back a few project logs ago, you can juuuust see that the current project has the same issue.<p>Molex, you are terrible.</p><p>Quick fix:</p><p><img src="https://cdn.hackaday.io/images/3971631429289213618.jpg"></p>That right there is a very dangerous thing. A polarity-changing USB extension cable. But it works for this! I have a blink sketch going.<p>Marking this project as complete for now, but eventually I will get around to testing the power supply, etc. Then do a new run of boards with revisions. I'd like to add mounting holes and improve silkscreen positions, too.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/3872/log/21399-because-i-cant-leave-well-enough-alone">Because I can&#39;t leave well enough alone</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/3872/log/21399#discussion-list">
                                    1 comment
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21399"><p>I&apos;ve been using my hacked-together boards for a couple months now. They work great, considering how much effort and money I&apos;ve put into them (ie. barely any).</p><p>In those last few months, though, I&apos;ve been tooling around a little with designs.</p><p>I have ten of these cheap-and-easy prototyping boards, now it&apos;s time to refine it into an actual decent product.</p><p>Nothing has been polished or even completed yet, I&apos;m just showing WIP stuff as it happens.</p><p>Here&apos;s what I did a few months ago:</p><p><img src="https://cdn.hackaday.io/images/7971141437675443780.PNG"></p><br><p>Main file has been cut down. The buck converter is a lot of work and BOM cost for a very small amount of pay-off. The part that I was using is also end-of-life now, so I&apos;m replacing it with a linear regulator for this revisions.</p><p>A lot more stuff is being put on this board, so the bonus header is gone. Some of the useless Arduino pins might be taken off, too. The PIC has been moved to another sheet.</p><p>That switch is getting changed to a SMD version. Again, moving away from quick-to-throw-together and into manufacturability</p><p>USB will also be added.</p><p>----</p><p>I&apos;d post the other two sheets I have, but they&apos;re mostly just a bunch of micros and not a lot of supporting circuitry just yet. I&apos;m adding a smaller PIC to the same footprint as the original. Then you can drop in either a big 40 pin wide footprint, or a more typical thin 28-pin package. Most 8-bit PICs have a similar footprint.</p><p>The big change is  that I&apos;m adding USB programming to the board. One of my side-projects lately has been a PicKit 2 clone (<a href="http://jrainimo.com/build/?p=677" target="_blank">here</a> (spoiler alert: it&apos;s awesome)), so including it is not a huge timesink or anything.</p><p>The BOM cost on that is ~$15 for programming bits alone, so I&apos;ll be investigating some alternatives. Part of that problem is that the PicKit 2 uses the $6 PIC18F2550, and I don&apos;t believe they have open-sourced the code. There are a lot of extra features in there that I don&apos;t use, so dropping in a cheaper PIC and lightening up the code-base would be great.</p><p><a href="https://github.com/fransschreuder/usbpicprog" target="_blank">This</a> project on GitHub is an open-source programmer, so I might try and adapt it, or take lessons from it and write my own. How hard can it be? ;)</p><p>Due to the Microchip Curiosity board, I have a new word in my vocabulary, PicKit-On-Board (PKOB), which might help me with my research. A quick look didn&apos;t turn up how they did it, but maybe there are some schematics hidden away somewhere, or maybe high res photos of the circuit might provide some clues :)</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/3872/log/21931-an-analysis-of-the-arduino-schematics">An analysis of the Arduino schematics</a></h2>
                            <small class="authorship">19 days ago  &bull;
                                <a class="gray-link" href="/project/3872/log/21931#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21931"><p>The first version of this project was intended to be cheap, fast, and use the bare minimum number of components. I have a bunch of those boards now, so I&apos;m good on that front.<br></p><p>A good way to up my game on the reliability stand-point is to take lessons from the Arduino itself. I checked out the schematic before, but was mainly looking for cool features or maximising compatibility. It&apos;s time to revisit that a bit.<br></p><p>Starting from here:</p><p><a href="https://www.arduino.cc/en/uploads/Main/Arduino_Uno_Rev3-schematic.pdf" rel="noreferrer" target="_blank">https://www.arduino.cc/en/uploads/Main/Arduino_Uno_Rev3-schematic.pdf</a></p><p><span class="redactor-invisible-space"><br></span></p><p><span class="redactor-invisible-space"><br></span></p><p><span class="redactor-invisible-space">This is a pretty bad schematic!</span></p><p>Here is a quick and not-complete analysis of it. It&apos;s not The Worst Schematic In The World or anything, but it could be way better.</p><p><img src="https://cdn.hackaday.io/images/3989151438363850748.png"></p><p>The first, most obvious thing is readability. For an open source project that is designed to ease people into hardware, just shitting the components all over the page like that is a big &quot;fuck you&quot;.</p><p><span class="message_star_holder"></span><span class="message_content">If you treat the top and bottom portions like separate entities, it&apos;s easier to read.</span></p><p><span class="message_star_holder"></span><i><br></i><span class="message_content">I have counted <strong><span class="copyonly">*</span>six<span class="copyonly">*</span></strong> power rails:</span><span class="emoji_rxn menu_rxn"><span class="emoji-outer emoji-sizer"><i></i><i></i></span></span></p><p><span class="message_star_holder"></span><i><br></i></p><ul><li><i>+5v</i></li><li><i>VIN</i></li><li><i>PWRIN</i></li><li><i>XUSB</i></li><li><i>USBVCC</i></li><li><i>+3v3</i></li></ul><p><span class="message_star_holder"></span><i><br></i><span class="message_content">Other than the first and last ones, if you can identify the function from net name alone, I will give you a cookie.</span><span class="emoji_rxn menu_rxn"><span class="emoji-outer emoji-sizer"><i></i><i></i></span></span></p><p><span class="message_star_holder"></span><i><br></i><span class="message_content">Then the top left quadrant of the schematic:</span><span class="emoji_rxn menu_rxn"><span class="emoji-outer emoji-sizer"><i></i><i></i></span></span></p><p><span class="message_star_holder"></span><span class="message_content">First of all, that bypass cap is just kinda sitting there with some unidentified floating pins. I suspect they&apos;re for the op amp, but I shouldn&apos;t have to guess at these things.</span><span class="emoji_rxn menu_rxn"><span class="emoji-outer emoji-sizer"><i></i><i></i></span></span></p><p><span class="message_star_holder"></span><i><br></i><span class="message_content">The op amp circuit could (and probably should) have been separated into two distinct portions, split at the +5v section</span><span class="emoji_rxn menu_rxn"><span class="emoji-outer emoji-sizer"><i></i><i></i></span></span></p><p><span class="message_star_holder"></span><span class="message_content">The op amp itself turns on the P-FET when VIN / 2 is greater than 3v3<i>. </i></span>VIN is only active when the DC jack (PWRIN) is on. So what that circuit does is backfeed the 5v rail into the USB power rail when the DC jack is being used.</p><p><span class="message_star_holder"></span><span class="message_content">That&apos;s fine, but the only point of that is to power on the USB portion of the programmer chip when the DC jack is plugged in and USB is not. Why?</span><span class="emoji_rxn menu_rxn"><span class="emoji-outer emoji-sizer"><i></i><i></i></span></span></p><p><span class="message_star_holder"></span><i><br></i><span class="message_content">That logic is completely opposite (and probably broken) on the first rev of the UNO, which is funny: <a href="https://www.arduino.cc/en/uploads/Main/arduino-uno-schematic.pdf" target="_blank">https://www.arduino.cc/en/uploads/Main/arduino-uno-schematic.pdf</a></span><span class="emoji_rxn menu_rxn"><span class="emoji-outer emoji-sizer"><i></i><i></i></span></span></p><p>Those are my big complaints, I guess.<br><span class="message_star_holder"></span></p><p><span class="message_star_holder"></span><span class="message_content">I also don&apos;t like how the fiducials are just big unlabelled dots hangin&apos; out, and the jumper pads (for RESET and GROUND) are a little weird<i>.</i></span></p><p><span class="message_content"><br></span></p><p><span class="message_content"><i></i></span><span class="message_content">Also not really sure why there&apos;s an overvoltage protection diodes on both of the chip resets, unless that&apos;s a recommended layout somewhere</span>.</p><p>The protection circuitry for the USB side is getting used in my design for sure, I am not an expert on that bit. Probably not going to include the DC jack or power components, does anybody use those?</p><p>Edit: When only USB is plugged in, the entire board is getting powered through the reverse polarity protection of the P-FET. WTF.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/3872/log/22230-more-doodles-solidifying">More Doodles, Solidifying</a></h2>
                            <small class="authorship">13 days ago  &bull;
                                <a class="gray-link" href="/project/3872/log/22230#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22230"><p>Plunking away at this, a few minutes here, a few minutes there.</p><p>The project is broken up into three schematics.</p><p><img src="https://cdn.hackaday.io/images/5845961438873909637.PNG"></p><p>Main schematic. Nothing new here, really. Still need to add some more USB protection.</p><p><img src="https://cdn.hackaday.io/images/9414421438873953322.PNG"></p><p>Main micros. I&apos;ve got three footprints here, but it&apos;s all a lie. The top one is a big 40-pin wide package DIP IC, the bottom two are skinny 28 pin packages. One is DIP, one is SMD. Overlapping all of those footprints, along with Microchip&apos;s strategy of locating key function pins(like power) in the same location along all of their lines means that these boards will be able to hold and program a huge amount of different PICs in the 8-bit family.</p><p><img src="https://cdn.hackaday.io/images/2975841438874130075.PNG"></p><p>Beginning of the PicKit-On-Board. Microchip seems to like using a specialised circuitry and low-voltage programming when they do this for their dev boards, but that&apos;s a crutch. Not all PICs support LVP, and they need to have it configured in software. This board will work on all PICs that the PicKit 2 works on (which is most of them), and if the users wants to pop off their programmed chip and use it standalone, this saves an extra IO pin for whatever they like.</p><p>The embedded boost controller is super cool, too. If the user has their own programmer (or two of these dev boards) and is super clever, they can program the programmer chip and play around with the power supply generator.</p><p>The last schematic needs a whole bunch of cleanup. Component names are duplicated, etc.</p></div>
                            </div>
                        </li>
                    
                </ul>

                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = '5aMbZg4f-U-NcO7LpTJZ6qhzMywEXPd5ByU8';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>