<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; Arduino Enigma Machine Simulator &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F6482%2Flogs%3Fpage%3D1">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/6482-arduino-enigma-machine-simulator">Arduino Enigma Machine Simulator</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">An Enigma Machine Simulator was created with an Arduino UNO and a Touchscreen LCD. Simulates Enigma I, M3, M4, the Plugboard and Uhr Switch.</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/72667-arduino-enigma" title="Visit Profile">Arduino Enigma</a><span>&bull;</span>
                
                2 months ago<span>&bull;</span><a href="/project/6482#discussion-list" title="See Comments">1 Comment</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/6482-arduino-enigma-machine-simulator">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/6482/logs/sort/newest">Newest</option>
                    <option value="/project/6482/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/6482/log/20836-enigma-human-interface">Enigma Human Interface</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/6482/log/20836#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20836"><p>This project uses a resistive touch screen LCD to simulate the operation of an Enigma Machine. </p><p>The keys can be activated by pressing on them. The rotors turn, and once they finish turning, the encoded letter is lit. The encoded letter is kept lit for as long as the key is pressed. If the user keeps touching the screen, but moves away from the key, it is released. If the printer options is enabled, the encoded characters are printed on a tape running between the rotors and the lamp field. The tape can be cleared by cutting it<br></p><p>The rotors can be set by touching the setting wheel to the right and then dragging them up or down. The next letter is scrolled up or down one line at a time. The movement of the setting wheel is also animated.</p><p>The machine is configured on the open machine view by touching the enigma logo in the main screen.  The reflector type can be changed by touching it. The wheel types can be changed by touching the wheels in the machine and them moving them to the spare rotor box on the lower part of the screen. </p><p>When a rotor is touched, it is placed in an intermediate holding area in the open lamp field. When the rotor is there, its internal setting can be changed by clicking anywhere in its circumference and then dragging in a circular motion. This is the distinguishing feature that separates this simulator from the other ones out there, whether running on smart phones or computers.  </p><p>Once set, it can be placed in the machine by touching the appropriate position on the mechanism. Rotors I thru VIII can only be placed on the three rightmost positions. The additional wheels Beta and Gamma can only be placed on the left-most position, next to the thin reflectors B and C. Once the rotors are installed in the machine, their starting position can be set by dragging the setting wheel up or down. </p><p>Once all the rotors are installed, the machine can be closed by clicking on the word CLOSE or by touching the handle above the reflector. The machine cannot be closed with missing rotors. When the machine is open, the number of characters to print in a group, the density of the home screen background and the serial port functionality can be set by touching the respective word. Touching the small i to the right of the word CLOSE shows the program credits and acknowledgements. </p><p>Once the machine is closed, all the wheel settings, including the starting position selected are saved to EEPROM so they are remembered when the power is removed. </p><p>From either the main or open machine views, the plugboard can be set by touching the bottom of the screen. </p><p>Once in the plug board view, the plugs can be set by touching one of the desired letters, then the other one. A list of the installed plugs is shown under the plug board. When 10 plugs are installed, the Uhr switch is shown. It setting can be changed from any value from 0 to 40 by dragging around its perimeter.</p><p>When using the Uhr switch, the order in which the plugs are installed matter. For example AB CD EF GH IJ KL MN OP QR ST will yield different results for non-zero Uhr settings than BA CD EF GH IJ KL MN OP QR ST.</p><p>The following video shows how to set the machine:</p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/0vsCewL3Hn8" frameborder="0" allowfullscreen=""></iframe><p>The following video shows how to configure the machine to verify an Open Enigma encoded message:</p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/6PLgOqNtk3Y" frameborder="0" allowfullscreen=""></iframe><p>While the idea for the arrangement of the three different screens for configuring the machine was borrowed from D. Rijmenants award winning Enigma Simulator<span class="redactor-invisible-space"> and the Franklin Heath Enigma Simulator <span class="redactor-invisible-space">animates the scrolling of the wheels by dragging them, what makes this project unique is that all the wheel and Uhr settings are changed via a software rotary encoder by dragging them in a circular motion.</span></span></p><p><span class="redactor-invisible-space"><span class="redactor-invisible-space">All the settings are changed by either touching them, like the keys or plugs, or dragging them, like the wheel setting ring, the wheel internal setting and the Uhr switch. This helps the user to stay in character and lends a realistic feeling to the operation of the machine. </span></span></p><p>The software rotary encoder algorithm will be described in another project log.  </p><p>You can read more about this project at <a href="http://arduinoenigma.blogspot.com/" target="_blank">http://arduinoenigma.blogspot.com/</a> and see a walk-through of configuring the machine at <a href="http://arduinoenigma.blogspot.com/2014/10/using-arduino-enigma-simulator.html" target="_blank">http://arduinoenigma.blogspot.com/2014/10/using-arduino-enigma-simulator.html</a></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6482/log/20837-software-rotary-encoder">Software Rotary Encoder</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/6482/log/20837#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20837"><p>The algorithm for translating a circular movement into incrementing or decrementing a setting is described below.</p><p><a href="http://arduinoenigma.blogspot.com/2014/10/implementing-rotary-encoders-in-touch.html" target="_blank">http://arduinoenigma.blogspot.com/2014/10/implementing-rotary-encoders-in-touch.html</a><br></p><p>The rotary encoder algorithm uses the pithagorean theorem, to calculate C, the distance from the current click coordinates (clickX,clickY) to the center of the circle (cX,cY).</p><p><a href="http://betterexplained.com/articles/measure-any-distance-with-the-pythagorean-theorem/" target="_blank">http://betterexplained.com/articles/measure-any-distance-with-the-pythagorean-theorem/</a><br></p><p>If the distance C is between the minimum and maximum radius accepted, then another algorithm compares (clickX,clickY) with the X,Y coordinates received the last time the function was called. The distance from the current (clickX,clickY) to the previous (clickX,clickY) is computed using pithagoras and then both coordinates are sent to a series of decision functions to see if this distance is going to be used to increment the step counter or decrement it.<br></p><p>A series of voting functions then look at changes in the X or Y coordinates to determine in a robust manner whether the user motion will increment or decrement the desired setting.</p><p>This results in the user being able to drag along the perimeter of a circular control in a clockwise or counterclockwise motion to change it.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6482/log/22383-libraries-used">Libraries Used</a></h2>
                            <small class="authorship">9 days ago  &bull;
                                <a class="gray-link" href="/project/6482/log/22383#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22383"><p>The hardware components of this project are an Arduino UNO and a Seeed Studios Touch Shield LCD v2 both are Open Source Hardware. Eagle files and schematics can be downloaded in the following pages:</p><p><a href="https://www.arduino.cc/en/Main/arduinoBoardUno" target="_blank">https://www.arduino.cc/en/Main/arduinoBoardUno</a></p><p><a href="http://www.seeedstudio.com/wiki/2.8%27%27_TFT_Touch_Shield_v2.0" target="_blank">http://www.seeedstudio.com/wiki/2.8&apos;&apos;_TFT_Touch_Shield_v2.0</a></p><p>This project uses three software libraries, all libraries are available on GitHub and are published under the MIT License. </p><p> 1) Seeed Studios TFT Touch Shield LCD v2 to draw the elements on the screen</p><p><a href="https://github.com/Seeed-Studio/TFT_Touch_Shield_V2" target="_blank">https://github.com/Seeed-Studio/TFT_Touch_Shield_V2</a><br></p><p><a href="https://github.com/Seeed-Studio/TFT_Touch_Shield_V2/blob/master/License.txt" target="_blank">https://github.com/Seeed-Studio/TFT_Touch_Shield_V2/blob/master/License.txt</a></p><p>2) Seeed Studios Touch Screen Driver to recognize touch points.</p><p><a href="https://github.com/Seeed-Studio/Touch_Screen_Driver" target="_blank">https://github.com/Seeed-Studio/Touch_Screen_Driver</a><br></p><p><span class="redactor-invisible-space"><a href="https://github.com/Seeed-Studio/Touch_Screen_Driver/blob/master/License.txt" target="_blank">https://github.com/Seeed-Studio/Touch_Screen_Driver/blob/master/License.txt</a></span></p><p>3) Arduino Enigma Engine and Uhr library to code characters </p><p><a href="https://github.com/arduinoenigma/ArduinoEnigmaEngineAndUhr" target="_blank">https://github.com/arduinoenigma/ArduinoEnigmaEngineAndUhr</a><br></p><p><a href="https://github.com/arduinoenigma/ArduinoEnigmaEngineAndUhr/blob/master/LICENSE" target="_blank">https://github.com/arduinoenigma/ArduinoEnigmaEngineAndUhr/blob/master/LICENSE</a></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6482/log/22548-development-day-1">​Development Day 1</a></h2>
                            <small class="authorship">7 days ago  &bull;
                                <a class="gray-link" href="/project/6482/log/22548#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22548"><p>Development Day 1</p><p>produces correct results for position AAZ</p><p>next steps:</p><p>-stepping of the wheels and rotor offsets</p><p>-clear key presses in gui by implementing state machine</p><p>-use gui to set wheel position</p><p><img src="https://cdn.hackaday.io/images/4159451439335704262.jpg"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6482/log/22549-development-day-3">​Development Day 3</a></h2>
                            <small class="authorship">7 days ago  &bull;
                                <a class="gray-link" href="/project/6482/log/22549#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22549"><p>Development Day 3</p><p>stecker works</p><p>Wheels move and carry, but AN wheels do not carry at A.<br></p><p><img src="https://cdn.hackaday.io/images/7078361439336273818.jpg"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6482/log/22550-development-day-8">​Development Day 8</a></h2>
                            <small class="authorship">7 days ago  &bull;
                                <a class="gray-link" href="/project/6482/log/22550#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22550"><p>Development Day 8</p><p>Wheel carry and double stepping now works.</p><p>UI improvements (state machine, keys pressed move, lights only illuminate letter, rotor spacing &amp; color)</p><p>Encode is now using rotor position, but fails when third wheel is not A (AZAA)</p><p>UI improvements: Wheels can be set.<br></p><p><img src="https://cdn.hackaday.io/images/1158131439336385491.jpg"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6482/log/22551-development-day-10">​Development Day 10</a></h2>
                            <small class="authorship">7 days ago  &bull;
                                <a class="gray-link" href="/project/6482/log/22551#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22551"><p>Development Day 10</p><p>GUI improvements: </p><p>-all wheels can be changed with same click and drag motion by dragging over each wheel</p><p><img src="https://cdn.hackaday.io/images/1076681439336418226.jpg"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6482/log/22552-development-day-13">​Development Day 13</a></h2>
                            <small class="authorship">7 days ago  &bull;
                                <a class="gray-link" href="/project/6482/log/22552#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22552"><p>Development Day 13</p><p>GUI Improvements:</p><p>-created printed tape, can be cleared and disabled</p><p>-<span class="il">enigma</span> text logo can be clicked to enter menu, need to come up with menu UI and buttons (+,-,ok, cancel)</p><p><img src="https://cdn.hackaday.io/images/8083051439336455999.jpg"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6482/log/22553-development-day-14">​Development Day 14</a></h2>
                            <small class="authorship">7 days ago  &bull;
                                <a class="gray-link" href="/project/6482/log/22553#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22553"><p>Development Day 14</p><p>I think it works, interesting off by one error on line 757<br></p><p><img src="https://cdn.hackaday.io/images/1275091439336493375.jpg"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6482/log/22554-development-day-17">​Development Day 17</a></h2>
                            <small class="authorship">7 days ago  &bull;
                                <a class="gray-link" href="/project/6482/log/22554#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22554"><p>Development Day 17</p><p>Start of Stecker board GUI</p><p><img src="https://cdn.hackaday.io/images/4482251439336530985.jpg"></p></div>
                            </div>
                        </li>
                    
                </ul>

                
                <div class="pagination">
                    
                    
                    <a href="?page=2" class="grey-gold-button next-button show">Next</a>
                    
                </div>
                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'pvlalgjE-Ywxk1HQjfQCYz0JyKzTJwwXnmQA';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>