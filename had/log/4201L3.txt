<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; Portable tiny IoT device solving general problem &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F4201%2Flogs%3Fpage%3D3">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/4201-portable-tiny-iot-device-solving-general-problem">Portable tiny IoT device solving general problem</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">Twitter and Wi-Fi connection are just examples of tiny device. This tiny device would provide solutions of healthcare, education problems!</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/38880-kodera2t" title="Visit Profile">kodera2t</a><span>&bull;</span>
                
                7 months ago<span>&bull;</span><a href="/project/4201#discussion-list" title="See Comments">13 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/4201-portable-tiny-iot-device-solving-general-problem">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/4201/logs/sort/newest">Newest</option>
                    <option value="/project/4201/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/4201/log/16109-apple-i-supporting-oled-flame-buffer-source-is-released-on-github">Apple I supporting OLED flame buffer source is released on github</a></h2>
                            <small class="authorship">5 months ago  &bull;
                                <a class="gray-link" href="/project/4201/log/16109#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-16109"><p>Apple I supporting OLED flame buffer source is released on github</p><p><a href="github"><a href="https://github.com/kodera2t/TinyBasicPlus_OLED_support/tree/master/Apple_one_OLED17" target="_blank">https://github.com/kodera2t/TinyBasicPlus_OLED_support/tree/master/Apple_one_OLED17</a></a><br></p><p>You can try to make tiny Apple 1 with this arduino sketch...</p><p>This source is derived from</p><p><a href="http://petersieg.bplaced.net/?Arduino_Apple_1_Emulator%26nbsp%3B" target="_blank">http://petersieg.bplaced.net/?Arduino_Apple_1_Emulator%26nbsp%3B</a><br></p><p>with my flame buffer and small modification for Arduino IDE 1.7.0 support.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4201/log/16676-printer-support-with-llist-and-lprint-commands">Printer support with &#34;llist&#34; and &#34;lprint&#34; commands</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/4201/log/16676#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-16676"><p><img src="https://cdn.hackaday.io/images/7227671429361296442.jpg"></p>
<p>Now the tiny computer is supporting thermal printer with "llist" and "lprint" command. In the picture, it may be a bit hard to see, but a program with </p><p>LPRINT "a=", A, " b=", B</p><p>print out the value of A and B, those are read values in analogue read (A0, and A1). The new code is uploaded on <a href="https://github.com/kodera2t/TinyBasicPlus_OLED_support">github</a> by a new named arduino sketch</p><p><a href="https://github.com/kodera2t/TinyBasicPlus_OLED_support/blob/master/Ada_SingleAVR_OLED_SD_PRT.ino" class="js-directory-link" id="8187e7b36b3cf138314f8e14d20a782a-e07bb01d5ea05ade480120a38d8d3ae28368bbde" title="Ada_SingleAVR_OLED_SD_PRT.ino">Ada_SingleAVR_OLED_SD_PRT.ino</a><br></p><p>Actural operation can be found in</p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/z5UXvxVjXzs" frameborder="0" allowfullscreen=""></iframe><p>Have fun!</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4201/log/16773-moreover-qr-code-generation-function-is-added">Moreover!, QR-code generation function is added!</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/4201/log/16773#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-16773"><p><img src="https://cdn.hackaday.io/images/2713441429622327191.jpg"></p><p>Now a new function "qprint" is added to my TinyBasicPlus code.</p><p>The usage is quite simple, just</p><p>qprint "hello world"</p><p>will generate QR-code corresponds to "hello world". Not only a sentence, but of course URL and e-mail address or more can be QR-coded.</p><p>For this implementation, I used <a href="https://github.com/sparkfun/Thermal_Printer/tree/master/QRprint/QRprint">QRprint</a> driver. I would like to thank the great author to release such a useful code!</p><p>The source code including new "qprint" command is released on <a href="https://github.com/kodera2t/TinyBasicPlus_OLED_support/blob/master/Ada_SingleAVR_OLED_SD_PRT_QR.ino">github</a>.</p><p>The actual operation can be found in the following movie.. have fun!</p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/py-YA7K-k6o" frameborder="0" allowfullscreen=""></iframe></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4201/log/17154-ascii-art-camera">ASCII art Camera!</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/4201/log/17154#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17154"><p>Now I connected JPEG-serial camera module and thermal printer, which taking JPEG format image by camera module and sending it to ATMega1284P, where decoding JPEG to bitmap and the generated bitmap is converted to ASCII characters!!</p><p><img src="https://cdn.hackaday.io/images/6459471430394887143.jpg"></p><p><img src="https://cdn.hackaday.io/images/5709201430394906667.jpg"></p><p>We a personal builder cannot compete with big company by its high-resolution and color resolution, so I went to the opposite direction!</p><p>(In other words, pursuing high-resolution and high color resolution by arduino is a kind of joke...)</p><p>(The above picture shows my guinea pig!)</p><p>Image is snapped by the extended TinyBasicPlus, "asnap" and it simply send out ASCII art image to printer.. Arduino source is uploaded to</p><p><a href="Ada_SingleAVR_OLED_SD_PRT_SS_CAM_AS.ino"></a><a href="https://github.com/kodera2t/TinyBasicPlus_OLED_support/blob/master/Ada_SingleAVR_OLED_SD_PRT_SS_CAM_AS.ino" target="_blank">https://github.com/kodera2t/TinyBasicPlus_OLED_support/blob/master/Ada_SingleAVR_OLED_SD_PRT_SS_CAM_AS.ino</a><br></p><p>Actual operation can be seen in the following movie,,, have fun!</p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/55TanHC6ZU4" frameborder="0" allowfullscreen=""></iframe></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4201/log/17221-on-screen-image-preview-done">On screen image preview done</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/4201/log/17221#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17221"><p><img src="https://cdn.hackaday.io/images/6277461430453481015.jpg"></p><p>During completing the code, I myself wonder I am making a simple low quality digital camera since it is working as</p><p>(1) taking a image in jpeg format</p><p>(2) storing image to SD card</p><p>(3) showing the image on LCD screen,</p><p>those are fully implemented in commercial digital camera more than 20 years ago!</p><p>BUUUT, I noticed the difference. The snapshot function</p><p>"snap"</p><p>is a BASIC command! So taking picture can be triggered by sensor value (for example voltage? current? or some medical related one?)!!!</p><p>Together with FlashAir (WiFi-enabled SD card), captured image can be shared all over the world! Surely it is different from Casio QV-10 in 1990...</p><p>Source code is released on github: <a href="https://github.com/kodera2t/TinyBasicPlus_OLED_support/blob/master/Ada_ATMega1284_LCD_SD_CAM_DISP.ino">Ada_ATMega1284_LCD_SD_CAM_DISP.ino</a></p><p>(For this code completion, I used <a href="https://github.com/MakotoKurauchi/JPEGDecoder">JPEGDecorder</a>, based on picojpeg and written in Arduino sketch. Thank the great author for releasing such a useful library!!)</p><p><img src="https://cdn.hackaday.io/images/4343631430453217411.jpg"></p><p>Actual operation can be seen in </p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/47uxyhuiGXQ" frameborder="0" allowfullscreen=""></iframe></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4201/log/17286-camera-captured-image-preview-on-oled">Camera captured image preview on OLED</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/4201/log/17286#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17286"><p>OLED realises much clearer display expression, but at least the one I have, it is monochrome and I have to accept it is not good for image display.</p><p>But this time, I've tried to show preview image on OLED display as the following image. (On image, my Guinea-pig is saying hello to you!)</p><p><img src="https://cdn.hackaday.io/images/6585781430562362905.jpg"></p><p>It is grayscale, which is the utmost it can. Also the image is a bit distorted to horizontal direction. (Indeed, I am not specialist for image processing, and its grayscale expression is not optimum, I know it. Please help to improve the source code on github if you are specialist at....)</p><p>The current operation of this camera-capable-TinyBasicPlus system is</p><p>(1) Capturing image and converted to jpeg, and transferring to SD card.</p><p>(2) Stored image has a sequential number starting from IMAGE01 to IMAGE02, ....</p><p>(3) Every time capturing image, the latest image preview will be appeared instantly.</p><p><strong>**Captured (stored in SD-card) image is not so bad as preview. It is full-colored image and far better than preview...!</strong></p><p>(4) On screen image preview will be updated, but surely all captured image files are stored in SD card.</p><p>The source code is released on </p><p><a href="https://github.com/kodera2t/TinyBasicPlus_OLED_support/blob/master/Ada_SingleAVR_OLED_SD_PRT_SS_CAM_DISP2.ino">Ada_SingleAVR_OLED_SD_PRT_SS_CAM_DISP2.ino</a><br></p><p>and actual operation can be seen in the following movie...</p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/ziA4BXFzuAw" frameborder="0" allowfullscreen=""></iframe></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4201/log/17448-now-kanji-is-supported">Now Kanji is supported!</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/4201/log/17448#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17448"><p><img src="https://cdn.hackaday.io/images/1382661430892300886.jpg"></p><p>In many cases, ASCII code is enough to handle computer but sometimes, such as human interface part, Japanese characters (Kanji, Hiragana, Katakana) are indispensable to provide  more easy operation for the rest of us. Indeed, it is a bit and hard to impose English operation for all people in the world and localisation of small computer (or equipment) is quite important.</p><p>For this purpose,  <a href="http://www.genitop.com/Products/indexlist_GT20L16J1Y.html">a Chinese company</a> is selling small SPI ROM chip which contains Japanese characters and Kanji for just around $1, and I succeeded to work it in my tiny computer.</p><p>This type of localisation problem not limited to Japanese can be solved by using this type of small chip, since the Chinese company is selling also Greek, Hebrew, Cyrillic, Thai, Latin, Arabic just in <a href="http://www.genitop.com/Products/indexlist_GT20L24F6Y.html">one chip!</a></p><p>My source code driving OLED and the font chip is uploaded to<a href="https://github.com/kodera2t/TinyBasicPlus_OLED_support/blob/master/kanji_test_OLED.ino"> github</a>, and actual operation can be seen in the following movie...</p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/xi-sLKsC3eE" frameborder="0" allowfullscreen=""></iframe></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4201/log/17496-hiragana-input-ready">Hiragana input ready!</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/4201/log/17496#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17496"><p>In the previous introduction, I just show the Kanji character display, but as you see this tiny computer has a keyboard, so</p><p><img src="https://cdn.hackaday.io/images/4016901431003359090.jpg"></p><p>Now "Hiragana" input through keyboard on my tiny computer is ready! In the same manner, 2-byte character world (non-alphabet character) user can input their language with proper character ROM and program.</p><p>The actual operation can be seen in the following movie.</p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/s6YyBxayWt4" frameborder="0" allowfullscreen=""></iframe></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4201/log/18027-now-my-tiny-computer-understand-japanese-text-file">Now my tiny computer understand Japanese text file</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/4201/log/18027#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-18027"><p>Now my tiny computer became a simple and tiny text file (containing Japanese characters) display terminal. This simple Nihongo(Japanese) text reader is consisting of ATMega1284P, OLED-display (SPI), japanese font SPI-ROM (GT20L16J1Y) and text file is reading from SD card.</p><p>Usage: Put plain Japanese (JIS0208-coded) text on Fat formatted SD card. Half-width(single byte), character, including 0x20 in text file will lead to display error because escape sequence (starting by 0x1B) is not well implemented. </p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/76EsKtoRvFg" frameborder="0" allowfullscreen=""></iframe><p>The source file is uploaded to <a href="https://github.com/kodera2t/TinyBasicPlus_OLED_support/blob/master/simple_nihongo_reader_OLED.ino">github!</a> Have fun!</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4201/log/18726-beep-music-function-is-added">Beep music function is added!</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/4201/log/18726#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-18726"><p>And now my tiny computer can play music. This implementation is done with <a href="https://code.google.com/p/rogue-code/wiki/ToneLibraryDocumentation">Tone library for Arduino.</a> The newly added command format is exactly the same as Tone library, as</p><pre class="hljs cpp"><span class="hljs-number">10</span> play <span class="hljs-string">"<a target="_blank">title:d=4,o=4,b=160:c.6,d6,e6</a>"</span></pre><p>will play "do re mi" with tempo 160, 4/4. This function addition will impose some free memory limitation but I would released it on <a href="https://github.com/kodera2t/TinyBasicPlus_OLED_support/blob/master/Ada_SingleAVR_OLED_SD_PRT_SS_CAM_DISP2_TONE.ino">github</a>.</p><p>The actual operation can be seen in the following youtube movie.. have fun!</p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/7qmQL1YFQO4" frameborder="0" allowfullscreen=""></iframe></div>
                            </div>
                        </li>
                    
                </ul>

                
                <div class="pagination">
                    
                    <a href="?page=2" class="grey-gold-button prev-button ">Previous</a>
                    
                    
                    <a href="?page=4" class="grey-gold-button next-button ">Next</a>
                    
                </div>
                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'WSdZ46kW-GgOm0rDiYsiYVyAW4vC2iTpDobc';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>