<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; operation: Learn The MIPS (PIC32MX1xx/2xx) &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F6450%2Flogs%3Fpage%3D2">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/6450-operation-learn-the-mips-pic32mx1xx2xx">operation: Learn The MIPS (PIC32MX1xx/2xx)</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">Having been exclusive to a certain uC-line for over a decade, it&#39;s time to learn something new (and port commonCode!)... Enter MIPS</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/40107-esoteric" title="Visit Profile">esot.eric</a><span>&bull;</span>
                
                2 months ago<span>&bull;</span><a href="/project/6450#discussion-list" title="See Comments">10 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/6450-operation-learn-the-mips-pic32mx1xx2xx">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/6450/logs/sort/newest">Newest</option>
                    <option value="/project/6450/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/6450/log/21068-optimizer-reliance-follies">optimizer reliance follies</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/6450/log/21068#discussion-list">
                                    5 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21068"><p>GAH! I should just delete this whole ordeal.<br><span class="read-more-tag"></span></p><p><br></p><p>MPLABX/xc32-gcc--the free version--has a few restrictions...</p><p>The highest optimization-level is 1 (min 0, max 3, or &quot;s&quot; for size, IIRC)...</p><p>Whelp, I&apos;m running this 32-bit system at 50MHz, what&apos;s that... 32/8=4... 50/20=5/2... 5/2*4=10 so... TEN TIMES the processing-power of my lowly AVRs...</p><p>All it&apos;s doing is fading an LED, sorta like software-PWM... And now it&apos;s noticeably flickering...</p><p>My AVR projects usually don&apos;t do that, even when they&apos;re *heavily* bogged-down with other code...</p><p>So... we&apos;ve already discovered in a previous log that the world doesn&apos;t really exist, but that&apos;s OK, we have to pretend...</p><p>So, here&apos;s where we&apos;re allegedly at:</p><p>The simple &quot;pinOn&quot; and related MACROs rely on a lot of math via macros... Rather&apos;n, say, doing PORTASET = 0x01, it&apos;s doing: *(&amp;PORTA + (&amp;PORTASET-&amp;PORTA))) = 0x01... That was intentional. The AVR side of things does it quite similarly, such that we can use &quot;PORTA&quot; instead of thinking about referring to &quot;PINA&quot; and &quot;DDRA&quot; all the time... It&apos;s SIMPLE math, really, just add a constant to an address... and it&apos;s all done in macros, so it makes it easy, and easily-readable: clrpinPORT(1, PORTA), setoutPORT(1, PORTA)...</p><p>I guess I hadn&apos;t realized how much I relied on the optimizer... avr-gcc strips that entire thing, or something similarly-ugly, down to a single instruction &quot;setbit&quot; at the appropriate register.</p><p>xc32-gcc (with Optimization-level 1), on the other hand... well, just look at it:</p><p>(This was originally setinPORT(), to set bit 0 as an input, but in the process of trying to figure out the slow-down, I stripped a bunch of macros, resulting in this)<br></p><pre class="hljs cpp">//TRISx to PORTx address-offset (-0x10):
#define TPO (int)((int)(&amp;TRISA) - (int)(&amp;PORTA))
//xSET to x address-offset (0x08):
#define SPO (int)((int)(&amp;TRISASET) - (int)(&amp;TRISA))
   //setInput(bit0, PORTA)
   (*(&amp;(PORTA) + TPO + SPO) = RPIN_TO_MASK(0));
9d0001a4:   3c02bf88    lui   v0,0xbf88   //constant
9d0001a8:   24426020    addiu v0,v0,24608 //constant
9d0001ac:   24636018    addiu v1,v1,24600 //constant
9d0001b0:   00621823    subu  v1,v1,v0    //const - const
9d0001b4:   00031880    sll   v1,v1,0x2   //(=const) - 2 (?)
9d0001b8:   00431821    addu  v1,v0,v1    //add constant
9d0001bc:   24020001    li v0,1           //load constant
9d0001c0:   ac620000    sw v0,0(v1)   //write at constant
</pre>Again, that&apos;s a simple instruction, it&apos;s basically nothing more than &quot;TRISASET = 0x01;&quot; and the ...SET registers are such a nice addition, it should make this thing *even faster*! I&apos;m thinking, in this architecture, two instructions, MAX, (load an immediate value to a register, write that register&apos;s contents to the TRISASET memory-location).<br>All the math is done with constants, if PORTA and TRISA weren&apos;t C variables, and instead were #defines, the math coulda easily been handled by preprocessor before even getting to GCC. GCC&apos;s obviously pretty good at math (nevermind optimizing), in comparison to the preprocessor... Instead, it&apos;s leaving all these repetitive constant-calculations for run-time. WEE!<p>It&apos;s quite the realization about just how much the optimizer does... The fact I can easily see the flicker, combined with the fact there&apos;s *no other code running* besides the fading in-and-out of the LED, could indicate we&apos;re running the same C code easily 100-times slower  on a system more than twice as fast. Shocking.</p><p>(Or, I could just be stupid, see the comments)<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6450/log/22496-finally">Finally!</a></h2>
                            <small class="authorship">8 days ago  &bull;
                                <a class="gray-link" href="/project/6450/log/22496#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22496"><p>Things&apos;re getting a bit confusing &apos;round here, as many of my projects feed into each other... This project is a relative-go, as I&apos;ve managed to get the early-stages of <a data-mention-project-id="3828" href="/project/3828">#commonCode (not exclusively for AVRs)</a> running on the PIC32... First was &apos;heartbeat,&apos; which was a bit of a hurdle because I didn&apos;t realize the default ADC-register-settings interfere with many GPIO pins. (I think there&apos;s a log about that). Also, some difficulties with the timer, and a few other settings here and there... (FYI: read carefully: the &quot;primary oscillator&quot; is *external*, most-likely for early testing you&apos;ll want the FRC &quot;Fast R/C&quot; oscillator, which is internal (also note, it&apos;s not highly precise... mine&apos;s running at 108%). The weird thing is... even when selecting an external oscillator, it actually ran... maybe the breadboard capacitance did it, or maybe the PLL doesn&apos;t run slower than a certain frequency, so assumes it&apos;s there... I dunno.</p><p>OK, after &apos;heartbeat&apos; usually comes &apos;polled-uat&apos; which is a bitbanged UART (with only a transmitter). This should be an easy step, since the heartbeat&apos;s default functionality already assures the timer is set-up...</p><p>The third step is usually &apos;polled-uar&apos; which is the bitbanged UART&apos;s *receiver.* Again, this should be an easy step; the timer&apos;s already set-up, and the heartbeat code also has Input functionality running (push a button and the heartbeat changes from fading to blinking). Right, again, easier said than done... Apparently I chose a pin who, again, had *different* defaults than GPIO... So, rather&apos;n fight it, I just ended up swapping to another pin.</p><p>But, it didn&apos;t work. First-guess, the 108% thing was too much for bitbanged *input*... PCs are probably a bit more sophisticated in their UART reception than my code. So I scaled out that error... and <em>everything</em> died. And it&apos;s been dead for nearly a week. FINALLY I figured it out... My scaling managed to push some math to overflow... Actually, that was one of my earlier guesses, but my calculator (which I wrote) said it should fit in 32bits fine... Low-and-behold, my calculator was only showing the lower 32 bits, and actually the scaling needed 36. Woot! DAYS UPON DAYS to figure that shizzle out.</p><p>On the plus-side, my calculator is new and improved! My polled_uat code has been cleaned up quite a bit, as well as a few other things here and there. Also some new ideas for abstracting &apos;heartbeat&apos; a bit more.</p><p>Anyways, suffice-to-say, these three &apos;commonThings&apos;, once running, are usually the basis for all my projects... and now we&apos;re ready to start a new, more-sophisticated project... Enter: <a data-mention-project-id="6892" href="/project/6892">#2.5-3D thing</a>, wherein I&apos;ll be abstracting the motion-control aspects of &apos;commonCode&apos; so they can function on PIC32, and hopefully more-easily be ported to most any architecture.<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6450/log/22601-it-shoulda-been-simple">It shoulda been simple!</a></h2>
                            <small class="authorship">7 days ago  &bull;
                                <a class="gray-link" href="/project/6450/log/22601#discussion-list">
                                    1 comment
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22601"><p><strong>UPDATE: </strong>FIXED!</p><p>Apparently the MX170 is not yet in openOCD&apos;s device-listing:</p><p>I don&apos;t fully understand it, and it was a VERY round-about way of coming to this rather simple conclusion. This <strong>does require recompilation of openOCD.</strong></p><ol><li>Edit the file openocd-0.9.0/src/flash/nor/pic32mx.c</li><li>Add your CPUTAPID (see note) to pic32mx_devs[] (&apos;round line 120).<ol><li>NOTE, add the CPUTAPID &amp; 0x0fffffff... or *drop* the first nibble... e.g. the MX170F256B has a CPUTAPID of 0x26610053, the line added looks like:<br><ol><li><span class="redactor-invisible-space"><pre>{<span class="hljs-number">0x06610053, <span class="hljs-string">&quot;170F256B&quot;</span>},</span></pre></span></li></ol></li><li>NOTE2: Based on my understanding of the code, it looks like you can add your device listing anywhere in the list (it doesn&apos;t have to be sorted).</li></ol></li><li>Recompile openOCD and place the executable appropriately<ol><li>(either &apos;make install&apos;, or if already done with an older version, just copy src/openocd over /usr/local/bin/openocd)<br></li></ol></li></ol><p><strong>Was:<br></strong></p><p><strong></strong>&quot;It shoulda been simple&quot; the phrase of this era... re: flashing the MX170...</p>The latest: For the motion-control code, I planned to switch to the MX170 rather than the MX230 used in this &quot;project&quot; because the 170 has several 5V-tolerant pins which would lend themselves well to my H-Bridge chip.  Really, technically, the only differences should be a slight pinout change, and more flash-memory. In fact, they share the same datasheet; their registers are identical everywhere I&apos;ve looked, the configuration-bytes are identical (as far as the PLL, etc...). The code compiles with no changes other than switching the xc32-gcc MCU argument, appropriately. And, in fact, I&apos;ve even run &quot;diff&quot; on the disassembly-listings as well as the intel-hex files(!) and the only differences are a few address differences ((the 230 was 64KB, the 170 is 256KB, apparently some exception(?) routines are placed near the end of the FLASH).<p>So... what on earth could be wrong...?</p><p>The best I&apos;ve come up with, after much effort, is that somehow the program-FLASH is only being written in the first row (128bytes) and then it appears to be empty, despite the flashing-procedure not giving any errors. I&apos;ve tried two chips, now I&apos;m fighting with the Really Slow Flashing Method (half an hour for 256KB?!) to see if it functions differently... I think this is an openOCD thing. It&apos;s just *really weird*. These chips should be nearly identical, in fact I&apos;m almost certain I should be able to run the hex-file compiled for one on the other.</p><p>Not sure if/how I&apos;d&apos;ve ever figured this out without single-stepping... it&apos;s not a problem with *my* code, probably not a code problem at all (as far as the code running on the chip, judging by the diffs)... Just Weird. </p><p>Maybe it&apos;d been worth it to use the Microchip tools (programmer, etc.) after all...</p><p><strong>HAH!</strong> &quot;Slow-Flash&quot; ended-up failing on the *other* flash-bank...</p><p>So, now we have: If I &quot;fast-flash&quot; (using the hacked openOCD), it writes the BOOT flash properly, but not the program-flash... then I can &quot;slow-flash&quot; (using the unhacked openOCD) and it will write the program-flash but not the boot flash! LOL. <strong>IT RUNS!</strong> LOL!<br> </p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6450/log/23371-this-is-getting-confusing">This is getting confusing!</a></h2>
                            <small class="authorship">2 days ago  &bull;
                                <a class="gray-link" href="/project/6450/log/23371#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23371"><a href="https://hackaday.io/project/3828/log/23266-this-is-getting-confusing-video"><p>A summary of the &quot;big three&quot;, no not the big-three commonThings, the big-three projects currently highly-involved in their development:</p>https://hackaday.io/project/3828/log/23266-this-is-getting-confusing-video</a></div>
                            </div>
                        </li>
                    
                </ul>

                
                <div class="pagination">
                    
                    <a href="?page=1" class="grey-gold-button prev-button show">Previous</a>
                    
                    
                </div>
                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'Slkj0GVK-JIf8sSzLJOsOxpPyOMu05zmsPFQ';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>