<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; A danceable notification cube &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F6593%2Flogs%3Fpage%3D1">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/6593-a-danceable-notification-cube">A danceable notification cube</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">A motion sensing colorful cube that keeps track on Twitter, all for creating awareness about IoT through art.</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/70780-jakob-andrn" title="Visit Profile">Jakob Andr√©n</a><span>&bull;</span>
                
                2 months ago<span>&bull;</span><a href="/project/6593#discussion-list" title="See Comments">0 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/6593-a-danceable-notification-cube">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/6593/logs/sort/newest">Newest</option>
                    <option value="/project/6593/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/6593/log/20885-hello-light">Hello light!</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/6593/log/20885#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20885"><img src="https://cdn.hackaday.io/images/3675911436826464784.jpg"><p>Well I got the LEDs inside, looks good so far. The biggest problem so far is the power consumptions which is pretty high. I am expeting as much as 9A at 5V when all are put on full white only from the WS2812B LEDs, count another ~6A at 12V for the Power LEDs for short bursts...</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6593/log/21067-neopixel-speed">NeoPixel speed</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/6593/log/21067#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21067"><p>So I want the absolute highest possible refresh rate on this project because that means I do not have to filter the results as much and therefor are able to let it have a funny pulse flashing behavior with quick moves.</p><p>First a short note on the MPU6050 sensor, it transmitted  the raw acc and gyro values in ~1700 us both on the UNO and Teensy, but I have reduced that time to ~300 us by rising the I2C rate from 100 kHz to 800 kHz with the help of the Teensy specific <strong><a target="_blank" href="https://forum.pjrc.com/threads/21680-New-I2C-library-for-Teensy3">i2c_t3</a></strong> library. It was actually possible to pull up the speed even more but the sensor is only specified for 400 kHz, and I prefer some stability and time savings wasn&apos;t as large after that point.</p><p>So lets talk about the pixels now, with some unprofessionally measured speeds for the show() or equivalent<span class="redactor-invisible-space"> method, like this:</span></p><pre class="hljs cpp">    t = micros();
    pixels.show();
    Serial.println(micros()-t);</pre><table><tbody><tr><td><strong>Micro</strong></td><td><strong>Library</strong></td><td><strong>Update 150 LEDs</strong></td></tr><tr><td>Arduino UNO (16 MHz)</td><td>Adafruit_NeoPixel</td><td>446 us every 2nd 1472 us</td></tr><tr><td>Arduino UNO (16 MHz)</td><td><a href="https://github.com/bigjosh/SimpleNeoPixelDemo">SimpleNeoPixelDemo</a></td><td>960 us every 10th 1980 us <br></td></tr><tr><td>Teensy LC (48 MHz)</td><td>Adafruit_NeoPixel</td><td>490 us every 2nd 1490 us</td></tr><tr><td>Teensy 3.1 (96 MHz)</td><td>FastLED</td><td>4700 us</td></tr><tr><td>Teensy 3.1 (96 MHz)</td><td>Adafruit_NeoPixel</td><td>856 us every 6/7th 1857 us</td></tr></tbody></table><p>So what really surprised me was the FastLED performance which was a lot worse than the others, despite what I read before trying it out. Do note that this doesn&apos;t include the efficient math routines that FastLED apparently has. In my case that doesn&apos;t matter, all my pixels have the same color and I only do a simple HSL conversion for finding the Hue in the accelerometer values, constant saturation, and gyro values for Luminance.<br><br>Funny thing is that it seams the UNO actually is faster than the Teensys when it comes the raw updating of the LEDs. Count in the sensor readings, color conversion and I hope soon Twitter notifications and the Teensy will be worth it, or should I just have developed it around the ESP8266 with braked out pins? (I will say no on this because, Im now able to reset the ESP and when necessary without affecting the motion based lightning). Websockets and MQTT proved a lot more difficult to get working than I suspected, been trying out several now and all of them have had their quirks so far..<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6593/log/21194-espduino-or-neopixels-memory-leak">ESPduino or Neopixels memory leak?</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/6593/log/21194#discussion-list">
                                    1 comment
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21194"><p>So after several days trying diffrenet approaches for communication beetween server and ESP8266 we finally got the last bit working on the project (have some back logging to do here at hackaday.io), MQTT over a ESP8266 to a Teensy 3.1. The resulting speed is quite remarkable:<br></p><p class="fb-post fb_iframe_widget"><iframe class="" src="https://www.facebook.com/v2.3/plugins/post.php?app_id=&amp;channel=https%3A%2F%2Fs-static.ak.facebook.com%2Fconnect%2Fxd_arbiter%2FxRlIuTsSMoE.js%3Fversion%3D41%23cb%3Df8f133e37c2422%26domain%3Dhackaday.io%26origin%3Dhttps%253A%252F%252Fhackaday.io%252Ff2564f64a7bd7b6%26relation%3Dparent.parent&amp;container_width=571&amp;href=https%3A%2F%2Fwww.facebook.com%2F996578583708210%2Fvideos%2F999688336730568%2F&amp;locale=sv_SE&amp;sdk=joey&amp;width=500" style="border: medium none; visibility: visible; width: 500px; height: 465px;" title="fb:post Facebook Social Plugin" allowfullscreen="true" frameborder="0" height="1000px" width="500px"></iframe></p><p><em>Small edit: is anyone able to see the video?</em></p> <p>But it didn&apos;t work when I tried to combine it with my earlier MPU6050 and Neopixel code... Im now down to a mix of only ESPduino example code for a MQTT client (<a href="https://github.com/tuanpmt/espduino">https://github.com/tuanpmt/espduino</a>) and the Neopixel library from Adafruit. And from what I can see I have a memory problem and I had liked to get your input on that. So some examples: <br></p><p>First serial output from a fully functional run, only about 20 pixels here, last is the data received which changes the output colour:<br></p><pre class="hljs">&#xFFFD;<span class="hljs-constant">KN</span>&#x4D2;&#xFFFD;&#xFFFD;&#x6D2;&#xFFFD;mode <span class="hljs-symbol">:</span> sta(<span class="hljs-number">18</span><span class="hljs-symbol">:fe</span><span class="hljs-symbol">:</span><span class="hljs-number">34</span><span class="hljs-symbol">:a0</span><span class="hljs-symbol">:f1</span><span class="hljs-symbol">:eb</span>)
add <span class="hljs-keyword">if</span><span class="hljs-number">0</span>
&#xFFFD;=&#xFFFD;&#xFFFD;&#xFFFD;&#xFFFD;)&#xFFFD;&#xFFFD;b&#xFFFD;<span class="hljs-constant">ARDUINO</span><span class="hljs-symbol">:</span> setup mqtt client
<span class="hljs-constant">ARDUINO</span><span class="hljs-symbol">:</span> setup mqtt lwt
<span class="hljs-constant">ARDUINO</span><span class="hljs-symbol">:</span> setup wifi
<span class="hljs-constant">ARDUINO</span><span class="hljs-symbol">:</span> system started
scandone
add <span class="hljs-number">0</span>
aid <span class="hljs-number">5</span>
pm open phy2,<span class="hljs-symbol">type:</span><span class="hljs-number">2</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>
cnt 

connected with <span class="hljs-comment">#SSID#, channel 7</span>
dhcp client start...
<span class="hljs-symbol">ip:</span><span class="hljs-number">192.168</span>.<span class="hljs-number">1.103</span>,<span class="hljs-symbol">mask:</span><span class="hljs-number">255.255</span>.<span class="hljs-number">255.0</span>,<span class="hljs-symbol">gw:</span><span class="hljs-number">192.168</span>.<span class="hljs-number">1.1</span>
<span class="hljs-constant">WIFI</span> <span class="hljs-constant">CONNECTED</span>
<span class="hljs-constant">Connected</span>
<span class="hljs-constant">Received</span><span class="hljs-symbol">:</span> topic=cube
data=<span class="hljs-number">0102</span>802800015001502<span class="hljs-number">0</span></pre><p>And a faulty run that isn&apos;t able to connect to the MQTT server, get this or just nothing after &quot;Arduino: system started&quot; when rising the number of pixels. I guess that the ESP get the same gibberish and thats whats messes it up:<br></p><pre class="hljs ruby">&#x4D2;&#xFFFD;&#xFFFD;&#x6D2;&#xFFFD;mode <span class="hljs-symbol">:</span> sta(<span class="hljs-number">18</span><span class="hljs-symbol">:fe</span><span class="hljs-symbol">:</span><span class="hljs-number">34</span><span class="hljs-symbol">:a0</span><span class="hljs-symbol">:f1</span><span class="hljs-symbol">:eb</span>)
add <span class="hljs-keyword">if</span><span class="hljs-number">0</span>
&#xFFFD;&#xFFFD;&#xFFFD;&#xFFFD;=&#xFFFD;&#xFFFD;&#xFFFD;&#xFFFD;b&#xFFFD;<span class="hljs-constant">ARDUINO</span><span class="hljs-symbol">:</span> setup mqtt client
<span class="hljs-constant">ARDUINO</span><span class="hljs-symbol">:</span> setup mqtt lwt
<span class="hljs-constant">ARDUINO</span><span class="hljs-symbol">:</span> setup wifi
<span class="hljs-constant">ARDUINO</span><span class="hljs-symbol">:</span> system started
scandone
add <span class="hljs-number">0</span>
aid <span class="hljs-number">5</span>
 open ph,<span class="hljs-symbol">type:</span><span class="hljs-number">2</span> 
cnt 
connectewith <span class="hljs-constant"></span><span class="hljs-constant">[Incorrect SSID]channel</span> 
dhcp clnt start.
<span class="hljs-symbol">ip:</span><span class="hljs-number">192.168</span>.<span class="hljs-number">103</span>,<span class="hljs-symbol">mask:</span><span class="hljs-number">5.255</span>.<span class="hljs-number">250</span>,<span class="hljs-symbol">gw:</span><span class="hljs-number">1928.1</span>.<span class="hljs-number">1</span>
<span class="hljs-constant">ARDUINO</span><span class="hljs-symbol">:</span> <span class="hljs-constant">Invalid</span> <span class="hljs-constant">CRC</span></pre><p>So first thing that is visible is the missing characters in the serial communication, which what I could find is a sign of out of memory. But I run a Teensy 3.1 and both codes are supposed to work on Arduino Uno, I have done tests with the Neopixel library successfully on Uno, so it suprices me that it stops working after adding just about 80 pixels more. About 240 bytes of the 64 kbytes that the Teensy 3.1 has. The Teensy LC, which has 8 kbytes of RAM, also works if I reduce the number of LEDs down to 5.<br><br>Does anyone have any ideas about a more exakt reason or solution to this?<br><br>EDIT: It works together with FastLED, hmm. But FastLED is approx 5 times slower than the Adafruit library so I had prefered to have Adafruit up and running.<br><br></p><pre class="hljs"><span class="hljs-preprocessor">#<span class="hljs-keyword">include</span> &lt;Adafruit_NeoPixel.h&gt;</span>
<span class="hljs-preprocessor">#<span class="hljs-keyword">include</span> &lt;espduino.h&gt;</span>
<span class="hljs-preprocessor">#<span class="hljs-keyword">include</span> &lt;mqtt.h&gt;</span>

<span class="hljs-preprocessor">#<span class="hljs-keyword">define</span> NEO_PIN           6</span>
<span class="hljs-preprocessor">#<span class="hljs-keyword">define</span> NEO_NUM           20</span>

<span class="hljs-function">ESP <span class="hljs-title">esp</span><span class="hljs-params">(&amp;Serial2, &amp;Serial, 15)</span></span>;  <span class="hljs-comment">// CHpd port</span>
<span class="hljs-function">MQTT <span class="hljs-title">mqtt</span><span class="hljs-params">(&amp;esp)</span></span>;
boolean wifiConnected = <span class="hljs-keyword">false</span>;

Adafruit_NeoPixel strip = Adafruit_NeoPixel(NEO_NUM, NEO_PIN, NEO_GRB + NEO_KHZ800);
<span class="hljs-keyword">uint32_t</span> c = strip.Color(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>); <span class="hljs-comment">// Start with black</span>


<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setup</span><span class="hljs-params">()</span> </span>{
  strip.begin();
  strip.show();
  
  pinMode(<span class="hljs-number">16</span>, OUTPUT);    <span class="hljs-comment">// Turn on the Neopixel voltageregulator</span>
  digitalWrite(<span class="hljs-number">16</span>, HIGH);
  
  Serial2.begin(<span class="hljs-number">19200</span>);
  Serial.begin(<span class="hljs-number">115200</span>);
  <span class="hljs-comment">//while(!Serial);</span>

  esp.enable();
  delay(<span class="hljs-number">500</span>);
  esp.reset();
  delay(<span class="hljs-number">500</span>);
  <span class="hljs-keyword">while</span> (!esp.ready());

  Serial.println(F(<span class="hljs-string">&quot;ARDUINO: setup mqtt client&quot;</span>));

  <span class="hljs-comment">// Begin MQTT - settings in string</span>, from example
  <span class="hljs-keyword">if</span> (!mqtt.begin(<span class="hljs-string">&quot;DVES_duino&quot;</span>, <span class="hljs-string">&quot;admin&quot;</span>, <span class="hljs-string">&quot;Isb_C4OGD4c3&quot;</span>, <span class="hljs-number">120</span>, <span class="hljs-number">1</span>)) {
    
    Serial.println(F(<span class="hljs-string">&quot;ARDUINO: fail to setup mqtt&quot;</span>));
    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>);
    }


  Serial.println(F(<span class="hljs-string">&quot;ARDUINO: setup mqtt lwt&quot;</span>));
  mqtt.lwt(<span class="hljs-string">&quot;/lwt&quot;</span>, <span class="hljs-string">&quot;offline&quot;</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>); <span class="hljs-comment">//or mqtt.lwt(&quot;/lwt&quot;, &quot;offline&quot;);</span>

  <span class="hljs-comment">/*setup mqtt events */</span>
  mqtt.connectedCb.attach(&amp;mqttConnected);
  mqtt.disconnectedCb.attach(&amp;mqttDisconnected);
  mqtt.publishedCb.attach(&amp;mqttPublished);
  mqtt.dataCb.attach(&amp;mqttData);

  <span class="hljs-comment">/*setup wifi*/</span>
  Serial.println(F(<span class="hljs-string">&quot;ARDUINO: setup wifi&quot;</span>));
  esp.wifiCb.attach(&amp;wifiCb);

  esp.wifiConnect(<span class="hljs-string">&quot;#SSID#&quot;</span>, <span class="hljs-string">&quot;###&quot;</span>);

  Serial.println(F(<span class="hljs-string">&quot;ARDUINO: system started&quot;</span>));
}
<span class="hljs-comment">// END SETUP</span>


<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">loop</span><span class="hljs-params">()</span> </span>{
  <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">long</span> T = micros();

  <span class="hljs-comment">// Check if there is a new message!</span>
  esp.process();

  <span class="hljs-comment">/*
  if (micros() - T &gt; 10) {    // If there was a message, tell us the timing and result.
    Serial.print(micros() - T); Serial.print(F(&quot;us, &quot;));
    Serial.println(c);
  }
  */</span>

  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;strip.numPixels();i++){
      strip.setPixelColor(i, c);
      }
  strip.show();
  
  <span class="hljs-keyword">if</span> (wifiConnected) {
    }
}


<span class="hljs-comment">/// Functions</span>

<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">wifiCb</span><span class="hljs-params">(<span class="hljs-keyword">void</span>* response)</span>
</span>{
  <span class="hljs-keyword">uint32_t</span> status;
  <span class="hljs-function">RESPONSE <span class="hljs-title">res</span><span class="hljs-params">(response)</span></span>;

  <span class="hljs-keyword">if</span> (res.getArgc() == <span class="hljs-number">1</span>) {
    res.popArgs((<span class="hljs-keyword">uint8_t</span>*)&amp;status, <span class="hljs-number">4</span>);
    <span class="hljs-keyword">if</span> (status == STATION_GOT_IP) {
      Serial.println(F(<span class="hljs-string">&quot;WIFI CONNECTED&quot;</span>));
      mqtt.connect(<span class="hljs-string">&quot;#IP#&quot;</span>, <span class="hljs-number">1883</span>, <span class="hljs-keyword">false</span>);
      wifiConnected = <span class="hljs-keyword">true</span>;
      <span class="hljs-comment">//or mqtt.connect(&quot;host&quot;, 1883); /*without security ssl*/</span>
    } <span class="hljs-keyword">else</span> {
      wifiConnected = <span class="hljs-keyword">false</span>;
      mqtt.disconnect();
    }

  }
}

<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">mqttConnected</span><span class="hljs-params">(<span class="hljs-keyword">void</span>* response)</span>
</span>{
  Serial.println(F(<span class="hljs-string">&quot;Connected&quot;</span>));
  mqtt.subscribe(<span class="hljs-string">&quot;cube&quot;</span>);
  mqtt.publish(<span class="hljs-string">&quot;tweets&quot;</span>, <span class="hljs-string">&quot;Hello mqtt from Teensy&quot;</span>);

}


<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">mqttDisconnected</span><span class="hljs-params">(<span class="hljs-keyword">void</span>* response)</span>
</span>{

}


<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">mqttData</span><span class="hljs-params">(<span class="hljs-keyword">void</span>* response)</span>
</span>{
  <span class="hljs-function">RESPONSE <span class="hljs-title">res</span><span class="hljs-params">(response)</span></span>;

  Serial.print(F(<span class="hljs-string">&quot;Received: topic=&quot;</span>));
  String topic = res.popString();
  Serial.println(topic);

  Serial.print(F(<span class="hljs-string">&quot;data=&quot;</span>));
  String json = res.popString();
  Serial.println(json);

  c = strip.Color(json.substring(<span class="hljs-number">2</span>,<span class="hljs-number">5</span>).toInt(), json.substring(<span class="hljs-number">5</span>,<span class="hljs-number">8</span>).toInt(), json.substring(<span class="hljs-number">8</span>,<span class="hljs-number">11</span>).toInt());

}


<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">mqttPublished</span><span class="hljs-params">(<span class="hljs-keyword">void</span>* response)</span>
</span>{
}

</pre></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6593/log/21282-driving-a-80w-led-lamp">Driving a 80W LED lamp...</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/6593/log/21282#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21282"><p>So this is what the internal &quot;bulb&quot; looks like:</p><p><img src="https://cdn.hackaday.io/images/311971437507247103.JPG"></p><p>It has 148 Neopixels and 12 3W power LEDS, which consumes about 40W each when set on full power! Luckily it will newer be on on full for more than a second or two in a row so I only have to manage those effects as peaks.</p><p>The power LEDs are driven by two FET transistors (at ground) directly on the battery 12V voltage, configured in series of three with two in parallel on each FET and then controlled by a PWM signal from the Teensy. <br></p><p><img src="https://cdn.hackaday.io/images/7501451437507540390.JPG"></p><p>The 148 Neopixels proved a lot more tricky, first they will have a calculated peak current of 9A at 5V and they do not like the 12V from the battery. So I had to find a regulator which could buck the voltage down and sustain that current! Well I found one impressive regulator NE12S10A which delivers up to 10A of current at 0.59 -5.1V @ 94% efficiency, perfect! Or... Turns out it is    very inefficient at small loads, it draws 80 mA at IDLE and gets very hot also. And I want the cube to turn off the lights when standing still, and it should be able to do that for a long time.<br><br>Solution? LM2574, an easy to build regulator for currents up to 0.5 A. I &quot;programmed&quot; (resistor bridge) it to deliver the 3.3V needed for the Teensy, ESP and MPU instead of using a linear regulator from the 5V source. And then connected the enable pin from the NE12S10A to the Teensy so that I dynamically may turn it on and of when needed. It powers up to 90% of full power in 3ms which is more than enough for me.<br><br>All solved? Nope, the NeoPixels didn&apos;t turn on... Well missed the part about signal strength for the first Din. Oh well, it needs 70% of Vin which equals to 3.5 V, close but not enough. the recommended solution out there on forums seems to be logic level shifters, but I didn&apos;t have one on hand and wanted it to work. It struck me that I could lower the Vin as well, 3.3V is 70% of 4.7 V, so I tried that and it worked like a charm! Actually I changed the voltage dynamically with a potentiometer and could see that there was no real difference in the light, so I settled on 4.5 V as Vin, same power and stable signal!<br><br>Summary:<br>3.3V max 0.5A, micros<br>4.5V max 10A Neopixels, only on when needed<br></p><p>This is what it looks like mounted inside the bulb, pretty stuffed.<br></p><p><img src="https://cdn.hackaday.io/images/1234741437510140376.JPG"></p></div>
                            </div>
                        </li>
                    
                </ul>

                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'Uf3Zf3ai-R1C0wQpJMZYRv7J5Ri4bM7r8Ykk';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>