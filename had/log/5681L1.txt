<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; Multi-Function Selective Firing Neurons &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F5681%2Flogs%3Fpage%3D1">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/5681-multi-function-selective-firing-neurons">Multi-Function Selective Firing Neurons</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">An actualization of a thought experiment on how a neural network can be better modeled using neurotransmitters.</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/4771-rollyn01" title="Visit Profile">Rollyn01</a><span>&bull;</span>
                
                3 months ago<span>&bull;</span><a href="/project/5681#discussion-list" title="See Comments">4 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/5681-multi-function-selective-firing-neurons">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/5681/logs/sort/newest">Newest</option>
                    <option value="/project/5681/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/5681/log/17582-when-one-neuron-talks-to-another">When one neuron talks to another...</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5681/log/17582#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17582"><p>Well, I started on how to describe some of the behavior of the neurons on an individual level. Here's the current scoop.</p><p>Each neuron will have a list of variables for use in carrying out the propagation of an input signal.</p><p><img alt="\color{White} \large  W_n,_t; [a_n,_t,b_n,_t ]; A_n" title="\color{White} \large  W_n,_t; [a_n,_t,b_n,_t ]; A_n" src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20%20W_n%2C_t%3B%20%5Ba_n%2C_t%2Cb_n%2C_t%20%5D%3B%20A_n"></p><p>where:</p> <ul><li> <img alt="\color{White} \large W_n,_t" title="\color{White} \large W_n,_t" src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20W_n%2C_t">is the weight of a neurotransmitter(t) of a specific neuron(n)</li><li><img alt="\color{White} \large [a_n,_t,b_n,_t ]" title="\color{White} \large [a_n,_t,b_n,_t ]" src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20%5Ba_n%2C_t%2Cb_n%2C_t%20%5D"> is the interval that  has be in for the neuron to trigger a specific function</li><li><img alt="\color{White} \large A_n" title="\color{White} \large A_n" src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20A_n"> is the status of neuron(n) where one means it's active and zero means it's inactive</li></ul> <table> <tbody><tr> <td colspan="3"> <p>List of neurotransmitter(weights), initial intervals and functions</p> </td> </tr> <tr> <td> <p>Weight</p> </td> <td> <p>Interval</p> </td> <td> <p>Function taken by neuron</p> </td> </tr> <tr> <td> <p>t=1</p> </td> <td> <p>a=0, b=100</p> </td> <td> <p>Increases b of triggered interval</p> </td> </tr> <tr> <td> <p>t=2</p> </td> <td> <p>a=0, b=100</p> </td> <td> <p>Decreases b of triggered interval</p> </td> </tr> <tr> <td> <p>t=3</p> </td> <td> <p>a=0, b=100</p> </td> <td> <p>Increases a of triggered interval</p> </td> </tr> <tr> <td> <p>t=4</p> </td> <td> <p>a=0, b=100</p> </td> <td> <p>Decreases a of triggered interval</p> </td> </tr> <tr> <td> <p>t=5</p> </td> <td> <p>a=0, b=100</p> </td> <td> <p>Increases weight of highest interval</p> </td> </tr> <tr> <td> <p>t=6</p> </td> <td> <p>a=0, b=100</p> </td> <td> <p>Decreases weight of highest interval</p> </td> </tr> <tr> <td> <p>t=7</p> </td> <td> <p>a=0, b=100</p> </td> <td> <p>Increases weight of lowest interval</p> </td> </tr> <tr> <td> <p>t=8</p> </td> <td> <p>a=0, b=100</p> </td> <td> <p>Decreases weight of lowest interval</p> </td> </tr> </tbody></table> <p>A neuron will be active only if one or more of its intervals are triggered. When active, only the weights of that neuron can be read by the other neurons connected to it, the weights of other neurons that are connected are ignored. While the upper and lower bounds of an interval can take on negative values (i.e. -1,-100), the weights themselves cannot. This is to be more consistent with the notion that a neurotransmitter in biological organisms can be either present in a certain amount or not present at all. It can also help to properly model how certain neurons wouldn't activate even though there's a high amount of a particular neurotransmitter (medication that is ineffective in correcting chemical imbalances).</p><p>That's all I have for now. How the neuron determines the highest/lowest interval or evaluation function to match against the list of intervals hasn't been done yet, but hopefully it will be soon.<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5681/log/17694-cake-one-layer-or-five">Cake? One layer or five?</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5681/log/17694#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17694"><p>Well, as mentioned before, this project is meant to combine different type of neural networks into one single framework. However, the overall structure will be based on the multilayer perceptron. This topology relies on different layers of neurons that are typically visualized as vertical columns where each neuron in a column is connected to every neuron of the column adjacent to it. The first perceptron only had two layers; one for input, one for output. More layers were added later in order for the network to deal with larger more complex problems (voice analysis and filtering, data mining, etc) with the additional layers being named "hidden" layers.</p><p>The amount of layers I have settled on will be three (with 10 neurons each) which will be "hidden" and two layers that will serve as input and output. My project will not be using backpropagation. Any difference in actuation will be feed forward through the network from the receptors (input layer) till it gets to the actuators (output layer) creating a feedback loop. As such, and to still keep it a bit simple, there will be twenty receptors and five actuators. The receptors will only have their activation status changed, allowing their  weights to be read by other neurons. Intervals will not be necessary as their will not be what activates the receptors. Meanwhile, the actuators will only have intervals that can be triggered to determine whether the actuator is activated or not. They will not possess any weights themselves as the are the end-point of the chain and only the activation status is important as with the receptors.<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5681/log/17696-but-i-hate-math">But I hate math...</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5681/log/17696#discussion-list">
                                    4 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17696"><p>As for the equation that will be used to determine whether a neurotransmitter triggers one of the intervals in a neuron, it will be as follows:</p><p><img alt="\color{White} \large f(t)= (\sum_n 〖A_n*W_n,_t 〗)/(\sum_n A_n )  " title="\color{White} \large f(t)= (\sum_n 〖A_n*W_n,_t 〗)/(\sum_n A_n )  " src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20f(t)%3D%20(%5Csum_n%20%E3%80%96A_n*W_n%2C_t%20%E3%80%97)%2F(%5Csum_n%20A_n%20)%20%20"></p><p>where the numerator represents the sum of the specific neurotransmitter (t) from the neurons that are active and connected, while the denominator represents the sum of how many neurons are active (where n is the set of neurons that are active). This function will be compared with the corresponding interval to see if it is within the range to trigger that particular action and render a particular neuron active. This is just an averaging function. It might need adjusting later but, for now, it should suffice for what I'm trying to accomplish. That's all as is. Hopefully, I'll have a flowchart and some pseudocode to post later.<br></p><p>Note: Special thanks goes to <a data-mention-user-id="56285" href="/hacker/56285">@M. Bindhammer</a> for helping me correct the equation's presentation.<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5681/log/17716-i-pseudo-want-to-code-its-too-hard">I pseudo want to code, it&#39;s too hard...</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5681/log/17716#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17716"><p>This is the best I can come up with for now. My scattered brain and I can't seem to get it together to come up with something better. Oh well, this is only the beginning. I will hope to have a method to determine the highest and lowest interval that I can sneak in there. This is just the main bulk of how the neurons will be activated by the weights of their connections. How this will come together completely is another question but I'm excited that I've made it this far. </p><p>A simplified pseudo-code for averaging and activation function will be something close to the following:</p><pre class="hljs vbscript">i = neurons being read; j = neurons reading; x = first neuron <span class="hljs-keyword">in</span> a column; y = last neuron <span class="hljs-keyword">in</span> a column;
<span class="hljs-keyword">for</span> j = x <span class="hljs-keyword">to</span> y ++<span class="hljs-number">1</span>;
    A_j = 0; h1 = <span class="hljs-number">0</span>; h2 = <span class="hljs-number">0</span>; ht = <span class="hljs-number">0</span>; F_t = <span class="hljs-number">0</span>;
    <span class="hljs-keyword">for</span> t = <span class="hljs-number">1</span> <span class="hljs-keyword">to</span> <span class="hljs-number">8</span> ++<span class="hljs-number">1</span>;
        <span class="hljs-keyword">for</span> i = x <span class="hljs-keyword">to</span> y ++<span class="hljs-number">1</span>;
            h1 = h1 + A_i*W_(i,t);
            h2 = h2 + A_i;
        <span class="hljs-keyword">next</span> i;
    <span class="hljs-keyword">if</span> h2 == <span class="hljs-number">0</span> <span class="hljs-keyword">then</span> ht = <span class="hljs-number">0</span> <span class="hljs-keyword">else</span> ht = h1/h2
    <span class="hljs-keyword">if</span> a_(i,t) ≤ ht <span class="hljs-keyword">and</span> ht ≤ b_(i,t) <span class="hljs-keyword">then</span> F_t = <span class="hljs-number">1</span> <span class="hljs-keyword">and</span> A_j = <span class="hljs-number">1</span>;
    <span class="hljs-keyword">next</span> t;
    <span class="hljs-keyword">for</span> t = <span class="hljs-number">1</span> <span class="hljs-keyword">to</span> <span class="hljs-number">8</span> ++<span class="hljs-number">1</span>;
        <span class="hljs-keyword">if</span> F_t = <span class="hljs-number">1</span> <span class="hljs-keyword">then</span>
            <span class="hljs-keyword">for</span> p = <span class="hljs-number">1</span> <span class="hljs-keyword">to</span> <span class="hljs-number">8</span> ++<span class="hljs-number">1</span>;
                <span class="hljs-keyword">if</span> F_p = <span class="hljs-number">1</span> <span class="hljs-keyword">then</span> change(t, p, j);
            <span class="hljs-keyword">next</span> p
        <span class="hljs-keyword">next</span> t;
<span class="hljs-keyword">next</span> j

change(t, p, j)
    switch (t);
    <span class="hljs-keyword">case</span>
        (t = <span class="hljs-number">1</span>) : b_(j,p) = b_(j,p) + <span class="hljs-number">1</span>;
        (t = <span class="hljs-number">2</span>) : b_(j,p) = b_(j,p) - <span class="hljs-number">1</span>;
        (t = <span class="hljs-number">3</span>) : a_(j,p) = a_(j,p) + <span class="hljs-number">1</span>;
        (t = <span class="hljs-number">4</span>) : a_(j,p) = a_(j,p) + <span class="hljs-number">1</span>;
        (t = <span class="hljs-number">5</span>) : W_(intervalH(j),p) = W_(intervalH(j),p) + <span class="hljs-number">1</span> of highest interval;
        (t = <span class="hljs-number">6</span>) : W_(intervalH(j),p) = W_(intervalH(j),p) - <span class="hljs-number">1</span> of highest interval;
        (t = <span class="hljs-number">7</span>) : W_(intervalL(j),p) = W_(intervalL(j),p) + <span class="hljs-number">1</span> of lowest interval;
        (t = <span class="hljs-number">8</span>) : W_(intervalL(j),p) = W_(intervalL(j),p) - <span class="hljs-number">1</span> of lowest interval;
    break
return
</pre><p>Note: I was pleasantly surprised that the code snippet function recognize my pseudo code as VBscript. I was just throwing things together, who knew?</p><p>Edit: Updated the code to reflect the use of functions that can determine the higher and lower intervals.</p><p>Edit: Updated the code to temporarily deactivate the neurons while they read their input of weights. This will make sure they they will only active when their intervals are triggered and not have to go through the process of flipping their status for each individual weight check. Even if the neuron was active before and is later switched off, the interval will still trigger it back to its active state because it is checking the active status of neurons in the preceding layer. So, as long as it was active before, it will still go back to its active state so long as nothing has changed that would cause it to deactivate (all of the intervals fail to trigger). <br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5681/log/17735-a-picture-is-worth-a-thousand-code-lines">A picture is worth a thousand code lines...</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5681/log/17735#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17735"><p>Well, found a picture to help give a visual. It was initially a .svg file but I was still able to switch it to a .png file for posting. And in keeping with proper manners, the relevant info on the picture is as follows:</p><p>"<a href="&lt;a href="><a href="http://commons.wikimedia.org/wiki/File" target="_blank">http://commons.wikimedia.org/wiki/File</a></a>:Colored_neural_network.svg#/media/File:Colored_neural_network.svg"&gt;Colored neural network" by <a href="//commons.wikimedia.org/wiki/User_talk:Glosser.ca" title="User talk:Glosser.ca">Glosser.ca</a> - <span class="int-own-work" lang="en">Own work</span>, Derivative of <a href="//commons.wikimedia.org/wiki/File:Artificial_neural_network.svg" title="File:Artificial neural network.svg">File:Artificial neural network.svg</a>. Licensed under <a title="Creative Commons Attribution-Share Alike 3.0" href="&lt;a href="><a href="http://creativecommons.org/licenses/by-sa/3.0" target="_blank">http://creativecommons.org/licenses/by-sa/3.0</a></a>"&gt;CC BY-SA 3.0 via <a href="//commons.wikimedia.org/wiki/">Wikimedia Commons</a>.<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5681/log/17785-and-again-and-again-and-again-with-the-loops">And again, and again, and again with the loops...</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5681/log/17785#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17785"><p>So, I've come up with some pseudocode for determining the highest and lowest intervals. It will compare the range of the bounds and will also compare the respective upper and lower bounds to see which is higher or lower. To do this properly, this will be broken into two functions as shown:</p><pre class="hljs vbscript">    intervalH (n)
        h = <span class="hljs-number">0</span>
        <span class="hljs-keyword">for</span> t = <span class="hljs-number">2</span> <span class="hljs-keyword">to</span> <span class="hljs-number">8</span> ++<span class="hljs-number">1</span>;
            <span class="hljs-keyword">if</span> (b_(n,t) - a_(n,t) &gt; b_(n,t-<span class="hljs-number">1</span>) - a_(n,t-<span class="hljs-number">1</span>)) <span class="hljs-keyword">and</span> (a_(n,t) &gt; a_(n,t-<span class="hljs-number">1</span>))
                    <span class="hljs-keyword">then</span> h = t;
                    <span class="hljs-keyword">else</span> h = t - <span class="hljs-number">1</span>;
        <span class="hljs-keyword">next</span> t;
    return h;
    intervalL (n)
        h = <span class="hljs-number">0</span>
        <span class="hljs-keyword">for</span> t = <span class="hljs-number">8</span> <span class="hljs-keyword">to</span> <span class="hljs-number">2</span> --<span class="hljs-number">1</span>;
            <span class="hljs-keyword">if</span> ( b_(n,t-<span class="hljs-number">1</span>) - a_(n,t-<span class="hljs-number">1</span>) &lt; b_(n,t) - a_(n,t))  <span class="hljs-keyword">and</span> ( b_(n,t-<span class="hljs-number">1</span>) &lt; b_(n,t));
                    <span class="hljs-keyword">then</span> h = t - <span class="hljs-number">1</span>;
                    <span class="hljs-keyword">else</span> h = t ;
        <span class="hljs-keyword">next</span> t;
    return h;
</pre>
<p>With so many loops, it's no wonder why most designers of neural networks go for the single weight system. As simple as this all seems, I can already tell that the computational time of all of this we definitely eat up a lot of processing power just to do one iteration of forward propagation, not to mention what it will take for the many iterations for the network to learn or do anything. This will not discourage me though. I will still press on. As I said before, it is only a model of abstraction that can be, with time, optimized later to overcome such challenges. However, if the first steps are not taken, no one will get anywhere.<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5681/log/17811-so-many-details-so-little-brain-to-made-it-fix">So many details, so little brain to made it fix...</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5681/log/17811#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17811"><p>Made some edits and additions to some of my pseudocode. In the meanwhile, I'm going to start investigating which of the development boards I have that I should use to run the final simulation on. I have a SAM4S Xplained Pro Starter Kit  from Atmel and a Stellaris LaunchPad LM4F120 Evaluation Kit from TI. Although both have Cortex-M4 based MCU, the SAM4S kit has a higher clock speed and more memory to work with. It even comes with a memory card reader built into the development board. I might try to take advantage of that somehow. We'll see. If I can make it so that the amount of neurons and layers can be easily expanded, this would truly be something else. Most of what I could glance at seems to have trouble will memory issues in storing multiple links for each neuron. I don't know, maybe I can fix that. Again, we'll see.</p><p>Note: Thanks to the HackADay for letting me "swipe" the SAM4S at the Disrupt Hackathon. ;) Wish I could contact the Microchip guy who was there. Might have to investigate that too.<br></p></div>
                            </div>
                        </li>
                    
                </ul>

                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'rr5cW65N-NqISxFMVEQ000HuXOZsRLOHrOj4';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>