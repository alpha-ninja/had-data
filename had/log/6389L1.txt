<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; The Rythm Composter &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F6389%2Flogs%3Fpage%3D1">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/6389-the-rythm-composter">The Rythm Composter</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">Circuit Bending an old Roland Drum Machine using an Arduino Mega some cross-point arrays some schmitt triggers and a touch-screen</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/48212-alpha-charlie" title="Visit Profile">Alpha Charlie</a><span>&bull;</span>
                
                2 months ago<span>&bull;</span><a href="/project/6389#discussion-list" title="See Comments">2 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/6389-the-rythm-composter">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/6389/logs/sort/newest">Newest</option>
                    <option value="/project/6389/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/6389/log/19806-breadboard-demo">BreadBoard Demo</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/6389/log/19806#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19806"><p>This video shows the patch-a-tron right after I made it, hooked up to a Roland TR-505 (I didn't know whether it would work and didn't want to waste my precious TR-626.)</p><p><iframe width="500" height="281" src="//www.youtube.com/embed/JZRpz0zVbfM" frameborder="0" allowfullscreen=""></iframe><br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6389/log/19809-tr-626-patch-a-tron-demo">TR-626 patch-a-tron demo</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/6389/log/19809#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19809"><p>This video shows the Patch-a-tron after it's marraige to the Roland TR-626 but prior to the pitch clock mod.</p><p><iframe width="500" height="281" src="//www.youtube.com/embed/f6S4W0K_GYc" frameborder="0" allowfullscreen=""></iframe><br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6389/log/19810-patch-a-tron-walkthrough">Patch-a-Tron Walkthrough</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/6389/log/19810#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19810"><p>This video shows a walkthrough of how the patch-a-tron UI works.</p><p><iframe width="500" height="281" src="//www.youtube.com/embed/2xLwfLEIbX4" frameborder="0" allowfullscreen=""></iframe><br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6389/log/19893-switch-array-stack">Switch Array Stack</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/6389/log/19893#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19893"><p>The heart of the Patch-a-Tron is the stack of 3 CD22M3494 crosspoint array ICs. Together they control the 384 analog switches that turn our bends on and off.  The IC uses 7 pins for addressing, 1 for switch data and 1 as a strobe (or clock) to time things. All of these pins and also the 8 x-axis pins and the positive and negative power pins are all connected in parallel for all of the ICs. Since the ICs share over half of their pins, it made sense to me to <em>stack them vertically</em> and run all of their common pins through a 'bus' of parallel wires.I used Busboard 'zig-zag' trace prototyping board (part no. BB02)  for the stack and cut it to size because the zig-zag trace pattern offered the easiest routing.</p><p><img src="https://cdn.hackaday.io/images/7683411435048145731.png"></p><p> Below is the board layout and wiring diagram for the switch stack. The entire circuit consists of 3 boards layed out as below each with it's own CD22M3494, all stacked together vertically. (Sorry there's no schematic yet. I literally designed the circuit in 3 dimensions in my head, then just constructed it. It has never been drawn out fully in 2 dimensions...)</p><p><img src="https://cdn.hackaday.io/images/18291435047390246.jpg"></p><p>And below you can see the finished stack of 384 analog switches! (the wires all go to the Arduino, the 16 switch connections for each IC are the male dupont headers on each layer). </p><p><img src="https://cdn.hackaday.io/images/2496711435047791525.jpg"></p><p>Below is a schematic of the interface between the Arduino and the 3x CD22M3494 ICs. One thing that is worth ntoing about the CD22M3494 is that is has a separate logic ground than signal ground. The <strong>Vss</strong> pin is for the logic that controls the switches. The analog ground for the signals is the <strong>Vee</strong> pin. This is a nice feature escpecially if you're mixing different systems together. But since I already tied the Arduino into the Roland power supply, I ended up putting an SPST switch between <strong>Vss</strong> amd <strong>Vee</strong> so that I can selectively tie them together or not (whichever has the least noise).</p><p><img src="https://cdn.hackaday.io/images/5986951435117563154.jpg"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6389/log/19993-pitch-clock-mod">Pitch Clock Mod</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/6389/log/19993#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19993"><p>Here is the basic circuit I used to create my own pitch clocks for 4 of the output channels.  The <a href="http://www.mouser.com/ds/2/405/cd40106b-407422.pdf">TI CD40106</a> runs the 4 oscillators. Each has it's own potentiometer. The capacitor for each oscillator should be adjusted to taste for the channel you are modding so that the pitch variation is noticeable and pleasing to the ear when the potentiometer is turned... </p><p>(Note - In the drawing below,  the switch numbers are transposed on the right hand lower side...  3 <em>should </em>be above 4. Ooops!)</p><p><img src="https://cdn.hackaday.io/images/9624231435286668420.jpg"></p><p>The four oscillator signals run to the NO connections of the 4 switches in the <a href="http://www.mouser.com/ds/2/256/MAX394-70827.pdf">Max394</a>.  The NC connections of each switch are connected to the actual Roland TR-626 pitch clocks signals on the gate array(IC 13). The COM are connected to the clock inputs on IC14 of the TR-626.    This allows me to choose between the Roland clocks and my pitch modded clocks with the four spdt switches. <br></p><p>* The value of the resistor connected to each LED will depend upon the diode forward voltage and current for the LED. 150-330 ohms is typical.  (there's a calculator you can use <a href="http://led.linear1.org/1led.wiz">here</a> if you know the specs for your LEDs.)</p><p>** The value of the capacitors for each oscillator will be dependent upon the clock signals you are replacing and how far you wish to bend them...  the frequency out will be around <strong>1/1.2*RC</strong> (just count the 500K pot and the 1k. Ignore the diode/1k leg in the freq calculation. It's just there to keep the pulse width low on the generated signal. The Roland clock is not on a 50% duty cycle. It generates fixed width pulses...) For the caps themselves I use polyester or mylar. I started with <strong>0.1uF</strong> and adjusted from there by ear. USe a larger capacitor for a lower pitch, a smaller capacitor for a higher pitch. To limit the highest pitch reachable on the high end, you can increase the 1k resistor connected to the pot to 3.3k or 4.7k. The pots are 500k, If you can find them use <strong>reverse logarithmic</strong> pots. Linear will work in a pinch but adjusts the frequency linearly, which is not how humans perceive pitch. </p><p>If you decide to try this mod- <strong>Be Careful!</strong> <em>Installing </em>this circuit in the Roland is a nightmare. It was 100%<em> the most difficult part of the entire project</em>. Both IC13 and IC14 are SMT chips and doing this mod means either desoldering one of them or cutting traces on the board. Neither option is easy. Below is a video showing the mod. You can see what I mean.</p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/sA46_QxmvSE" frameborder="0" allowfullscreen=""></iframe><p><strong>Also- </strong>unlike the Patch-a-tron which requires minimum tools to construct,  an oscilloscope is almost <em>required </em>to troubleshoot this mod if anything goes wrong.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6389/log/20275-patch-a-tron-midi-implementation">Patch-a-Tron MIDI Implementation</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/6389/log/20275#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20275"><p>Included in the Patch-a-Tron hardware is a <strong>MIDI</strong> implementation that allows the circuit bends in the Patch-A-Tron to be controlled remotely. The hardware interface consists of the standard MIDI DIN connector fed to the Arduino UART through by an opto-isolator,<em> per the MIDI specification</em>. (details at - <a href="http://www.midi.org/techspecs/electrispec.php">http://www.midi.org/techspecs/electrispec.php</a>)</p><p> <img src="https://cdn.hackaday.io/images/3219381435706556097.jpg"><span class="redactor-invisible-space"></span></p><p>The schematic below shows how to connect MIDI hardware to the Arduino. The arduino should be connected via one of its hardware serial ports. <span class="redactor-invisible-space"> [<strong>Patch-a-Tron</strong> uses port 2 by default on the Mega, pins 16(TX) and 17(RX)]<br></span></p><p><img src="http://www.midi.org/images/midihw.gif"><br></p><p> The software currently only implements the <strong>Control Change</strong> and <strong>Program Change</strong>  MIDI events with the idea being that the same sequencer could control both the Roland and the Patch-a-Tron and get <strong>repeatable - predictable - sequencable</strong> circuit bends that go with the sequenced rythm. <strong>Control Change</strong> allows the user to choose memory banks (A-D). <strong>Program Change</strong> selects pitch bends to activate. Banks A-C only save 128 bends per bank(0-127). Each 'bend' consists of one 'bus' of of max 48 switches.  Bank D saves only 16 slots(0-15). But each slot contains the configuration for all 384 switches. </p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6389/log/21423-patch-a-tron-ra8875-video-controller">Patch-A-Tron RA8875 Video Controller</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/6389/log/21423#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21423"><p>The Patch-A-Tron uses the RA8875 video controller board from <a href="https://www.adafruit.com/products/1590" target="_blank">Adafruit</a>. This controller works via SPI and handles all of the low-level rendering as well as the touchscreen control. This makes it really nice for Arduino. Connection is via the 6 pin SPI connector in the middle of the Mega. (+Vin, GND, MISO, MOSI SCK, RST)  with pin 11 on the Arduino being used for the INT and pin 12 for the CS on the RA8875.<br></p><p><img src="https://cdn.hackaday.io/images/9133351437700302796.jpg"></p>In the photo above the blue and green wires go to pin 11, and 12 on the Arduino the rest connect to the 6 pin SPI connector in the center of the Mega. Both the video out and touchscreen in are SPI, so wiring it is extremely simple. (Note also that there is a layer of Kaptan tape and another layer of 2 sided tape insulating and affixing the RA8875 to the aluminum plate. Which is not really visible in the photo. Without it the RA8875 <em>would </em>short out on the faceplate.)<p>The Patch-A-Tron Arduino Sketch uses the RA8875 library available here - </p><p><a href="https://github.com/adafruit/Adafruit_RA8875">https://github.com/adafruit/Adafruit_RA8875</a>. </p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6389/log/21425-buttons-switches-and-lights">Buttons, Switches and Lights</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/6389/log/21425#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21425"><p>In addition to the touchscreen, the Patch-A-Tron has 2 LEDs, 9 momentary pushbuttons and a 16 key keypad for I/O. The 16 key keypad allows the user to save and recall configurations. The LEDs provide feedback on the keypad input. 8 of the 9 SPST buttons are used to select/mute/unmute the 8 channels of the Patch-A-Tron. The remaining button is a master reset that disables all bends and returns the configuration to &apos;stock&apos;. It is the red button on the upper left corner of the TR-626. </p><p>Connections are:</p><ul><li>16 key keypad - Rows pins 3, 4, 5, 6; columns pins 7, 8, 9, 10</li><li>8 &apos;Mute/Select&apos; buttons - Pins 38 ,39, 40, 41, 42, 43 ,44, 45</li><li>RESET button - Pin 37</li><li>Programming LEDs - Pins 22, 23</li></ul><p>The Roland TR-626 has 8 SPST switches and 8 SPDT On-Off-(ON momentary) switches on the right upper corner which are connected to dedicated circuit bends. (the Momentary switches are the top row and are connected to the RAM of the TR-626**.) The four knobs and switches in the middle &apos;pitch bend&apos; four of the Roland&apos;s output channels. With each switch turning it&apos;s respective pitch bend on or off. </p><p>**The RAM bends <em>sound </em>really cool but <strong>must </strong>be turned off when not in use as they can make the unit unstable.</p></div>
                            </div>
                        </li>
                    
                </ul>

                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'tnWsbpTP-yMizsJe6rBKpBwxBWBLKU2wsBRs';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>