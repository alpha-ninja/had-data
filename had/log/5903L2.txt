<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; Sonar for the visually impaired &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F5903%2Flogs%3Fpage%3D2">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/5903-sonar-for-the-visually-impaired">Sonar for the visually impaired</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">This is a low cost portable Ultrasonic range finder and sonar device to help a visually impaired person navigate indoors.</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/10708-kc-lee" title="Visit Profile">K.C. Lee</a><span>&bull;</span>
                
                3 months ago<span>&bull;</span><a href="/project/5903#discussion-list" title="See Comments">4 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/5903-sonar-for-the-visually-impaired">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/5903/logs/sort/newest">Newest</option>
                    <option value="/project/5903/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/5903/log/19523-similar-projectsproducts">Similar Projects/Products</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/5903/log/19523#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19523"><p>This is a reorganization of the documentation as I needed a centralize page similar projects/idea that I came across and not to clutter up the project details.</p><hr><p>I found a similar project: <a href="https://hackaday.io/project/2372-pathfinder-haptic-navigation">Pathfinder - Haptic Navigation</a> that is much further along and his results are encouraging. <br></p><hr><p>Looks like I am on the right track as I came across this today.  My device should be able to implement the following.<br><a href="http://www.popsci.com/ultrasonic-helmet-lets-anyone-see-bat">http://www.popsci.com/ultrasonic-helmet-lets-anyone-see-bat</a></p><p><span class="redactor-invisible-space"><img src="http://www.popsci.com/sites/popsci.com/files/styles/medium_1x_/public/soniceye_closeup.jpg?itok=PorXRiFy" width="391" height="221" style="width: 391px; height: 221px;">&gt;When the echoes rebound off objects, the sound waves travel into two bat-shaped ears -- called pinna -- that rest on either side of the helmet and help gauge the direction of the echo. Molded from clay, each pinna has an ultrasonic microphone embedded at the center. A computer program records the echoes and instantly slows them by a factor of 20.</span></p><p><span class="redactor-invisible-space">&gt;Dropping the pace and the pitch makes the imperceptible ultrasonic echoes audible to the human ear. Sonic Eye wearers can then use the echo delay to judge distance or mentally track their surroundings (see video below).</span></p><p><span class="redactor-invisible-space"><iframe width="500" height="281" src="//www.youtube.com/embed/md-VkLDwYzc" frameborder="0" allowfullscreen=""></iframe></span></p><br><a href="http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=7012073">http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=7012073</a><p>&gt;Results: Naive subjects were able to make laterality and distance judgments, suggesting that the echoes provide innately useful information without prior training. Naive subjects were generally unable to make elevation judgments from recorded echoes. However, trained subjects demonstrated an ability to judge elevation as well. Conclusion: This suggests that the device can be used effectively to examine the environment and that the human auditory system can rapidly adapt to these artificial echolocation cues.</p><hr><p><strong><a href="http://ambutech.com/iglasses">http://ambutech.com/iglasses</a></strong></p><p><strong><br></strong><img src="http://ambutech.com/i/image-01.jpg" width="378" height="257" alt="" style="width: 378px; height: 257px; float: left; margin: 0px 10px 10px 0px;"></p><p><strong><img src="http://ambutech.com/i/ultrasonic-diagram.jpg" width="214" height="225" style="width: 214px; height: 225px;"><span class="redactor-invisible-space"><br></span></strong></p>Ultrasonic Object Detection<p>The iGlasses&#x2122; Ultrasonic Mobility Aid is a head-mounted device
 which enables more informed, confident, and efficient pedestrian 
travel. Objects in your path are detected by the ultrasonic sensors and 
communicated via gentle vibrations. As obstacles get nearer the 
frequency of the vibration will increase. The device is intended as a 
secondary mobility device to complement the traditional long cane or 
guide dog.</p><ul><li>Detection Range: 0-3 meters  <a href="http://ambutech.com/resources/pdf/iGlasses_detection_map.pdf">(detection map)</a></li><li>Weight &amp; Dimensions: 75 grams 6.75&quot; x 5.75&quot; x 2&quot;</li><li>$96.10</li></ul><p><span class="redactor-invisible-space"></span></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5903/log/19728-pump-up-the-volume">Pump up the volume</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/5903/log/19728#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19728"><p>I&apos;ll share all my notes and my thoughts for the audio aspect of my design here.</p><p><img src="https://cdn.hackaday.io/images/9915731434681986550.png" alt="" style="margin: auto; display: block;"></p><p>This is the frequency response curve of the <a href="http://www.knowles.com" target="_blank">Knowles</a> <a href="http://www.knowles.com/eng/content/download/3213/38271/version/4/file/2403+260+00001+Donau.pdf" target="_blank">2403-260-00001</a><a href="http://www.knowles.com/eng/content/download/3213/38271/version/4/file/2403+260+00001+Donau.pdf"></a>.  It is  11 x 15 x 3.5 mm rectangular speaker<span class="redactor-invisible-space">.  From the frequency response curve, it is useful for part of the <a href="https://en.wikipedia.org/wiki/Voice_frequency">voice frequency</a> (300 and 3000 Hz<span class="redactor-invisible-space">). I would expect similar sized speakers would have similar curves. To generate any volume below 800Hz would require a much larger speaker and a much higher power consumption due to the displacement.</span></span></p>According to wiki: <a href="https://en.wikipedia.org/wiki/Psychoacoustic_model" target="_blank">Psychoacoustic model</a> <ul><ul><li>Frequency resolution of the ear is 3.6 Hz within the octave of 1000 &#x2013; 2000 Hz.</li><li><span></span>Typically, the ear shows a peak of sensitivity (i.e., its lowest ATH) between 1 - 5 kHz, though the threshold changes with age, with older ears showing decreased sensitivity above 2 kHz.</li></ul></ul><p><img src="https://cdn.hackaday.io/images/6941611434788479910.png" width="479" height="313" alt="" style="width: 479px; height: 313px; margin: auto; display: block;"></p><p>- Speaker THD is 1% or less at 2kHz<br></p><p>1kHz to 2kHz is the sweet spot for raw sonar playback for sensitivity and frequency resolution.  The ultrasonic helmet slows down it ultrasonic samples by 20 times.  So if I were to do the same for my device, the 40kHz signals would be playback in the 2kHz spot. </p><p> The echo frequency from a moving object shifts due to the <a href="https://en.wikipedia.org/wiki/Doppler_effect" target="_blank">Doppler effects</a> and with training, someone might be able to extract that information from the tone change.</p><p>The human frequency resolution is +/- 3.6Hz at 2kHz (sample is slow down by a factor of 20), so it should be able to detect +/- 72Hz at 40kHz (original speed).<br></p><p><img src="https://cdn.hackaday.io/images/3121171434748460674.png" alt="" style="margin: auto; display: block;"></p><p>Calculator from here: <a href="http://hyperphysics.phy-astr.gsu.edu/hbase/sound/dopp.html">http://hyperphysics.phy-astr.gsu.edu/hbase/sound/dopp.html</a><br>FYI: <a href="https://en.wikipedia.org/wiki/Preferred_walking_speed" target="_blank">walking speed</a> is about 1.23 m/s (4.4 km/h; 2.8 mph)<span class="redactor-invisible-space"></span></p><p>There is probably around 5kHz bandwidth depending on the ultrasonic transducer, bandpass filter design etc.  That would limit the top speed to 20m/s (45mph).</p><hr><p>One of the questions I have on my mind is the shortest burst of sound recognizable as a tone and not a click.  The tone detection is needed for the brains to extract the frequency shift for doppler effects.</p><p>Haven&apos;t find anything solid, but seems like I would need something around 100ms or more.  That length/20 is the burst of the ultrasonic.</p><p>References: <br><a href="http://www.ncbi.nlm.nih.gov/pubmed/8936387">Neural networks simulating the frequency discrimination of hearing for non-stationary short tone stimuli.</a></p><p style="margin-left: 20px;">This paper addresses the question of frequency discrimination of hearing<br> for non-stationary (short) tone stimuli (duration &lt; or = 125 ms). <br>Shortening of the stimulus duration leads to widening of the frequency <br>spectrum of the tone.<br></p><p><span class="redactor-invisible-space">For pulse duration less than 200ms, sensitivity of the signal is dependent on the pulse duration.  <br>Graph reference from <a href="http://sound.stackexchange.com/questions/28163/whats-the-shortest-sound-perceptible-to-the-human-ear">stackexchange</a><span class="redactor-invisible-space"><br></span></span></p><p><img src="https://cdn.hackaday.io/images/7661331434835778939.jpg"></p><p><a href="http://music.stackexchange.com/questions/31981/whats-the-shortest-that-a-note-can-be-and-still-have-a-recognisable-pitch">http://music.stackexchange.com/questions/31981/whats-the-shortest-that-a-note-can-be-and-still-have-a-recognisable-pitch</a></p><blockquote>   How long must a tone be heard in order to have an identifiable 
pitch? Early experiments by Savart (1830) indicated that a sense of 
pitch develops after only two cycles. Very brief tones are described as 
&quot;clicks,&quot; but as the tones lengthen, the clicks take on a sense of pitch
 which increases upon further lengthening.<br>
  
  It has been suggested that the dependence of pitch salience on duration follows; sort of &quot;acoustic uncertainty principle&quot; ,<br>
  
  &#x394;f &#x394;t = K,<br>
  
  where &#x394;f is the uncertainty in frequency and &#x394;t is the duration of a
 tone burst. K which can be as short as 0.1 (Majernik and Kaluzny, 
1979), appears to depend upon intensity and amplitude envelope (Ronken, 
1971). The actual pitch appears to have little or no dependence upon 
duration (Doughty and Garner, 1948; Rossing and Houtsma 1986). In this 
demonstration, we present tones of 300, 1000, and 3000 Hz in bursts of 
1, 2 4, 8, 16, 32, 64, and 128 periods. How many periods are necessary 
to establish a sens of pitch?<br><a href="http://www.feilding.net/sfuad/musi3012-01/demos/audio/413_pitch_salience_tone_duration.htm">http://www.feilding.net/sfuad/musi3012-01/demos/audio/413_pitch_salience_tone_duration.htm</a></blockquote><hr><p>For haptic feedback:</p><p>&quot;Study on Perception of Vibration Phythm&quot;, Daiji Kobayashi, Chitose Institute of Science and Technology, Hokkaido, Japan. d-kobaya@photon.chitose.ac.jp</p><p>published in &quot;Human Interface and the Management of Information. Information and ..., Part 1&quot; edited by Sakae Yamamoto</p><p><img src="https://cdn.hackaday.io/images/8076321434933751248.png"></p><hr><p>I have moved up to the highest memory model of the MKL16 series as I&apos;ll need as much onchip RAM (32kB max) as I can for the recording.  An external SPI RAM might also be the way to supplement the onchip SRAM memory for sampling. The memory can be accessed sequentially with DMA.   I made some room for a footprint in the prototype PCB.<span class="redactor-invisible-space"></span></p><p>The prices aren&apos;t too bad - Microchip <a href="http://www.microchip.com/wwwproducts/Devices.aspx?product=23LC512">23LC512-I/ST</a> : 64kB SPI RAM is $2.50 CAD. <br></p><p><span></span></p><p><img src="https://cdn.hackaday.io/images/6447061434757802147.png" width="171" height="198" style="width: 171px; height: 198px;"></p><hr><p>Bought 3 x 2 of these speakers from <a href="http://www.aliexpress.com/item/2pcs-Earpiece-Speaker-Earphone-Ear-Piece-Speak-Replacement-Part-For-iphone-4-4G-wholesale-Dropshipping/949162165.html">here</a> at $0.98 a pair with &quot;Free shipping&quot; via registered mail.<strong></strong></p><p><img src="https://cdn.hackaday.io/images/3515561432355200190.jpg"></p><p><img src="https://cdn.hackaday.io/images/2415171432355346625.jpg"></p><dt>Model Number: AX032 Earpiece Speaker for iPhone 4/4G.</dt><dt></dt><ul><li>Item size: 23*9*4mm</li><li>Net weight: 1g</li></ul><p>Chances are that these requires some mechanical mounting. A possible way is to have the membrane side protrude through a slot on the PCB and sandwiching the back side contacts with a PCB daughter card.</p><hr><p>As I scrolled down the Feed, I saw the Project AMIKETO with the red circles around that say &quot;Speakers&quot;. I guess I should have checked on Digikey for that! Having a datasheet to work with take some guess work out of the mechanical design.</p><p><a href="https://cdn.hackaday.io/images/9961121434677796943.jpg" target="_blank"><img src="https://cdn.hackaday.io/images/9961121434677796943.jpg"></a></p><p>The speaker has spring loaded contacts and will probably be one of the parts that needs to be replaced during the life time of the device.  For the prototype design, I&apos;ll need to come up with a design that sandwich the speaker between 2 PCB with a grill.  Looks like I&apos;ll need something beyond a headphone amplifier (class D) for driving the speakers and need some volume control.</p><p><img src="https://cdn.hackaday.io/images/7880651434789108430.jpg"></p><hr><p>Someone must have read this... The speakers from China magically show up today as regular parcel.  The tracking shows that it arrived at at Vancouver 20 odds days ago and then it went dark.  Normally the packages became Canada Post&apos;s problem around the time it leaves on a flight from China and doesn&apos;t take 20 days or so from the west coast.</p><p><img src="https://cdn.hackaday.io/images/3153481434993133816.jpg"></p><p>(1/4W Resistor for size)<br>These speakers have a gasket already and they are even smaller 10mm x 7mm x 3.1mm (0.392&quot; x 0.278&quot; x0.125&quot;) vs 11mm x 15mm x 3.5mm of the one I looked at on digikey.  Smaller speakers means that the resonant frequency will be higher.</p><p>Even though the resonant frequency is a few times the voice frequency, I can actually watch and understand what they say on TV because of the higher harmonics. </p><p>  FYI voice frequency from <a href="https://en.wikipedia.org/wiki/Voice_frequency">wiki</a>: Adult male: from 85 to 180 Hz, Adult female: 165 to 255 Hz</p><p>The speaker is very inefficient.  You can feel it vibrates, but because of the small amount of air displacement, they are too quiet.  They are really designed for mobile phone where the speaker needed to be directly next to the ear along with a resonant cavity.  I&apos;ll need to play with bigger sized speakers.  </p><p>I really don&apos;t to require the user to wear headphones.  :(</p><hr><p><img src="https://cdn.hackaday.io/images/2001901433955192898.png" alt=""></p><p>3W Class D stereo amplifiers for a different project that I ordered a month ago finally arrived. Probably going to use it to test out the iPhone speakers on the bench as they don&apos;t exactly comes with datasheet. Also, the volume is not going to be as loud on a bare board than inside a properly design enclosure.</p><p>The part is from Diodes Inc. <a href="http://www.diodes.com/datasheets/PAM8403.pdf%20%E2%80%8E">PAM8403 3W Class D Stereo Amplifier</a>   I replaced the cap on the lower right corner between L/R with 2uF to eliminate power on pop noise. Mouser seems to be the only retail place that sells this chip for $0.90.</p><hr><p>Found a 2.5cm (~1&quot;) dia. speaker from a toy.  Even though it is a cheap one with ceramic magnet, it works a lot better.  Now at least I know a size that would work without a proper acoustic enclosure.</p><hr><p><img src="https://cdn.hackaday.io/images/4182591437361307889.png"></p><p style="margin-left: 20px;">I am looking at oval/rectangular shaped speakers as they have resonant frequencies peaks corresponding to their two axis. The interactions between the two peaks allows for a wider frequency range with the longer axis for the lower frequencies.  I sorted the speakers by sound pressure level.</p><p><img src="https://cdn.hackaday.io/images/727771437363438761.png"></p><p>Here is my preliminary speaker mounting location.  The speaker is at 22.5 degrees and it sort of pointed at the outer ear like a periscope.  This is what I have to make do until I have the basic functionality and ready to tackle a case/acoustic design.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5903/log/19819-its-all-about-the-pentiums">It&#39;s all about the Pentiums</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/5903/log/19819#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19819"><p>This section of the project is all about MCU, RTOS and firmware.  </p><ul><li>This project is all about power management and good battery life. Efficient coding helps a lot in reducing power.</li><li>Using Freescale MKL series Cortex-M0+ Based Microcontroller optimized for low power applications.  VLPR (Very Low Power Run) mode computer operation at a reduced clock speed of 4MHz uses very little power (732 μA).  </li><li><ul><li>Certain libraries/frameworks that uses busy polling loops have no place here.</li><li>port <a href="https://github.com/crteensy/DmaSpi">DMA-SPI library</a>.<span class="redactor-invisible-space"> DMA can reduce CPU load during data transfer.</span></li><li><span class="redactor-invisible-space">make use of fixed point math (vs floating point math) to reduce computational complexity requiring less cycles. </span><span></span>Distance can easily be fit inside 16-bit integer operations. e.g.  0.0000m - 6.5535m (~5m is the upper limits of the range finder)</li></ul></li><li>port <a href="http://www.chibios.org/dokuwiki/doku.php">ChibiOS</a> to the MKL16 from the MKL25 target.<ul><li>New in 3.0 is the <a href="https://en.wikipedia.org/wiki/Tickless_kernel">Tick-less kernel</a> mode for low power devices.  </li><li>ChibiOS/RT and ChibiOS/<span class="redactor-invisible-space">NIL share most of their API, so migration to/from the light weight version (NIL) is possible.</span><span></span></li></ul></li></ul><p>Memory Map</p><p><img src="https://cdn.hackaday.io/images/4275541434916848966.png" width="296" height="259" alt="" style="width: 296px; height: 259px;"></p><p>For a device with 16kB of RAM<br>SRAM_L: 0x1FFF_F000 - 0x1FFF_FFFF<br>SRAM_U: 0x2000_0000 - 0x2000_3000<br></p><p>For a device with 32kB of RAM<br>SRAM_L: 0x1FFF_E000 - 0x1FFF_FFFF<br>SRAM_U: 0x2000_0000 - 0x2000_6000</p><p>Note: SRAM contents are retained in VLLS3, but not In VLLSi, VLLS0.<br></p><p>Clock</p><p>External 32.768kHz crystal in Low-Frequency, Low-Power mode. as it has the lowest power consumption.  The crystal load capacitance is 12.5pF. Assuming the stray capacitance of 5pF,  additional CL1, CL2 of 10pF is needed.  This can be programmed in the OSCx_CR register.</p><p>The external 32.768kHz is used as the clock reference for the <a href="https://en.wikipedia.org/wiki/Frequency-locked_loop">FLL</a>.  <a href="https://en.wikipedia.org/wiki/Digitally_controlled_oscillator">DCO</a> frequency is set to 640x at 20.97152MHz (low range) For my application, FLL accuracy is sufficient.</p><hr><p>The Teensy LC has arrived. Canada Post + custom (out for processing part) only took 2 days from arriving in Canada to my mail box. Hasn't see it this fast for ages. It was sent USPS First Class and delivered as Canada Post Xpresspost (TM).<br></p><p><img src="https://cdn.hackaday.io/images/4088681433269067836.JPG" alt="" width="210" height="226" style="width: 210px; height: 226px;"></p><hr><p><img src="https://cdn.hackaday.io/images/2239561433272044097.PNG" alt=""></p><p>Shame that first thing I have to do is to disable the smaller MKL02 chip that is providing the bootloader function. It is an ARM with 32kB FLASH housing Paul's bootloader code that is copied to the MKL26. It is in the way of using SWD debugging. I would rather not destroy the board as I have something else in mind once I get my proto board up and running.</p><p>Pin 15 is the reset pin. I can probably put the chip in reset by pulling it low and its I/O pins in tristate. I can then access the SWD on the MKL26. The left side of that cap between the micro USB and the MKL02 is a ground. I'll also need to replace the 16MHz crystal with a 32.768kHz for my design. That would leave 2 pads that could be used for the breakout of the SWD connection.</p><p>Update: Asserting the reset won't work if the firmware disable the reset on its I/O. According to my multimeter measurements, it seems to be internal pull up/pull downs internal resistance of around 40k ohms on the SWD lines. So may be those lines can be connected to a debugger anyway.</p><p>That has to be put on hold a bit until I get my hot air tool situation sorted out.</p><hr><p>Desoldered the Crystal off the Teensy LC with my new hot air toy.  I taped up the small 0402 and other small parts around it with Kapton tape.  It takes 45 seconds at 275C - not even challenging.</p><p><img src="https://cdn.hackaday.io/images/3881421435285456607.jpg">I was hoping that the other two corners were "no connects" so I could use them as anchors for the SWD debugger, but Paul has grounded them.   Could have used test pads on the SWD pins too.  щ(ºДºщ)  </p><p>Really don't want to pull the small QFN just to bridge its SWD to the MKL26 SWD. (I can access it via test pads near label 1  &amp; 2 on the back side.)  I have done half a dozen of QFN transplants already with my old butane hot air tool, so that's a no brainer with my new toy.</p><p>I don't think my grounding the Reset pin the bootstrap ARM chip would do anything, but too lazy to remove it.</p><hr><p><img src="https://cdn.hackaday.io/images/9254421435329040131.jpg" width="430" height="226" style="width: 430px; height: 226px;"></p><p>Notice how the spacing of the diagonal pins sort of lines up with the perfboard.  The perfboard has plated through holes and you can make castellated pads by cutting it along the holes.</p><img src="https://cdn.hackaday.io/images/9689641435329477903.jpg" width="448" height="317" style="width: 448px; height: 317px;"><p>The battle scars on that old heatsink.  The perf boards just fits between rows of heatsink fins.  Tinned the "castellated pads" and get it ready for hot air reflow.</p><p><img src="https://cdn.hackaday.io/images/3526391435329605505.jpg" width="427" height="277" style="width: 427px; height: 277px;"></p><p>perf board reflowed onto the ground pads on the crystal footprint.  Solder magnetic wires to the SWD pins (7, 8 on the MKL02)</p><p><img src="https://cdn.hackaday.io/images/5401831435329854361.jpg" width="564" height="283" style="width: 564px; height: 283px;"></p><p>I insulated the 32kHz crystal with kapton tape, soldered it to the pads, solder in the Vcc to the small decoupling cap.  </p><p><img src="https://cdn.hackaday.io/images/7018721435331805144.jpg" width="467" height="344" style="width: 467px; height: 344px;"></p><p>I use first generation old dollar store headphone cables (when they still use litz wires) to connect the SWD to a 0.1" connector.  The litz wires as well as the twisted cable are paired like this: SWD_CLK/GND, SWD_IO/VCC, so the signals have a power rail as return path.</p><p><img src="https://cdn.hackaday.io/images/829311435331247310.jpg" width="500" height="376" style="width: 500px; height: 376px;"></p><p>It works.</p><p><img src="https://cdn.hackaday.io/images/5182921435331696052.jpg"></p><hr><p>The ARM peripherals can be assigned to certain specific combinations of pin locations. It takes a bit of time to take advantage of this in the layout so that the peripherals are facing the right directions. and that all the needed peripherals are not block one another.</p><ul><li>Power management - I/O assigned and most of them routed.</li><li>Pins available for an expansion connector - SPI2 + UART. e.g. a <a href="https://cdn.hackaday.io/images/7289431433968263661.JPG">graphic LCD</a> for test/debugging, additional sensors etc.</li><li>Found I2C temperature sensor/EEPROM combo (<a href="http://www.nxp.com/documents/data_sheet/SE97B.pdf%20%E2%80%8E">SE97B</a>) which is intended for DDR memory market. Temperature sensing is needed for range finder correction while the EEPROM can hold some calibration/preference data.</li></ul><p>I'll need to start working on the firmware side at some point using the Teensy LC for the time being. Most probably I would try to port <a href="http://www.chibios.org/dokuwiki/doku.php">ChibiOS</a> RTOS to the MKL16. There is going to be a bit of <a href="https://hackaday.io/project/1347-fpga-computereval-board/log/6925-firmwareworking-led-blinker">bringup</a>, <a href="https://hackaday.io/project/1347-fpga-computereval-board/log/7511-chibiosrt-hal-drivers">low lever drivers</a> and swearing as usual.</p><p>While I could probably get by with a cooperative multitasking in a big loop, having access to messages, queues would make the code better organized.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5903/log/19927-sensory-overloaded">Sensory overloaded</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/5903/log/19927#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19927"><p>Here are the reference material for the sensors:<br>Thanks to <a href="https://hackaday.io/hacker/76470">Joey Gouly</a> mentioning about the <a href="http://www.freescale.com/webapp/sps/site/prod_summary.jsp?code=FRDM-KL26Z">Freedom board</a>, I found out about Freescale's sensor fusion library in the <a href="http://www.freescale.com/webapp/sps/site/prod_summary.jsp?code=FRDM-KL26Z&amp;fpsp=1&amp;tab=Design_Tools_Tab">download area</a> for the same  <span class="component-content"><a href="http://www.freescale.com/webapp/sps/site/prod_summary.jsp?code=FXOS8700CQ">FXOS8700 accelerometer</a> and KL26.</span></p><ul><ul><li>Accelerometer only (roll, pitch and tilt)</li><li><span></span>Accelerometer plus magnetometer (eCompass)</li><li><span></span>Accelerometer plus gyro (gaming)</li><li><span></span>Accelerometer plus magnetometer plus gyroscope sensors</li><li><span></span>Includes Freescale’s award-winning magnetic compensation software</li></ul></ul><span></span><p><span class="component-content"></span>Probably a good starting point for the library for compensation, eCompass (why not?) and the tilt sensor data for my device - stairs/hole detection. </p><p>Here is some good news.  The code is already open source!</p><p>Description: CodeWarrior template programs for KL25Z, KL26Z, KL46Z, K20D50M and K64F for full sensor fusion release.  FRDM_KL46Z is a reduced eCompass         implementation.<br>Author: FSL<br>License: <a href="http://opensource.org/licenses/BSD-3-Clause">BSD-3-Clause</a></p><p>Note:  The KL26 is similar enough to be used as a development platform for the KL16.  Thus I'll be using the Teensy for the initial development work.  I am trying to port ChibiOS/RT KL25 to the KL16.</p><p>Good to be using supported device this time around.</p><hr><p>I have decided to mount the temperature sensor <a href="http://www.nxp.com/products/interface_and_connectivity/i2c/i2c_temperature_voltage_monitors/SE97BTP.html">SE97BTP</a> onto the ultrasonic transducer daughter trying to thermally isolate it from the body heat.  The thermometer is used for temperature compensate for the change in speed of sound.  The chip is designed for monitoring DDR temperature and comes with 256 bytes of EEPROM (for <a href="https://en.wikipedia.org/wiki/Serial_presence_detect">SPD</a>).  The thermal pad of the package is soldered to the ground plane of the daughter card.  I am going to play around with the placement to get better thermo isolation.</p><p><img src="https://cdn.hackaday.io/images/8346591435795751606.png"></p><p>Also shown are the accelerometer(with magnetometer), and the pair of ultrasonic transmitter and receiver.  There is a second daughter board (minus the thermometer) on the left side of the head.</p><p>The magnetometer is located away from magnetic sources such as the speaker and the haptic motor located at the far left of this picture.</p><p><img src="https://cdn.hackaday.io/images/2576161435795134127.jpg"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5903/log/19976-ultrasonic-module-hacking">Ultrasonic module Hacking</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/5903/log/19976#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19976"><p>Previously I did a <a href="https://hackaday.io/project/5903-sonar-for-the-visually-impaired/log/18329-ultrasonic-module-virtual-teardown">virtual teardown</a> based on my web research.  Now that my ultrasonic modules have arrived. I am going to do some hacking and measurement.</p><p>Module Weight: 8.3g<br>Standby current: 2.7mA (5V), 2mA (3.3V)</p><p>The following waveforms are for 5V power:</p><p>There are 8 pulses.  The measurement is singled ended of one of the transmit pins and referenced on ground.  The other terminal is driven with an opposite phase.  The amplitude is closed to +/- 9V.</p><p><img src="https://cdn.hackaday.io/images/4843501435253341097.jpg"></p><p><img src="https://cdn.hackaday.io/images/4415621435253471703.jpg"></p><p>It take quite a few hundreds of us for the transducer to damp and the signal to decay.</p>Good news:<ul><li><span></span>there are no major overshoots/undershoots, so I might be able to save a couple of diode arrays.</li><li><span></span>the amplitude is really only 4.5V single ended, so may be I can drive it at 3.3V.  I can always crank up the receiver gain to compensate.</li><li>The case of the transmitter is electrically isolated, so I guess I don't have to worry abut insulating the transducer case.  On the other hand, no electrostatic shielding.</li></ul><p>I am going to do more measurement/hacking... Stay tuned.  Going to try taking better picture at night hopefully less ambient lights means less reflections on the scope pictures.</p><hr><p>My quick &amp; dirty way of generating 40kHz waveform from AVR chip (for proof of concept testing/hacking only)</p><pre class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span>
</span>{
  DDRB = (<span class="hljs-number">1</span>&lt;&lt;<span class="hljs-number">0x01</span>)|(<span class="hljs-number">1</span>&lt;&lt;<span class="hljs-number">0x02</span>);
  ICR1= <span class="hljs-number">190</span>;
  OCR1A = <span class="hljs-number">95</span>;
  OCR1B = <span class="hljs-number">95</span>;

  TIMSK = (<span class="hljs-number">1</span>&lt;&lt;TICIE1);
  TCCR1A = (<span class="hljs-number">1</span>&lt;&lt;COM1A1)|((<span class="hljs-number">1</span>&lt;&lt;COM1B1)|(<span class="hljs-number">1</span>&lt;&lt;COM1B0))|(<span class="hljs-number">1</span>&lt;&lt;WGM11);
  TCCR1B = (<span class="hljs-number">1</span>&lt;&lt;WGM13)|(<span class="hljs-number">1</span>&lt;&lt;WGM12)|(<span class="hljs-number">1</span>&lt;&lt;CS10);


  <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)
   <span class="hljs-comment">/* */</span>;
}
</pre><p>Probably one of the few times once in a blue moon that you would catch me using a breadboard:</p><p><img src="https://cdn.hackaday.io/images/8497311435282848582.jpg">Bare minimum: 3.3V ATmega8L:  OC1A, OC1B set up for Fast PWM and complementary waveform using internal 8MHz RC oscillator.  The RC oscillator is running a bit slower at 3.3V, so I have to tweak the period to match the speed.  (too lazy to look up tweak register)</p><p>I have desoldered the Driver and the MCU on the module.  I am driving the transmit transducer directly with ATMega pins.  CH1, CH2 on scope are hooked up to OC1A, OC1B.  So the transducer is being driven at +/- 6.6V.</p><img src="https://cdn.hackaday.io/images/3743371435282697037.jpg"><p>To test out the half duplex mode, I'll need to modify my code and to measure the time for the output waveform to decay with my scope.</p><ul><li>stop the output after 8 cycles</li><li>ground the two pins for a short period of time </li><li>Tristate one of the pins while pulling the other one to ground (for using the same transducer as receiver.)</li></ul><p>While the I/O pins on the MKL16 can do the same, I don't think it would be a good idea in an actual product as they are not even 5V tolerant.  If the device get dropped, the piezo transducer might generate enough voltage to upset or worse - silently damage the $5 ARM.</p><p><img src="https://cdn.hackaday.io/images/7279661435347323069.png" width="436" height="138" style="width: 436px; height: 138px;"></p><p>  I would rather use a $0.50 74LVC125 as a buffer.  It has an Absolute Maximum Rating of 6.5V and can be beefed up further with external diode clamps.</p><p><img src="https://cdn.hackaday.io/images/1806321435347352827.png"></p><hr><p>New code with the modifications (10 minutes hack, so don't expect too much)</p><pre class="hljs cpp"><span class="hljs-preprocessor">#<span class="hljs-keyword">define</span> F_CPU 8E6</span>

<span class="hljs-preprocessor">#<span class="hljs-keyword">include</span> &lt;avr/io.h&gt;</span>
<span class="hljs-preprocessor">#<span class="hljs-keyword">include</span> &lt;util/delay.h&gt;</span>
<span class="hljs-preprocessor">#<span class="hljs-keyword">include</span> &lt;avr/interrupt.h&gt;</span>

<span class="hljs-keyword">volatile</span> <span class="hljs-keyword">uint8_t</span> Cycles, Shorts;

<span class="hljs-preprocessor">#<span class="hljs-keyword">define</span> PWM_OUT ((1&lt;&lt;COM1A1)|((1&lt;&lt;COM1B1)|(1&lt;&lt;COM1B0))|(1&lt;&lt;WGM11))</span>
<span class="hljs-preprocessor">#<span class="hljs-keyword">define</span> CYCLES  8</span>
<span class="hljs-preprocessor">#<span class="hljs-keyword">define</span> SHORTS  8</span>

<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span>
</span>{ 
  DDRB = (<span class="hljs-number">1</span>&lt;&lt;PORTB1)|(<span class="hljs-number">1</span>&lt;&lt;PORTB2);
  PORTB = <span class="hljs-number">0</span>;

  ICR1= <span class="hljs-number">190</span>;
  OCR1A = <span class="hljs-number">95</span>;
  OCR1B = <span class="hljs-number">95</span>;

  TCCR1B = (<span class="hljs-number">1</span>&lt;&lt;WGM13)|(<span class="hljs-number">1</span>&lt;&lt;WGM12)|(<span class="hljs-number">1</span>&lt;&lt;CS10);
  TIMSK = (<span class="hljs-number">1</span>&lt;&lt;OCF1A);

  sei();

  <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)
  {
    Cycles=CYCLES;
    Shorts=SHORTS;

    TCCR1A = PWM_OUT;

    <span class="hljs-keyword">while</span>(Cycles)
     <span class="hljs-comment">/* */</span>;

    _delay_ms(<span class="hljs-number">100</span>);
   }
}

ISR(TIMER1_COMPA_vect)
{
  <span class="hljs-keyword">if</span>(Cycles)
    Cycles--;
  <span class="hljs-function"><span class="hljs-keyword">else</span> <span class="hljs-title">if</span><span class="hljs-params">(Shorts)</span>
  </span>{
    <span class="hljs-keyword">if</span>(Shorts==SHORTS)
    { TCCR1A = <span class="hljs-number">0</span>;
     }
    Shorts--;
  }
  <span class="hljs-keyword">else</span>
  {
    DDRB = (<span class="hljs-number">1</span>&lt;&lt;PORTB1);
  }
}
</pre><p>I drive the transducer for 8 cycles (I might have miscounted the start &amp; stop), grounded both the outputs for 8 cycles (shorted them), then tristate one of the pins (which would be used by the receiver as some point.)</p><p><img src="https://cdn.hackaday.io/images/3433511435340968733.jpg" width="308" height="250" style="width: 308px; height: 250px;"></p><p>Zoomed out to shows the ringing from the stored mechanical energy in the form of vibrations in the transducer which goes on for more than 1 ms.  Notice the amplitude exceeds the power rails.  I'll need to add some diode clamps.  Using the 74LVC125 with the higher voltage tolerant as a driver is a good idea.</p><p><img src="https://cdn.hackaday.io/images/7410781435340994899.jpg" width="319" height="207" style="width: 319px; height: 207px;"></p><p>This time with a 3.9K resistor connected across the transducer.  This helps to damp out the oscillations as it leeches the energy.</p><p><img src="https://cdn.hackaday.io/images/4120371435341677434.jpg" width="323" height="201" style="width: 323px; height: 201px;"></p><hr>Done a bit more work.  <br>Some changes and they seem to make it closer to the original.  Haven't done range testing, but now I can see the reflections on the scope.<ul><li>Using a 12MHz crystal.  This helps with getting a more accurate 40kHZ signal</li><li>Corrected the test board so that it is the same as the other 4 from the same purchase batch.  (pin 4 of U2B was grounded instead of connecting to the half rail.)</li></ul><p><img src="https://cdn.hackaday.io/images/8251551435510509567.jpg" width="342" height="233" style="width: 342px; height: 233px;"></p><p>I have increased the amount of the time that the outputs stays at ground after the initial burst to 32 pulse time.  The residual pulse is a lot smaller, but at the same time it increases the dead zone to possibly 20-30cm (8-12") or more if I am to use the same transducer for receiver.  There are probably still some minute residual signals that will swamp the echo signal which is at the millivolt or lower.</p><p>Top trace shows the received signal at U2B pin 7 - the 2nd stage of amplifier just before the comparator.  This is where I'll be feeding the analog signals to the ARM's comparator as well as ADC.  That pulse there is probably due to the vibration through the PCB.  </p><p>(Module original <a href="https://cdn.hackaday.io/images/1178291435424190983.png" target="_blank">Schematic</a>)</p><p><img src="https://cdn.hackaday.io/images/7184381435511699646.png"></p><p>I think I can get a bit better performance to compensate for the lower transmit voltage by tweaking the circuit values a bit.<br>I have noticed that they change the half rail bias values.  I'll see if that improves a bit on the power up. </p><hr><p>Here is my trade-off analysis:</p><p>Weight of Rx transducer: 1.9g each<br>PCB weight: 3.1g/4=  0.775g  (bare module board weight divide by 2 for thinner PCB, another divide by 2 as it is adding 1/2 the board area)<br></p><p>So we are looking at 2.575g x 2 for the two side = 5.15g for using the extra 2 transducer - one for each side.  It might be worth keeping the transducer separate even with the extra weight to not have to compromise receive performance.</p><hr><p>According to LTSpice for the gain at output of U2C at 40kHz<br>LTSpice seems to be having some convergence issues with U2B in the model. U2B gain is 7.5X (17.5dB<span class="redactor-invisible-space">)</span></p><p>With values as show: overall gain = 11.8dB<br>With R3 = 1.5K, R5 = 22K: gain = 32dB  (this ocrrected for the wrong 19kHz filter frequency.  It is now at 39.26kHz)<br>I boost the gain by changing R2 = 220K: gain = 43.54dB  <br>I have to compensate for the reduced transmit power (3.3V vs 5V), so  I increased the gain by 3.5X (11dB). <br>I ran the AVR at 3.3V, so the transmitter is driven at about 6.6Vpp vs the 10Vpp at 5V input.<br><img src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20P%20%5Cpropto%20V%5E%7B2%7D"><img src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20(5*2)%5E2%20%2F%20(3.3*2)%5E2%20%3D%202.3%20%3D%207.2dB"></p><p> I took the following measurements for a quick test of the range.  This just happens to be a convenient location and not necessarily the limit of the range.  (Breadboards and logic probe clips aren't stable nor is the scope portable enough to be moved around for measurements.)</p><p>The breadboard is sitting on a cardboard box on top of my tripod.  It is about 60cm  (2')  off the floor.  </p><p>Top trace is at the ultrasonic transmitter.<br>Bottom trace is at output of U2B (pin 7)</p><p><img src="https://cdn.hackaday.io/images/9483821436059904197.jpg" width="374" height="418" style="width: 374px; height: 418px;">The first blip is at the transceiver.  Probably because of the extra gain.<br>The 2nd blip is from the wall at the threshold about 2m (~79").  2[m] /340 [m/s] x 2 = 11.7ms  (2.9 divisions)<br>The blip between the 2nd and 3rd (near scope Y axis) is from the door.  Width of door = 0.7m which is just about 4ms.<br>The 3rd blip is from the far wall at just bit over 4m (~157.5").  4[m] / 340 [m/s] x 2<span class="redactor-invisible-space"> = 23.5ms (5.9 divisions)<br></span></p><p><span class="redactor-invisible-space">The module works okay with the modifications I made.  The noise floor is  a bit high, but there is enough of signal to see the reflections.  I don't have an explanation to account for the double echo. <br></span></p><p><span class="redactor-invisible-space">I took off the AC coupling and zoomed out to try to look at the signal again. i.e. literally  the bigger picture</span></p><p><span class="redactor-invisible-space"><img src="https://cdn.hackaday.io/images/445341436063071490.jpg"><span class="redactor-invisible-space">Really not to sure what to make of the signal except to see that the top part seems to be clipped.    I am expected a symmetrical signal to the 1.65V mid rail virtual ground reference.  The opamp on this is SGM324 which is supposed to be a rail to rail part. </span></span></p><p><span class="redactor-invisible-space"><span class="redactor-invisible-space"> I am starting to think that they are</span></span> Chinese "relabel" LM324 with only get around to VCC - 1.5V = 1.8V (guaranteed min)  for VCC  = 3.3V   They don't specify the light load, but I would expect the voltage is a bit higher.  It sort of agrees with the measurement.</p><p><img src="https://cdn.hackaday.io/images/422451436071285418.png"></p><hr><p>Here is what happens using a LM2904 (LM358/LM324) model in LTSpice with a large signal.  Notice the familiar non-symmetrical waveform?  It sort of clips off at around 2.3V which looks very similar to the scope picture above.</p><p><img src="https://cdn.hackaday.io/images/8638021436117552318.png"></p><p>For a digital range finder, one could simply trigger off below the mid rail and get away with the non rail to rail LM324.  However, that kind of clipping is unsuitable for the analog sonar mode where artifacts could be an issue.</p><p>I have been using the LMV324 model for my LTSpice simulation, it is what I have on my schematic for now.  Thankfully most quad opamp are footprint compatible, so <span class="redactor-invisible-space">I can swap the part easily.</span><br></p><p> The part doesn't have Rail to rail Input range, so that's something that could cause problems when the input goes above its common mode input range (Vcc-1V) e.g clipping, <a href="http://www.edn.com/design/analog/4368301/Are-you-violating-your-op-amp-s-input-common-mode-range--item-2">phrase reversal</a>.</p><p><img src="https://cdn.hackaday.io/images/1203281436070733627.png"></p><p>Phrase reversal: <strong>TBD!!!  </strong>  Something that important for low voltage voltage application not even a line about it?</p><p><img src="https://cdn.hackaday.io/images/6897261436118859779.png"></p><p>A certain vendor of LMV324 say it out front that their part do not exhibit Phrase Reversal.  Always read the fine prints in the datasheets for the particular vendor before you blindly substitute parts just because they have the same commodity part#.</p><p><img src="https://cdn.hackaday.io/images/774301436118449203.png"></p><hr><p>Based on that last photo, the 2nd burst is likely caused by the transmitter ringing.  I shorted the transmitter for 800us and then let the pins float because I was going to switch the transmitter to a receiver.  There was enough kinetic energy in the transmitter to cause it to resume ringing.  Look like I'll need to short the transmitter for the rest of the duration.  Now that mystery has a possible explanation.</p><span></span></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5903/log/20061-ultrasonic-module-lets-get-physical">Ultrasonic Module - Let&#39;s get physical</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/5903/log/20061#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20061"><p>his is a physical teardown of the HC-SR04 Ultrasonic Range Finder modules sold from China.  This part is the old fashion kind.  This is just for completeness.</p>Observations:<ul><li>No copyright, no designers name or anything.</li><li>Some board uses the old LM324 and some uses the SGM324 (CMOS <a href="http://www.edn.com/design/analog/4337653/Wisely-using-rail-to-rail-op-amps">RRIO</a>).  </li><li><span></span><span></span>One of the boards with the SGM324 has the opamp pin 5 grounded in the PCB layout, but  everything else looks identical.  After modding it to match the rest of the boards, it works better.</li><li>Rest of the parts have part# removed.</li><li>U3 seems different</li><li>Not much change except for a few cost reduction and part designation renumbering</li><li>Judging from what's been selling on the ebay/Chinese sites, the most likely part# that is on the module is: TCT40-16R/T-2 from <a href="http://www.shenghui.com/">Sunway / Shenghui</a></li></ul><p>1.  Take a picture, print it out and strip parts off the PCB one at a time.  The parts are taped down to keep track of what goes where on the board.  Make sure that it is in a geographical stable location away from wind, pets etc.  :)  Some people like to use icecube trays for these type of work.</p><p><img src="https://cdn.hackaday.io/images/9186681435415892725.jpg" width="391" height="280" style="width: 391px; height: 280px;"></p><p>2. scan the board in a flat bed scanner<br>3. import the scan into an image manipulation package<br>4. Scan pan rotate zoom enhance!</p><p>Bottom scan:</p><p><img src="https://cdn.hackaday.io/images/5266151435416182835.png">Select the silkscreen areas and re-level to reveal what's under.</p><p><img src="https://cdn.hackaday.io/images/3101841435416227544.png"><span class="redactor-invisible-space">Readjust the tint to match the rest of the board. (by eyeball)</span></p><p><img src="https://cdn.hackaday.io/images/6569421435416281723.png">(I am skipping clean and repair image as it will take me an hour or so)<br>Flip the scan horizontally for merging (click for full image)</p><p><img src="https://cdn.hackaday.io/images/5215691435419886237.png" width="360" height="164" style="width: 360px; height: 164px;"></p><p><span></span>Top Scan: minor de-noise applied (click for full image)</p><p><img src="https://cdn.hackaday.io/images/2561111435416478685.png" width="364" height="163" style="width: 364px; height: 163px;">I'll let someone merge the image. The board is simple enough for me to skip that step.</p><p><span></span>5. Measure component values, sketch out the schematic</p><p><img src="https://cdn.hackaday.io/images/3311521435533652455.png">I saw a variant of R2 = 56K (563) in some of my modules.  All it means is that the gain will be lower.<br></p><p>Original schematic from <a href="http://uglyduck.ath.cx/ep/archive/2014/01/Making_a_better_HC_SR04_Echo_Locator.html">Emil's Projects: "Making a better HC-SR04 Echo Locator"</a>.  Updated by me to the most recent PCB version.<img src="https://cdn.hackaday.io/images/1178291435424190983.png" alt="" style="display: block; margin: auto;"></p><p><span></span>6. ???<br>7. Profit!?</p>Related Links:<ul><li><a href="https://hackaday.io/project/5903-sonar-for-the-visually-impaired/log/19976-ultrasonic-module-hacking">Hacking / Measurements</a></li><li><a href="https://hackaday.io/project/5903-sonar-for-the-visually-impaired/log/18329-ultrasonic-module-virtual-teardown">Virtual tear down</a></li><li><a href="https://hackaday.io/project/5903-sonar-for-the-visually-impaired/log/18392-that-old-spice-magic">Spice Simulation</a></li></ul><a href="https://hackaday.io/project/5903-sonar-for-the-visually-impaired/log/18329-ultrasonic-module-virtual-teardown"></a></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5903/log/20669-project-update-bad-news-bear">Project update - bad news bear</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/5903/log/20669#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20669"><p>Bad news: I guess this project is not going to make the time frame for the best product entry - specifically I don't think I can finish the 3 prototype &amp; enough working firmware and have them arrive on 17th Aug 2015 date.  i.e. I have ~ 1 month and even then PCB fab+shippingtime is unknown when you are going for offshore manufacturing.   I have seen the shipping delays.<br></p><p> I would rather not enter than to rush the project and ship something below my own standard.  I am still trying to do as much as I can for the main event.</p><p>Good news: I won quite a few vendor and entry prizes so far for all of my entries.<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5903/log/20729-show-us-your-human-interface">“Show Us Your Human Interface”</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/5903/log/20729#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20729"><p>This was one of the things on my mind, but I didn't write it down in a specific section.  I guess the <a href="http://hackaday.com/2015/07/09/show-us-your-human-interface-win-laser-cutting-time/">“Show Us Your Human Interface; Win Laser Cutting Time”</a><span class="redactor-invisible-space"><a href="http://hackaday.com/2015/07/09/show-us-your-human-interface-win-laser-cutting-time/"></a> is a good incentive for that.</span></p><p>Since this device is designed to operated with a visually impaired person, the user interface is a bit different than most.  The device is equipped with dual haptic motors and dual speakers that can be used to communicate with the user for environmental and navigational information.</p><h2>Informational messages</h2><p>The dual haptic motors can be used to give directional information such as left or right based on which of the motor is energized.  The frequency of the pulses can be used as analog feedback such as closing of distances.<br></p><p>In the sonar mode, the raw ultrasonic signal is slowed down by a factor of 20X, this gives the user access to the analog echo signals and motion detection via dopper effects.  (more details <a href="https://hackaday.io/project/5903-sonar-for-the-visually-impaired/log/19728-pump-up-the-volume">here</a>)  </p><p>The following picture shows the raw echo signals that can detect objects/boundary at multiple distances - (large blip) door threshold, (small blip) door and (large blip) far end wall.  (project log <a href="https://hackaday.io/project/5903-sonar-for-the-visually-impaired/log/19976-ultrasonic-module-hacking">here</a>) These type of information is not available if you use the ultrasonic range finder module as is and hook up the 4 pin interface to a microcontroller.  The module would only return the first echo and ignore everything else.<br><img src="https://cdn.hackaday.io/images/9483821436059904197.jpg" width="430" height="462" style="width: 430px; height: 462px;"><span class="redactor-invisible-space"><a href="http://ieeexplore.ieee.org/xpl/articleDetails.jsp?reload=true&amp;arnumber=7012073">Research paper</a> has shown that a person can be trained to process these signals to get an overall <br></span></p><p style="margin-left: 40px;">"Results: Naive subjects were able to make laterality and distance judgments, suggesting that the echoes provide innately useful information without prior training. Naive subjects were generally unable to make elevation judgments from recorded echoes. However, trained subjects demonstrated an ability to judge elevation as well."</p><p><span class="redactor-invisible-space">The SPI FLASH memory can hold voice samples for words for constructing short messages <br></span></p><ul><li>numeric measurements such as distances, height/depth, battery voltage, temperature</li><li>direction: N/E/S/W, left/right, bearing</li><li>warning message: stop, proximity alert</li></ul><h2>Interactive User Menu</h2><p>The accelerometer<span class="redactor-invisible-space"> used in this device was designed for a mobile device and can sense single/double tab (pulse of acceleration) to bring up user interface.  The same function can be used in this device.<br></span></p><p><img src="https://cdn.hackaday.io/images/9839851436463750690.jpg"></p><ul><li>A single tap can be used to bring up frequent used function such as a sonar ping.</li><li>A double tap can be used for is to bring up a more complex voice prompted menu, where by the user can navigate by simple head motion.<br>
<ul><li>Nodding/shaking head can be interpret as Yes/No answer to a question.  These can be detected by the 3-axis accelerometer.</li><li>The amount of head turning or nod can be used as analog value for adjusting options.</li></ul></li></ul><p>The orientation of the device such as facing down or lack of motions can be used to tell the device to go into sleep mode.</p><h2>Debugging</h2><p>For firmware debugging, I intend to use a LCD graphic display with the Alien movie "Tracker" style user interface which is exactly the type of display to show echos.  A polar plot + a few line of text can show the echo and orientation information.   I wonder if this can be also be sold as a toy/novety item.</p><p><img src="https://cdn.hackaday.io/images/1958551433968920676.jpg" width="420" height="235" style="width: 420px; height: 235px;"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5903/log/21197-lets-go-shopping-ii">Let&#39;s go shopping II</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/5903/log/21197#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21197"><p>Got my BOM sorted out with the help of BOM-EX ULP in Eagle (<a href="http://www.bobstarr.net/pages/downloads.html">Home</a>, <a href="http://www.cadsoftusa.com/downloads/ulps">Eagle CAD site</a>).  I have looked up the digi-key part# and did some clean up.  </p><p>What I have seen is that 0402 parts are cheaper than the 0603.  Most of the parts on this board uses 0402 for size.  There are a couple of parts such as the MOSFET array that is pushing the PCB geometry.  I had to alter the recommended footprint to meet the minimum spacing.<span class="redactor-invisible-space"></span></p><p>So going to put together a digikey order early next week, try a few things and then finalize the PCB.<br></p><ul><li>need to determine the exact spacing for the battery holder as they don&apos;t come with recommended layout data.</li><li>need to finalize the choice of speakers.  As for mounting, probably have to make something up and use connector+wire for this iteration.  Speaker acoustic and case <span class="redactor-invisible-space">designs will have to wait until most of the hardware/firmware design are working.</span></li><li>still have to do a small breakout board for the left side to connect the sensors, speaker and haptic motor.</li></ul><p>I have yet to figure out the connectors, speakers, ribbon cable and half a dozen smaller things that I need to order extra for trying things out.</p><hr>I have placed the digikey order for parts.  <ul><ul><li>Got settled on Hirose DF11 2mm connectors.  These are IDC for AWG#26 loose wires.   Hopefully this gives a bit more freedom on the cord connecting the two sides.  Their pin numbering scheme is a mirror image of the usual ones!<br><img src="http://media.digikey.com/Photos/Hirose%20Elect%20Photos/DF11-8DS-2R26(xx)_sml.jpg"></li><li>picked JST 1mm IDC connector for speakers</li><li>C&amp;K slider switch I was hoping to use isn&apos;t in stock, but thankfully there is is a more expensive Japanese CL-SB-23C-11 which has exact same dimension.</li><li>Trying out <a href="http://www.digikey.com/product-search/en?vendor=0&amp;keywords=423-1179-ND">Knowles Nautilus Speakers</a>.  It has an integrated side-port exit.  Also getting their regular speaker for comparison.<br>I saw some speakers on Aliexpress, but as usual the quality on their picture doesn&apos;t impress me much and I am out of time for trying stuff on slow boat right now.  The interesting part is the speaker parts with their enclosures.  That&apos;s the hardest thing to get right in a prototype if you don&apos;t have a 3D printer.</li></ul></ul><img src="https://cdn.hackaday.io/images/7406901437422878036.png"><hr><p>Forgot all about the Thermometer + EEPROM on the sensor PCB when I was working on the BOM.  I guess I&apos;ll have to make do with the more expensive and less integrate parts I have on hand.</p><hr><p>Ordered wrong resistor size: 0603.  Changed design to not use the value.  Made some bad choices for inductors.  I have to redo the footprint and push things aside for the larger inductors.  Going to try out cheap Chinese knock off inductors this time and may be I have better luck?  If that fails too else fails, then I&apos;ll pay the $8 and order the legit part from digikey.<br>The contacts in the battery holder are pretty stiff.  So it looks like the spacing I had is a bit too short.  Going have to drill a few holes on a scrap PCB and try it out.</p><p>The JST connector I picked for the speaker is the same the one in my broken camera!  So I guess I can try that speak out at some point.<br></p><hr><p>Without an enclosure, that<a href="http://www.digikey.com/product-search/en?vendor=0&amp;keywords=423-1179-ND"> Nautilus</a> speaker works a lot better than the Aliexpress &quot;iphone&quot; speakers.  Even their $1.5 speaker was a few times louder.<span class="redactor-invisible-space">  The side port exits works really well and when you point it  towards the outer ear.  With a properly designed enclosure, it would only get better.</span></p><p>Still need to redo the layout to accommodate the much larger inductor.  Thankfully, the spacing of the battery holder has increased.</p><hr><p>Looks like I&apos;ll need to limit the power usage for AA/NiMH battery mode operation.  When running from a Li battery, the power available is much higher as I am using a different buck converter.</p><p>I have wired up the boost circuit for testing.</p><p><img src="https://cdn.hackaday.io/images/5435491437658732163.png"></p><p>It seems like the inductor would work fine as long as I keep the current below 100mA and input voltage above 1.1V.  A tiny bit over, it saturates, the inductor heats up, efficiency drops and the output loses regulation.  I have also tried it with an inductor with a higher saturation current rating.  This time the MCP1640 heats up, so either way there is only so much power can be delivered in this mode.</p><p>It might not be a huge issue as we are drawing above 400mA from the AA battery. From the battery life point of view, it should be avoided in the first place.  The only thing that draws that amount of power is the audio circuit and it would seem that the higher efficiency of new speaker might help to reduce that.  </p><p>Note: At outdoor because of the ambient noise level, the amount of power might need to be increased by a few times.</p><hr><p>I bought some JST 1mm SR series <a href="https://en.wikipedia.org/wiki/Insulation-displacement_connector">IDC connectors</a> for the speaker connection.  They are tiny polarized and do not take much vertical spacing.  The beauty is that these connectors requires no $200 crimping tool to make.  In my case, I just use my finger nail to push the wires into the slots.  I used the dull size of the box cutter blade to push it in a bit more for good measure.  <span class="redactor-invisible-space">The contact blades on both sides cuts through the insulations and make air tight contact with the stranded wires inside.  The plastic grippers at the end of the connector grip onto the outside of  the wires.  It is a good system.  </span>I am lucky that the AWG28 wires (from scrap piece of round SCSI cables) would fit into the connector that was designed for AWG30.  My only complain is that there is no where to grab onto if you want to remove the connector.</p><p><img src="https://cdn.hackaday.io/images/9310591437676145212.png"></p><p><span></span></p><p><span></span></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5903/log/21340-the-last-mind-bender">The Last Mind Bender!?</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/5903/log/21340#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21340"><p><em>&quot;<i>Do not try and bend the spoon, t<i>hat&apos;s impossible. Instead, only try to realize the truth...there is no </i></i></em><em><i>spoon. Then you will see it is not the spoon that bends, it is only </i><i>yourself.</i>&quot; </em><em>&#x2015;Spoon Boy to Neo</em></p><hr><p>Doing some test for the battery holder.  As I have noted before, the manufacturer does not have any layout info.  So I am doing some trial &amp; error.  Well mostly on the error side.  </p><ol><li>I measure the distance between the battery contacts at no compression force. </li><li>Figure out the length of the battery. </li><li>Now calculate the offset from 1.</li></ol><p>The retention is good for this, but there is a bit of bending on 0.052&quot; thick DIMM module PCB which is  pretty close to the standard 0.062&quot; (1.57mm) PCB thickness.  And I was tempted to go for the 0.8mm thick PCB to shave weight.  Guess that&apos;s not going to happen.</p><img src="https://cdn.hackaday.io/images/4155241437591596656.jpg"><p>It gets worse for the Protected Li-Ion which is 0.06&quot; (1.524mm) longer  to accommodate for the protection PCB at the base.</p><p><img src="https://cdn.hackaday.io/images/9947691437592181631.jpg"></p><p>Trying my luck again, but this time with a 2 layers PCB from the Chinese PCB I order from.  It is quite a bit stiffer than the DIMM.   Looking at the way their PCB cracks - only thing comes to mind is that the core is &quot;very dry&quot; (i.e. little epoxy). I would assume that they have a higher glass content than the old hobby PCB for etching.  Could be higher TG PCB for RoHS???</p><img src="https://cdn.hackaday.io/images/2720881437596528881.jpg"><p>The standard AA, almost no bending.</p><p><img src="https://cdn.hackaday.io/images/7900961437594403715.jpg"></p><p>The Protected Li-Ion, slight bending on the PCB side. </p><p><img src="https://cdn.hackaday.io/images/5199401437594455464.jpg"></p>I am using 0.06&quot; (1.524mm) of compression for the Protected Li-Ion, so the Fuji Film would just touch the contacts.<hr>A sample of &quot;AA&quot; batteries my collection:<table><thead><tr><td>Battery</td><td>Height</td></tr></thead><tbody><tr><td>TrustFire &quot;900mAh&quot; Protected Li-ion</td><td>1.991&quot;</td></tr><tr><td>Fuji Film 1600mAH</td><td>1.956&quot;</td></tr><tr><td>Powerizer &quot;2250mAh&quot;</td><td>1.989&quot;</td></tr><tr><td>Duracell  Rechargeable 2650mAh</td><td>1.988&quot;</td></tr><tr><td>Energizer Rechargeable 2000mAh</td><td>1.977&quot;</td></tr><tr><td>Soshine LiFePO4 &quot;700mAh&quot;</td><td>1.975&quot;</td></tr><tr><td>Duracell Alkaline </td><td>1.978&quot;<br></td></tr></tbody></table><p>So if I discard the Fuji Film battery data point, there is a smaller spread: 1.975&quot; - 1.991&quot; which is 0.016&quot; (0.406mm).  The trick is to target the mid point and let the very stiff springs absorb the differences.</p><p>Note: The measurements includes a piece of tape over the positive terminal so that I don&apos;t short the batteries.</p><h2>Lesson learnt:  Buy a different style of battery holder!  The springs are too stiff.</h2></div>
                            </div>
                        </li>
                    
                </ul>

                
                <div class="pagination">
                    
                    <a href="?page=1" class="grey-gold-button prev-button ">Previous</a>
                    
                    
                    <a href="?page=3" class="grey-gold-button next-button ">Next</a>
                    
                </div>
                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'gghSuNHd-oSEnuk87OvOj67wUcVStGeTHPns';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>