<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; Crunchtrack &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F7134%2Flogs%3Fpage%3D1">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/7134-crunchtrack">Crunchtrack</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">The smallest open source GSM+GPS+CAN board ever</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/13648-mastro-gippo" title="Visit Profile">Mastro Gippo</a><span>&bull;</span>
                
                11 days ago<span>&bull;</span><a href="/project/7134#discussion-list" title="See Comments">5 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/7134-crunchtrack">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/7134/logs/sort/newest">Newest</option>
                    <option value="/project/7134/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/7134/log/22323-intro">Intro</a></h2>
                            <small class="authorship">11 days ago  &bull;
                                <a class="gray-link" href="/project/7134/log/22323#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22323"><p>I&#x2019;ve always loved complex machines that can handle and transform huge
 amounts of energy to make very useful work. Among these machines, my 
life choices got me into the automotive field, where I&#x2019;ve been working 
for the past 10 years. Just after school I found a job at Texa, an 
automotive diagnostic company, where I was writing software and reverse 
engineering communication protocols. My passion for efficiency and 
electronics made me leave that job after 5 years to pursue a career more
 focused on pure electric vehicles, so I joined another company where I 
developed power trains for EV conversions, and I even worked on a <a href="http://www.evalbum.com/3659" target="_blank">DeLorean conversion</a>.</p><p>While working with electric cars, I stumbled upon two very interesting open source projects:the <a href="http://openvehicles.com/" target="_blank">Open Vehicle Monitoring System</a>, an IoT device to control every aspect of your car from a smartphone app, and the <a href="http://www.gevcu.org/" target="_blank">GEVCU</a>, an universal ECU especially designed to handle the common problems faced when converting an ICE car to electric.</p><p>Inspired by these two devices, I want to build something that could 
take the best of the two approaches to very similar problems.</p><h2>The Crunchtrack</h2><p>I have a few goals in mind.</p><p>&#x2013; I want my device to be <strong>small</strong>. That is both tho satisfy my efficiency fetish, and to have it fit inside the shell of a standard ELM327 bluetooth adapter:</p><p><a href="http://www.mastrogippo.it/wp-content/uploads/2015/08/20150410_123457-Medium.jpg"><img src="http://www.mastrogippo.it/wp-content/uploads/2015/08/20150410_123457-Medium-1024x768.jpg" alt="Shell"></a> (This is the original bluetooth board)<a href="http://www.mastrogippo.it/wp-content/uploads/2015/08/20150410_123539-Medium.jpg"><img src="http://www.mastrogippo.it/wp-content/uploads/2015/08/20150410_123539-Medium-1024x768.jpg" alt="Original PCB"></a></p><p>&#x2013; I want it to be connected to the internet. I will use a<strong> GSM GPRS</strong> module and a <strong>GPS</strong> module to provide location</p><p>&#x2013; It will have an USB connector, so the user will be able to easily 
update firmware and, most important, load a custom firmware to temporary
 use it as a<strong> Reverse Engineering tool</strong>. This way, the user will not need to buy other tools and will be encouraged to develop new functionality.</p><p>&#x2013; It will be <strong>cheap</strong>. I&#x2019;m aiming at a price a bit higher than the OVMS.</p><p>&#x2013; It will be easy to develop custom software, thanks to the <strong>mbed</strong> platform</p><h1>But wait, there&#x2019;s more!</h1><p>I just described the hardware, but my vision is bigger than that.</p><h2>The community website</h2><p>Right now, if someone wants to find infos on a car&#x2019;s CAN bus, he/she 
has to sort through a lot of noise. A lot of reverse engineered messages
 can usually be found on the documentation of the various projects like 
the OVMS, but other times they&#x2019;re buried under thousands of messages on 
forum threads &#x2013; and you may find later that they&#x2019;re wrong, as it was 
documented a few posts later, so you have to read the entire thread to 
get useful info. Been there, done that. More importantly, there&#x2019;s no 
standard way to present this kind of information.</p><p>I think that we need to create a common repository/wiki database 
where we can share this kind of information with a common standard, 
aiming at being able to automatically download a &#x201C;descriptor&#x201D; file that 
can run on an universal software. More on that later.</p><h2>Instructional videos</h2><p>I want to make instructional videos on the lines of the EEVblog. I&#x2019;m a
 very practical person, and I learn stuff only by doing it; my videos 
will be targeted to people like me, focusing on a defined task and 
explaining every step taken to get there.</p><p>For example, to teach the basics I want to make a series of videos on
 how I built an ECU to open the top of my car from the remote; this may 
be the lineup:</p><ul><li>Basic automotive electronics</li><li>where to find information and schematics</li><li>OEM diagnostic equipment</li><li>Reverse engineering the CAN bus</li><li>Transferring the studies into code for the ECU</li></ul><p>And that&#x2019;s about it for the general idea. Stay tuned for more info!</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/7134/log/22413-the-website">The Website</a></h2>
                            <small class="authorship">9 days ago  &bull;
                                <a class="gray-link" href="/project/7134/log/22413#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22413"><p>I think that we need to create a common repository/wiki database 
where we can share reverse engineered car information with a common 
standard, aiming at being able to automatically download a &#x201C;descriptor&#x201D; 
file that can run on an universal software.</p><p>This is not as hard as it seems; most of the data is usually 
extracted as the raw number, multiplied by a number, plus an offset. 
More complex formulas are not very common but exist and will be handled 
accordingly.</p><p>So, for every car, we have a page that states pinouts, bus speed, 
misc notes, and all the found messages. Log files can be shared and will
 be available for anyone to study.</p><h2>Example page:</h2><p>Car: <strong>Renault Twizy</strong><br>
Bus speed: 500Kbps</p><h2>Pinouts:</h2><p>&#x2013; OBD connector<br>
&#x2014; Pin 6: CAN H<br>
&#x2014; Pin 14: CAN L</p><h2>Messages:</h2><table class="easy-table easy-table-default ">
<thead>
<tr><th>Name</th>
<th>Address</th>
<th>Lenght</th>
<th>Repetition rate</th>
</tr>
</thead>
<tbody>
<tr><td>BMS status</td>
<td>0x155</td>
<td>8</td>
<td>10ms</td>
</tr>

<tr><td>Battery pack temperature</td>
<td>0x55</td>
<td> 8</td>
<td>1000ms</td>
</tr>

<tr><td>Single cell voltage 1-5</td>
<td>0&#xD7;556</td>
<td>8</td>
<td>100ms</td>
</tr>
</tbody></table><h2>Message specifics:</h2><p><em><strong>0x155 </strong></em><em><strong>BMS status (10ms)</strong></em></p><table>
<tbody>
<tr>
<td><strong> </strong></td>
<td><strong>Byte 0</strong></td>
<td><strong>Byte 1</strong></td>
<td><strong>Byte 2</strong></td>
<td><strong>Byte 3</strong></td>
<td><strong>Byte 4</strong></td>
<td><strong>Byte 5</strong></td>
<td><strong>Byte 6</strong></td>
<td><strong>Byte 7</strong></td>
</tr>
<tr>
<td><strong>Name</strong></td>
<td>&#x2013;</td>
<td>PWRH</td>
<td>PWRL</td>
<td>CSTAT</td>
<td>SOCH</td>
<td>SOCL</td>
<td>&#x2013;</td>
<td>&#x2013;</td>
</tr>
<tr>
<td><strong>Example</strong></td>
<td>0x07</td>
<td>0x97</td>
<td>0xFF</td>
<td>0x54</td>
<td>0x6B</td>
<td>0xF0</td>
<td>0x00</td>
<td>0x6F</td>
</tr>
</tbody>
</table><table>
<tbody>
<tr>
<td><strong>Name</strong></td>
<td><strong>Parameter name</strong></td>
<td><strong>Min</strong></td>
<td><strong>Max</strong></td>
<td><strong>Formula</strong></td>
<td><strong>UM</strong></td>
</tr>
<tr>
<td>PWRH PWRL</td>
<td>Battery power</td>
<td>&#x2013;</td>
<td>0x0F00</td>
<td>(0x7D0-(n&amp;0x0FFF))*16</td>
<td>kW</td>
</tr>
<tr>
<td colspan="6">Instantaneous battery power measured from 
the BMS. A negative value indicates charging, either due to regenerative
 braking or AC charging connection. This value can be used in 
conjunction with BV (0x55F) to calculate current flow. The indicated 
power is the total coming from the battery, power consumed by auxiliary 
devices is not separated from the traction power.<br>
Example: (0x7D0-(0x97FF&amp;0x0FFF))*16 = -752W (charging)</td>
</tr>
<tr>
<td>CSTAT</td>
<td>BMS status</td>
<td>&#x2013;</td>
<td>&#x2013;</td>
<td>n</td>
<td>&#x2013;</td>
</tr>
<tr>
<td colspan="6">BMS unit status.<br>
&#xB7;         0x94 = Initialization in progress; data acquired may not be valid<br>
&#xB7;         0x54 = BMS ready</td>
</tr>
<tr>
<td>SOCH SOCL</td>
<td>SOC</td>
<td>0</td>
<td>0x9C40</td>
<td>n/400</td>
<td>%</td>
</tr>
<tr>
<td colspan="6">Battery state of charge.<br>
Example: 0x6BF0/400 = 69.06%</td>
</tr>
</tbody>
</table><p>This is just a brief example; the table may need more columns (to 
define if the message is read only or if we can send it to activate 
stuff, a method to handle bitmapped statuses, etc.) but it&#x2019;s just to 
explain the idea. There will be a standard way to describe requests and 
responses, and how to handle data spanning multiple messages.</p><p>The community will help to converge to a standard way to save log 
files, develop tools to convert them, study their content and publish 
results. I have a small collection of softwares I&#x2019;ve written in these 
years that I will make available with an open source license. Other 
options are:</p><p>Kayak <a href="http://kayak.2codeornot2code.org/index.html">http://kayak.2codeornot2code.org/index.html</a><br>
OVMS CAN-RE-tool <a href="https://github.com/openvehicles/CAN-RE-Tool">https://github.com/openvehicles/CAN-RE-Tool</a><br>
BusMaster <a href="http://rbei-etas.github.io/busmaster/">http://rbei-etas.github.io/busmaster/</a></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/7134/log/23057-design-considerations-and-first-prototype">Design considerations and first prototype</a></h2>
                            <small class="authorship">3 days ago  &bull;
                                <a class="gray-link" href="/project/7134/log/23057#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23057"><p>An important goal that I set for this project is that it must be easily replicated and modified by everyone; that&apos;s why I went for a 2 layer board and and a microcontroller in a LQFP package. To meet regulations I will probably have to switch to a 4 layer board in the production version. <br></p><p>For the first prototype I went for a SIM800L as the GSM module. </p><p><img src="https://cdn.hackaday.io/images/8805661439733301703.jpg"></p><p>This incredibly small module provides a basic GPRS connection; while the 2G network is getting discontinued in the AT&amp;T nefwork in 2017, there are plenty of other countries where the device will still keep working and hopefully I&apos;ll be able to find 3G/4G devices of a similar size on the market. Another problem of this modem is that it has pins on the bottom like a BGA, and soldering will be harder than a normal BGA chip because there are actually components inside that module that may move around during soldering. Because of that, an important restriction is that this module can&apos;t be oven reflowed while being mounted on the bottom side of the PCB as the components inside may just fall off. And since I&apos;m using two modules here, I need to place them on the same side of the PCB. While I was aware of that problem, I decided not to care as I was going to manually solder them and I knew I was going to redesign the PCB sooner or later anyway.</p><p><img src="https://cdn.hackaday.io/images/7242941439733500871.jpg"></p><p>Unfortunately this came back to bite me: while being extra delicate soldering the GSM module, a SIM card pin didn&apos;t reflow properly so everything worked perfectly but the internet connection. As the <a target="_blank" href="http://hackaday.com/2015/08/14/chaos-communication-camp-2015-dispatch-from-day-one/#more-166067">Rad1o badge developers</a>, since the missing connection was on a pin on the edge of the board, I tried to fix this by drilling a hole through the PCB and soldering a thin wire to the missing connections</p><p><img src="https://cdn.hackaday.io/images/3639621439735062087.jpg">That didn&apos;t work of course, and I messed it up beyond repair, a very nice excuse to start working on the second prototype.</p><p>Looking for horror pictures? There you go, here I didn&apos;t have a 1uH inductor to couple the GPS antenna supply and I fixed it with a wiggly wire:</p><p><img src="https://cdn.hackaday.io/images/5093611439735498520.jpg"></p><p>And here I didn&apos;t have the right resistor for the switching regulator, so I used a potentiometer to experiment with different voltages too:</p><p><img src="https://cdn.hackaday.io/images/9944021439735781241.jpg"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/7134/log/23440-schematics">Schematics...</a></h2>
                            <small class="authorship">2 days ago  &bull;
                                <a class="gray-link" href="/project/7134/log/23440#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23440"><p><a target="_blank">Schematics are online</a>! As a bonus, I designed 2 verisons of the packages for the SIM800 modules, one with all the pins and one with only the mandatory pins to get the module up and running. I had to resort to this trick to save space for the tightly packed tracks, that on the PCB are spaced at 6/6 mil. A better board manufacturer would allow me to decrease the size of the tracks, but that&apos;s for a future prototype. I don&apos;t like having the modules &quot;flapping around&quot; in the breeze with most of their pins unsoldered, especially in the mechanical stressful environment that is a vehicle.<a href="https://github.com/mastrogippo/Crunchtrack"><img src="https://cdn.hackaday.io/images/3570871439834973609.png"></a></p></div>
                            </div>
                        </li>
                    
                </ul>

                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'ZNfQykO8-hn4NTstOu35YH8OzzluwBjuJCG0';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>