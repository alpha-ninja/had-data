<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; Squirco Smart Home System - Hub + Thermostat &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F4560%2Flogs%3Fpage%3D1">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/4560-squirco-smart-home-system-hub-thermostat">Squirco Smart Home System - Hub + Thermostat</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">Home automation hub and Raspberry Pi based smart thermostat. Part of Squirco Home Automation System</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/35595-steven" title="Visit Profile">Steven</a><span>&bull;</span>
                
                5 months ago<span>&bull;</span><a href="/project/4560#discussion-list" title="See Comments">3 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/4560-squirco-smart-home-system-hub-thermostat">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/4560/logs/sort/newest">Newest</option>
                    <option value="/project/4560/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/4560/log/17723-philosophy">Philosophy</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/4560/log/17723#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17723"><p>If the whole point of Smart Homes is to make lives easier, then what is the right approach? This problem is more philosophical than technical, so a philosophy must be established and a set of rules erected and strictly followed.</p><p>Rules:</p><p>1. Never take away what's already convenient for a gimmick. Case in point: Phillips Hue. In order to use the "smart" features on the bulb, the physical light switch must be on all the time. Users are forced to buy a other switch (unnecessary and expensive), or use the Hue app (very slow). Phillips took away the speed and convenience of flipping a light switch for some gimmicks, and it is very frustrating.</p><p>2. Never make users plan what they will or should do at some point in the future, because nothing will go according to plan. This is why schedule and simple rule based systems cannot handle complex scenarios, and will often get things wrong, even if the intention is right.</p><p>3. Remote control is not smart. I can't stress this enough. Shipping a product that let's you do things on the phone and calling it smart doesn't solve any problems. It just add more things for the user to do.</p><p>The most important thing is to delegate as much scheduling, planning, rule making, etc. to a computer as possible, with very little human intervention, which means an A.I. of some sort is needed.</p><p>If we think of the A.I. as a young child trying to learn new things, then some methods of teaching can be adapted, namely:</p><p>- Show through action</p><p>- Learn from mistakes</p><p>Show through action is, simply put, pattern recognition. Humans like to form routines because it's an efficient way of remembering. However, we are going to add some complexity here: when we recognize a pattern, for example, the sequence of lights that are switched on and off, there are other factors that can have an effect as well: time of day, location before/after, number of people in the house, climate indoor/outdoor, etc. Hopefully, with the extra data, the A.I. will be able to read your intentions better, and therefore produce better effects.</p><p>Learning from mistakes is perhaps the fastest way to learn the right way to do things. If we give the A.I. some room for experimentation and make little mistakes that can be easily fixed, (for example, the A.I. can play with the room temperature around the temperature you set it to, to find the upper and lower limit of your comfort zone), then the A.I. can learn faster, be more adaptable, and produce better results.</p><p>In summary, keep things simple, and let a computer do all the work. After all, nothing is impossible in software.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4560/log/18228-mechanical-design">Mechanical Design</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/4560/log/18228#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-18228"><p>Here we go again.</p><p>As with all my projects, I begin with the design of the physical object based on the functional specifications. In this case, the specs are roughly as follows:</p><p>- Central command, invisible butler, constantly working in the background</p><p>- Minimal user interaction</p><p>- Simple setup process (set up everything with a single action)</p><p>- Contains a permanent power source</p><p>The power supply basically limits the unit to be tethered to a wall in some way. In order to force myself to design a single click user interface, the first concept for the hub was a round, screen-less button, which I called "the puck"</p><p><img src="https://cdn.hackaday.io/images/7653551432135599604.png"></p><p>The next issue was to determine the best way to connect the device to wi-fi. There were two options:</p><p>1. connect to wi-fi through a smart phone (no screen required)</p><p>2. connect directly on the device (needs a screen)</p><p>I went back and forth on these two options for a few months. The biggest problem here was usability.</p><p>Option 1 would be easier from a hardware design stand point. However, the setup process would be slightly more complex (it would not pass the grandma test)</p><p>Option 2 makes the unit more self contained, and will be easier to setup. The extra screen can also bring some extra functionality in the future. The drawback is that the hardware will be much more complex, and a lot more design work is needed to utilize the screen so that it doesn't feel useless after connecting to wi-fi.</p><p>In order to find an "useful idle state" that feels functional yet requires minimal interaction, I went through a few options. In the end, the best option (which turned out to be the most complex) is to disguise the hub as a thermostat. After all, every home has a thermostat, so we might as well put the space to good use.</p><p>And thus, Mk. II was born.</p><p><img src="https://cdn.hackaday.io/images/9441111432136305896.png"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4560/log/18558-distributed-ui-concept">Distributed UI Concept</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/4560/log/18558#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-18558"><p>One more design post before I move on to the electronics.</p><p>When we design a UI for a device, the UI is contained within the device. If we think of a house as a device, then, everything within the home should be part of the home UI, which includes light switches, wall plugs, phones, computers, etc.</p><p>There are staple feature sets in every smart home. It is a mistake to try and cram every feature into a single device, the worst offender being a smart phone. Instead, we need to distribute the features into different devices with different form factors in a complementary fashion (i.e., for every additional device, new features are added, and the existing devices are enhanced by the newly available data). This makes sure the features are designed to be accessed in the most convenient locations, and not take away convenience just to trap users into the UI of a smart phone.</p><p>This is the Distributed UI Concept, and this is one of the central design philosophies of my smart home system.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4560/log/18849-hardware-block-diagram">Hardware Block Diagram</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/4560/log/18849#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-18849"><p>Quick and simple update. This is the hardware block diagram, which acts as a rough outline for the entirety of hardware design.<span></span></p><p><br><img src="https://cdn.hackaday.io/images/9650801433270241382.png"></p></div>
                            </div>
                        </li>
                    
                </ul>

                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'JRfLmDwr-67JWw7vxp9rb2XYs-OG67tH_3ng';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>