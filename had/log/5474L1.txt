<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; Share the Warmth &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F5474%2Flogs%3Fpage%3D1">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/5474-share-the-warmth">Share the Warmth</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">Warm-air distribution system (PIC/JALv2)</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/22738-sbigaijin" title="Visit Profile">sbi.gaijin</a><span>&bull;</span>
                
                4 months ago<span>&bull;</span><a href="/project/5474#discussion-list" title="See Comments">0 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/5474-share-the-warmth">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/5474/logs/sort/newest">Newest</option>
                    <option value="/project/5474/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/5474/log/17103-cvs-log-to-date">CVS Log to date.</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/5474/log/17103#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17103"><p>The story so far, as told by the CVS log entries for main.jal:-  </p><p>RCS file: /store/CVS/Heat_Vent/PWM/main.jal,v</p><p>Working file: main.jal</p><p>head: 1.10</p><p>branch:</p><p>locks: strict</p><p>access list:</p><p>symbolic names:</p><p>keyword substitution: kv</p><p>total revisions: 10; selected revisions: 10</p><p>description:</p><p>----------------------------</p><p>revision 1.10</p><p>date: 2014/01/01 11:40:13; author: cvsusers; state: Exp; lines: +9 -9</p><p> Commented-out the USB defines and the few USB calls that were still left</p><p> (now using XPort for I/O and debug messages).</p><p>----------------------------</p><p>revision 1.9</p><p>date: 2014/01/01 03:07:48; author: cvsusers; state: Exp; lines: +3 -2</p><p> Added initialization of owbus_direction to "input".</p><p> Changed OWSearchnTell() timing to once every 30 seconds (for testing).</p><p>----------------------------</p><p>revision 1.8</p><p>date: 2014/01/01 02:32:47; author: cvsusers; state: Exp; lines: +7 -7</p><p> Changed OWDEBUG constant to a bit (from a byte) to use boolean logic (as</p><p> it should have been from the start).</p><p>----------------------------</p><p>revision 1.7</p><p>date: 2013/02/28 22:53:46; author: cvsusers; state: Exp; lines: +25 -12</p><p> Added small loop to trigger one-wire reads based on a settable minute</p><p> count (from 1 to 255 minutes).</p><p>----------------------------</p><p>revision 1.6</p><p>date: 2013/02/26 21:51:35; author: cvsusers; state: Exp; lines: +27 -1</p><p> Added in one-wire support.</p><p>----------------------------</p><p>revision 1.5</p><p>date: 2013/02/26 21:25:46; author: cvsusers; state: Exp; lines: +64 -35</p><p> Updated to use dutycycle-ratio. Changed "PWM_lr" variable to "PWM_ratio" globally.</p><p> Added a second timer slot to the interrupt-driven delay routine.</p><p> Added a short routine to limit the number of PWM updates to a maximum of</p><p> five per second to help stability.</p><p> Updated omments in a few places.</p><p>----------------------------</p><p>revision 1.4</p><p>date: 2013/02/05 12:29:19; author: cvsusers; state: Exp; lines: +411 -39</p><p> Added xport.jal and xport_defs.jal to support serial debug using the</p><p> XPort module connected to the serial port lines.</p><p> Minor change to voltage specifier in calc_table script.</p><p> Added xport support to the Makefile.</p><p> Added tons and tons and tons of changes to the main.jal file (because</p><p> the CVS server was down for a couple of weeks) to support the XPort and to</p><p> try adding PID (proportional, integrated and differential) control</p><p> to the PWM/ADC feedback loop. Somewhat less than successful (the old</p><p> method of using a set value depending on the output offset worked</p><p> much more reliably).</p><p>----------------------------</p><p>revision 1.3</p><p>date: 2012/12/22 13:17:39; author: cvsusers; state: Exp; lines: +3 -1</p><p> Added USB flush command into top of forever loop to ensure that</p><p> the USB gets serviced on a regular basis.</p><p>----------------------------</p><p>revision 1.2</p><p>date: 2012/12/22 11:54:52; author: cvsusers; state: Exp; lines: +36 -29</p><p> Updated to use "pwm6" instead of "pwm1" (valid PWM output on pin 27 now).</p><p> Updated to initialize USB (unsuccessful).</p><p>----------------------------</p><p>revision 1.1</p><p>date: 2012/12/16 01:28:40; author: cvsusers; state: Exp;</p><p> Simplified main.jal for testing PWM and ADC routines.</p><p>=============================================================================</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5474/log/17104-the-esp8266">The ESP8266</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/5474/log/17104#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17104"><p>Everyone and his dog has heard of the ESP8266 by now (and if your dog hasn't, where has it been ...under a rock?).  The price of the ESP8266 modules makes them pretty much irresistible to the hobby user.  The fact that the documentation and API sucked so badly initially slowed most of us down for a while, but Espressif have done a reasonable job in addressing those issues, while the real, die-hard developers don't let minor problems like that slow them down anyway and have already created some really outstanding projects for the rest of us slowcoaches to build on (Sprite_tm's esphttpd, Tuanpmt's MQTT, Zeroday's LUA nodemcu are three great examples of projects which have helped countless other people to get a handle on the ESP8266).</p><p>Of course I snagged a couple of ESP8266's fairly early on (I skipped the minimal-featured ESP-01 and went for the ESP-03 instead).  I slapped them onto some stripboard (if you don't happen to have $50-worth of purple gift certificates, I can recommend the Sunhayato ICB-86), flashed them with something useful and started playing.</p><p><img src="https://cdn.hackaday.io/images/6066281430311425358.JPG" alt="An ESP8266 development board" style="display: block; margin: auto;"></p><p>The board above has the ESP8266-03 module centre-left, a MOSFET voltage converter for the USB TX/RX lines directly above it, a 3v3 voltage regulator at the right-hand edge, a DS18S20 one-wire sensor over next to the regulator, a switch pack for setting the ESP into program mode and, at the top right, a connector for a Nokia 5110 LCD display.  </p><p>This little unit, along with Tuanpmt's MQTT project for the ESP, has me rethinking the whole heat-vent controller project.  The low-end PICs with an I2C interface to the PIC18F have gone out of the window.  The ESP board means we can now put the temperature sensors and the individual room sensor/display/control units way across the other side of the room, instead of needing to be positioned on the wall adjacent to the location of the PIC18F master (because of I2C bus length restrictions).  We already have a couple of very low power mini-servers running round the clock (providing DHCP/DNS/NTP and web services) and now one of them is also running an MQTT server, too.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5474/log/17173-jaluino-bee-v2">Jaluino Bee v2</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/5474/log/17173#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17173"><h2>Hardware iterations:</h2><p>Once you get your prototype hardware kinda' running, you suddenly find yourself with the issue of carrying on development without breaking what you already have.  For software this is relatively easy,  use CVS, git or whatever your preferred method of source code control is.  For hardware, you pretty much need to have a second unit available so that you can continue to use rev-1 while still developing on rev-1A.  This is all fine and dandy when you've cast your design in stone and had PCBs produced, but becomes a little more time consuming when everything is still on stripboard.  So, I cheated again...</p><p>A while back, [Seb] of the <a href="https://groups.google.com/forum/#!forum/jallib" target="_blank">JALLIB group</a>, very kindly sent me a <a href="http://jaluino.org/category/jaluino-bee" target="_blank">JALuino Bee v2 board</a> for evaluation (it's a great little board and a wonderful advertisement for JALv2 and JALLIB) which I'd played with, but hadn't really put to any good use yet.  The part of this project which I was stumbling over at the time was the XPort implementation (and trying to get a simple, "curses" like library working), so I pressed the "Bee" board into use as a development system, cobbled together with yet another stripboard with the actual XPort and voltage regulator on-board.</p><p><img src="https://cdn.hackaday.io/images/8347941430440186877.jpg"></p><p>It may look a little Heath Robinson, but it works fine and saved me a ton of time over building another complete PIC18 main board.  Thanks again Sebastien, the "Bee v2" rocks!</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5474/log/17868-esp8266-esp12-eagle-part">ESP8266-ESP12 Eagle Part</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5474/log/17868#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17868"><p><a href="https://github.com/PuceBaboon/Share_the_Warmth/blob/master/eagle/ESP8266-ESP12.lbr">Just added  in an Eagle library file </a>for the ESP-12 with the infamous GPIO04 and GPIO05 pin-swap problem corrected.  I don't have an actual, physical PCB with this part mounted on it yet, so double check the library if you order any boards before I do (I'm a little bit worried that the pad lands may not be wide enough for easy, manual soldering).  Updates welcome!</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5474/log/19058-a-different-direction">A different direction...</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5474/log/19058#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19058"><p>As mentioned (briefly) in a previous log, I was (note the use of the past tense there!) impressed with the new kid on the block, the ESP8266 and had hatched a cunning plan to  use a bunch of them as remote temperature sensors  and room thermostats for this project.   However, as anyone who has touched an ESP will already know by now, these neat little devices also have an additional feature ...a built in worm-hole which sucks all of the time out of your life space and tunnels it into a black hole in a parallel universe (same place as all of those odd socks end up!).  Trying to do anything with these modules can take the odd couple of centuries (and at the end of that time, you might just end up with someone else's odd sock, rather than a functioning ESP).</p><p><img src="https://cdn.hackaday.io/images/339731433507353094.jpg"></p><p>Recently I've been trying to get the I2C interface to work between an ESP and a DS3231 RTC module (the el-cheapo, middle kingdom version, with the AT24C32 memory chip on the same PCB).  I have it on good authority that it works, as Richard Burton has spent a lot of time putting together libraries for both the <a href="http://richard.burtons.org/2015/04/23/real-time-clock-ds1307ds3231-for-the-esp8266/" target="_blank">DS3231 and the AT24C32 (and his blog is a pretty good read for anyone interested in the ESP)</a>.  However, my attempts to get it to work ended with a pile of odd socks of unknown origin and nothing much else.  &lt;TL;DR&gt; The short story is, if you want to use the I2C funtionality provided by the Espressif IoT SDK, you <strong>must </strong>call :-</p><pre>i2c_master_gpio_init()</pre><strong><em></em></strong><p>   ...before doing anything else (and after having declared which GPIO pins you want to use as SDA and SCL).  This call will set the GPIOs to "open drain" mode and then call the I2C initialize routine before returning.  [The long, Hackaday-fail-of-the-week style story <a href="https://esp8266hints.wordpress.com/2015/06/04/sdk-i2c-code-todays-duh-story/" target="_blank">is here, if you're interested</a>, BTW]</p><p>Okay, so finally I have I2C working and can talk to the DS3231.  As I already mentioned in the main project description, the master microcontroller, the PIC18F27J53 already has a RTC (one of the reasons it was chosen for this project to begin with), so why would I need another?  Well, the DS3231 has a couple of very neat properties.  One is that it has an on-chip temperature sensor (to adjust the internal oscillator for ambient temperature variations) which is not only fairly accurate, but also easy to read (integer part of the temperature in one byte and the fractional part in two bits of the next byte).  It (the DS3231) also has a very versatile alarm setting, allowing easy configuration of repeatable alarms for a wide range of time periods with (importantly) an open-drain output for the alarm output.</p><p>Additionally, the alarms and alarm output are both still available when the DS3231 is running from the back-up, coin-cell battery.  What all of this means is that we can now use the combined ESP8266 + DS3231 module as a standalone, battery-powered temperature sensor or thermostat module, with the main battery only powering the ESP when woken by the alarm from the DS3231.  This should, in theory anyway, get us past the main bugbear of the ESP, its fairly massive current consumption when active.</p><p>We have at least two options for this mode of operation.  The first is to use the DS3231 alarm as an interrupt on the ESP reset pin (instead of connecting it to GPIO16 for normal deep-sleep interrupts) and the second. more interesting one, to use the DS3231 alarm line to control the gate of a small P-channel MOSFET to  switch  VCC to the ESP, for a very nearly zero current  "sleep".</p><p>Stay tuned to find out which of these methods turns out to be the most effective (with the next update due in about, oh, three and a half odd socks).</p></div>
                            </div>
                        </li>
                    
                </ul>

                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'xX3cjJAo-ohlYuhgh3qLYThHHnkhSMPOXSHk';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>