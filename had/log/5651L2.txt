<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; HOMER &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F5651%2Flogs%3Fpage%3D2">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/5651-homer">HOMER</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">2D GPU: HD resolution @ 60Hz, HDMI, double buff, hardware acceleration, USB config upgrade, ... For ARDUINO &amp; other ÂµC</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/35232-monnoliv" title="Visit Profile">monnoliv</a><span>&bull;</span>
                
                3 months ago<span>&bull;</span><a href="/project/5651#discussion-list" title="See Comments">13 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/5651-homer">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/5651/logs/sort/newest">Newest</option>
                    <option value="/project/5651/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/5651/log/22185-homer-wp4-sprites">HOMER WP4: Sprites</a></h2>
                            <small class="authorship">13 days ago  &bull;
                                <a class="gray-link" href="/project/5651/log/22185#discussion-list">
                                    3 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22185"><p>At least I managed to discuss with the QSPI flash. Then here are some blobs (sprites) of Lisa :-)</p><p>in front of 200 lines moving and two clip area.</p><p>The image on screen is better than this bloody video, I can&apos;t figure out how to upload a good quality one.</p><p><iframe width="500" height="281" src="//www.youtube.com/embed/tJr6ra_wDRU" frameborder="0" allowfullscreen=""></iframe><br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5651/log/22928-homer-wp5-fpga-conf-via-usb">HOMER WP5: FPGA conf via USB</a></h2>
                            <small class="authorship">3 days ago  &bull;
                                <a class="gray-link" href="/project/5651/log/22928#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22928"><p>I&apos;ve managed to do a better video thanks to a tripod.</p><p>Progress:</p><p>- Now, it&apos;s possible to upload the FPGA configuration file via USB (VCOM port). It remains to store this file into the FLASH next to the LPC812, then the board will be ready at power on.</p><p>- I&apos;ve made a little python application to do some tests with the board but also -and mainly- to upload image files to the embedded flash.</p><p><img src="https://cdn.hackaday.io/images/4640291439670162411.jpg"></p><br><p><iframe width="500" height="281" src="//www.youtube.com/embed/NR3BNg2PVyw" frameborder="0" allowfullscreen=""></iframe></p><p>Here is the source C code for the animation. This code can easily be embedded in a small 8bit uC.<br></p><pre class="hljs cpp">	//Init LisaGlyph
	<span class="hljs-keyword">for</span> (uint32_t i=<span class="hljs-number">0</span>; i&lt;LISA_GLYPHS; i++)
		GlyphLisa[i] = LISA_FL_START_ADDRESS + i * LISA_FL_STEP_ADDRESS;

	<span class="hljs-regexp">//</span>Init Lisa<span class="hljs-string">
	for (uint32_t i=0; i&lt;N_LISA; i++) {
		Lisa[i].size = (SIZE_t){ LISA_SIZE_W, LISA_SIZE_H};
		Lisa[i].pos.X = rand() % 1000;
		Lisa[i].pos.Y = rand() % 500;
		Lisa[i].inc.X = rand() % 10 + 0.5;
		Lisa[i].inc.Y = i / 10.0 + 0.5;
		Lisa[i].idxGlyph = 0;
	}

	//Init HomerGlyph
	for (uint32_t i=0; i&lt;HOMER_GLYPHS; i++)
		GlyphHomer[i] = HOMER_FL_START_ADDRESS + i * HOMER_FL_STEP_ADDRESS;

	//Init Homer</span>
	<span class="hljs-keyword">for</span> (uint32_t i=<span class="hljs-number">0</span>; i&lt;N_HOMER; i++) {
		Homer[i].size = (SIZE_t){ HOMER_SIZE_W, HOMER_SIZE_H};
		Homer[i].<span class="hljs-keyword">pos</span>.X = <span class="hljs-keyword">rand</span>() % <span class="hljs-number">1000</span>;
		Homer[i].<span class="hljs-keyword">pos</span>.Y = <span class="hljs-keyword">rand</span>() % <span class="hljs-number">500</span>;;
		Homer[i].inc.X = <span class="hljs-keyword">rand</span>() % <span class="hljs-number">10</span>;
		Homer[i].inc.Y = i / <span class="hljs-number">2.0</span>;
		Homer[i].idxGlyph = <span class="hljs-number">0</span>;
	}

	//Init BallGlyph
	<span class="hljs-keyword">for</span> (uint32_t i=<span class="hljs-number">0</span>; i&lt;BALL_GLYPHS; i++)
		GlyphBall[i] = BALL_FL_START_ADDRESS + i * BALL_FL_STEP_ADDRESS;

	Ball.size = (SIZE_t){ BALL_SIZE_W, BALL_SIZE_H};
	Ball.<span class="hljs-keyword">pos</span>.X = <span class="hljs-number">500</span>;
	Ball.<span class="hljs-keyword">pos</span>.Y = <span class="hljs-number">100</span>;
	Ball.vit.X = <span class="hljs-number">7.0</span>;
	Ball.acc.X = <span class="hljs-number">0</span>;
	Ball.vit.Y = <span class="hljs-number">0</span>;
	Ball.acc.Y = <span class="hljs-number">1.5</span>;
	Ball.idxGlyph = <span class="hljs-number">0</span>;


	GlyphMur = MUR_FL_START_ADDRESS;
	Mur.size = (SIZE_t){ MUR_SIZE_W, MUR_SIZE_H};
	Mur.<span class="hljs-keyword">pos</span>.X = <span class="hljs-number">500</span>;
	Mur.<span class="hljs-keyword">pos</span>.Y = <span class="hljs-number">719</span>-<span class="hljs-number">512</span>;

	<span class="hljs-regexp">//</span>Init display
	GPUstorePalette(<span class="hljs-number">0</span>);
	GPUclipArea((COORD_t){<span class="hljs-number">0</span>, <span class="hljs-number">0</span>}, (COORD_t){<span class="hljs-number">1279</span>, <span class="hljs-number">719</span>});

	<span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>) {

		GPUclearScreen(<span class="hljs-number">45</span>);

		<span class="hljs-keyword">for</span> (uint32_t i=<span class="hljs-number">0</span>; i&lt;N_HOMER/<span class="hljs-number">2</span>; i++)
			GPUcopyBlob(
					GlyphHomer[ Homer[i].idxGlyph ],
					(COORD_t){ (int16_t)Homer[i].<span class="hljs-keyword">pos</span>.X, (int16_t)Homer[i].<span class="hljs-keyword">pos</span>.Y },
					Homer[i].size,
					<span class="hljs-number">0</span>
					);

		<span class="hljs-keyword">for</span> (uint32_t i=<span class="hljs-number">0</span>; i&lt;N_LISA/<span class="hljs-number">2</span>; i++)
			GPUcopyBlob(
					GlyphLisa[ Lisa[i].idxGlyph ],
					(COORD_t){ (int16_t)Lisa[i].<span class="hljs-keyword">pos</span>.X, (int16_t)Lisa[i].<span class="hljs-keyword">pos</span>.Y },
					Lisa[i].size,
					<span class="hljs-number">0</span>
					);

		GPUcopyBlob(
				GlyphMur,
				(COORD_t){ (int16_t)Mur.<span class="hljs-keyword">pos</span>.X, (int16_t)Mur.<span class="hljs-keyword">pos</span>.Y },
				Mur.size,
				<span class="hljs-number">0</span>
				);

		<span class="hljs-keyword">for</span> (uint32_t i=N_LISA/<span class="hljs-number">2</span>; i&lt;N_LISA; i++)
			GPUcopyBlob(
					GlyphLisa[ Lisa[i].idxGlyph ],
					(COORD_t){ (int16_t)Lisa[i].<span class="hljs-keyword">pos</span>.X, (int16_t)Lisa[i].<span class="hljs-keyword">pos</span>.Y },
					Lisa[i].size,
					<span class="hljs-number">0</span>
					);

		<span class="hljs-keyword">for</span> (uint32_t i=N_HOMER/<span class="hljs-number">2</span>; i&lt;N_HOMER; i++)
			GPUcopyBlob(
					GlyphHomer[ Homer[i].idxGlyph ],
					(COORD_t){ (int16_t)Homer[i].<span class="hljs-keyword">pos</span>.X, (int16_t)Homer[i].<span class="hljs-keyword">pos</span>.Y },
					Homer[i].size,
					<span class="hljs-number">0</span>
					);


		GPUcopyBlob(
				GlyphBall[ Ball.idxGlyph ],
				(COORD_t){ (int16_t)Ball.<span class="hljs-keyword">pos</span>.X, (int16_t)Ball.<span class="hljs-keyword">pos</span>.Y },
				Ball.size,
				<span class="hljs-number">0</span>
				);

		GPUdrawLine((COORD_t){<span class="hljs-number">0</span>, <span class="hljs-number">0</span>}, (COORD_t){ <span class="hljs-number">1279</span>, <span class="hljs-number">0</span>}, <span class="hljs-number">15</span>, <span class="hljs-number">0</span>);
		GPUdrawLine((COORD_t){<span class="hljs-number">0</span>, <span class="hljs-number">0</span>}, (COORD_t){ <span class="hljs-number">0</span>, <span class="hljs-number">719</span>}, <span class="hljs-number">15</span>, <span class="hljs-number">0</span>);
		GPUdrawLine((COORD_t){<span class="hljs-number">1279</span>, <span class="hljs-number">0</span>}, (COORD_t){ <span class="hljs-number">1279</span>, <span class="hljs-number">719</span>}, <span class="hljs-number">15</span>, <span class="hljs-number">0</span>);
		GPUdrawLine((COORD_t){<span class="hljs-number">0</span>, <span class="hljs-number">719</span>}, (COORD_t){ <span class="hljs-number">1279</span>, <span class="hljs-number">719</span>}, <span class="hljs-number">15</span>, <span class="hljs-number">0</span>);

		<span class="hljs-keyword">for</span> (uint32_t i=<span class="hljs-number">0</span>; i&lt;N_LISA; i++) {
			Lisa[i].<span class="hljs-keyword">pos</span>.X += Lisa[i].inc.X;
			Lisa[i].<span class="hljs-keyword">pos</span>.Y += Lisa[i].inc.Y;

			<span class="hljs-keyword">if</span> (Lisa[i].<span class="hljs-keyword">pos</span>.X &gt; SCR_W - Lisa[i].size.W  || Lisa[i].<span class="hljs-keyword">pos</span>.X &lt; <span class="hljs-number">0</span> ) {
				Lisa[i].inc.X = - Lisa[i].inc.X;
				Lisa[i].<span class="hljs-keyword">pos</span>.X += Lisa[i].inc.X;
			}
			<span class="hljs-keyword">if</span> (Lisa[i].<span class="hljs-keyword">pos</span>.Y &gt; SCR_H - Lisa[i].size.H || Lisa[i].<span class="hljs-keyword">pos</span>.Y &lt; <span class="hljs-number">0</span> ) {
				Lisa[i].inc.Y = - Lisa[i].inc.Y;
				Lisa[i].<span class="hljs-keyword">pos</span>.Y += Lisa[i].inc.Y;
			}

			Lisa[i].idxGlyph = ((uint16_t)(Lisa[i].<span class="hljs-keyword">pos</span>.X/<span class="hljs-number">5</span>)) % LISA_GLYPHS;
		}

		<span class="hljs-keyword">for</span> (uint32_t i=<span class="hljs-number">0</span>; i&lt;N_HOMER; i++) {
			Homer[i].<span class="hljs-keyword">pos</span>.X += Homer[i].inc.X;
			Homer[i].<span class="hljs-keyword">pos</span>.Y += Homer[i].inc.Y;

			<span class="hljs-keyword">if</span> (Homer[i].<span class="hljs-keyword">pos</span>.X &gt; SCR_W - Homer[i].size.W  || Homer[i].<span class="hljs-keyword">pos</span>.X &lt; <span class="hljs-number">0</span> ) {
				Homer[i].inc.X = - Homer[i].inc.X;
				Homer[i].<span class="hljs-keyword">pos</span>.X += Homer[i].inc.X;
			}
			<span class="hljs-keyword">if</span> (Homer[i].<span class="hljs-keyword">pos</span>.Y &gt; SCR_H - Homer[i].size.H || Homer[i].<span class="hljs-keyword">pos</span>.Y &lt; <span class="hljs-number">0</span> ) {
				Homer[i].inc.Y = - Homer[i].inc.Y;
				Homer[i].<span class="hljs-keyword">pos</span>.Y += Homer[i].inc.Y;
			}

			Homer[i].idxGlyph = ((uint16_t)(Homer[i].<span class="hljs-keyword">pos</span>.X/<span class="hljs-number">20</span>)) % HOMER_GLYPHS;
		}

			Ball.vit.X += Ball.acc.X;
			Ball.vit.Y += Ball.acc.Y;

			Ball.<span class="hljs-keyword">pos</span>.X += Ball.vit.X;
			Ball.<span class="hljs-keyword">pos</span>.Y += Ball.vit.Y;



			<span class="hljs-keyword">if</span> (Ball.<span class="hljs-keyword">pos</span>.X &gt; SCR_W - Ball.size.W  || Ball.<span class="hljs-keyword">pos</span>.X &lt; <span class="hljs-number">0</span> ) {
				Ball.vit.X = - Ball.vit.X;
				Ball.<span class="hljs-keyword">pos</span>.X += Ball.vit.X;
			}
			<span class="hljs-keyword">if</span> (Ball.<span class="hljs-keyword">pos</span>.Y &gt; SCR_H - Ball.size.H || Ball.<span class="hljs-keyword">pos</span>.Y &lt; <span class="hljs-number">0</span> ) {
				Ball.vit.Y = - Ball.vit.Y;
				Ball.<span class="hljs-keyword">pos</span>.Y += Ball.vit.Y;
			}

			Ball.idxGlyph = ((uint16_t)(Ball.<span class="hljs-keyword">pos</span>.X/<span class="hljs-number">5</span>)) % BALL_GLYPHS;


		<span class="hljs-regexp">//</span>Display it!
		GPUswapBuffer();

	}</pre><p>Here is for example the C definition of a GPU function, Tx_Buff is a buffer whose the byte elements are sent to the SPI. Address is the blob address in the 8MBytes Flash connected to the FPGA.</p><p>Here I use DMA but simple transfert work also.</p><pre class="hljs cpp">void <span class="hljs-constant">GPUcopyBlob</span>(uint32_t <span class="hljs-constant">Address</span>, <span class="hljs-constant">COORD_t</span> <span class="hljs-constant">P1</span>, <span class="hljs-constant">SIZE_t</span> <span class="hljs-constant">Size</span>, uint8_t operation)
{
	<span class="hljs-constant">Tx_Buf</span>[<span class="hljs-number">0</span>] = <span class="hljs-constant">CMD_COPY_BLOB</span>;
	<span class="hljs-constant">Tx_Buf</span>[<span class="hljs-number">1</span>] = <span class="hljs-number">12</span>; <span class="hljs-regexp">//</span><span class="hljs-constant">DATA</span> <span class="hljs-constant">LENGTH</span>
	<span class="hljs-constant">Tx_Buf</span>[<span class="hljs-number">2</span>] = <span class="hljs-constant">Address</span> <span class="hljs-prompt">&gt;&gt; </span><span class="hljs-number">16</span>;	<span class="hljs-regexp">//</span> <span class="hljs-constant">FlashAddress</span> <span class="hljs-constant">MSB</span>
	<span class="hljs-constant">Tx_Buf</span>[<span class="hljs-number">3</span>] = <span class="hljs-constant">Address</span> <span class="hljs-prompt">&gt;&gt; </span><span class="hljs-number">8</span>;	<span class="hljs-regexp">//</span> <span class="hljs-constant">FlashAddress</span> mSB
	<span class="hljs-constant">Tx_Buf</span>[<span class="hljs-number">4</span>] = <span class="hljs-constant">Address</span>;		<span class="hljs-regexp">//</span> <span class="hljs-constant">FlashAddress</span> <span class="hljs-constant">LSB</span>
	<span class="hljs-constant">Tx_Buf</span>[<span class="hljs-number">5</span>] = <span class="hljs-constant">P1</span>.<span class="hljs-constant">X</span> <span class="hljs-prompt">&gt;&gt; </span><span class="hljs-number">8</span>;
	<span class="hljs-constant">Tx_Buf</span>[<span class="hljs-number">6</span>] = <span class="hljs-constant">P1</span>.<span class="hljs-constant">X</span>;
	<span class="hljs-constant">Tx_Buf</span>[<span class="hljs-number">7</span>] = <span class="hljs-constant">P1</span>.<span class="hljs-constant">Y</span> &gt;&gt; <span class="hljs-number">8</span>;
	<span class="hljs-constant">Tx_Buf</span>[<span class="hljs-number">8</span>] = <span class="hljs-constant">P1</span>.<span class="hljs-constant">Y</span>;
	<span class="hljs-constant">Tx_Buf</span>[<span class="hljs-number">9</span>] = <span class="hljs-constant">Size</span>.<span class="hljs-constant">W</span> &gt;&gt; <span class="hljs-number">8</span>;
	<span class="hljs-constant">Tx_Buf</span>[<span class="hljs-number">10</span>] = <span class="hljs-constant">Size</span>.<span class="hljs-constant">W</span>;
	<span class="hljs-constant">Tx_Buf</span>[<span class="hljs-number">11</span>] = <span class="hljs-constant">Size</span>.<span class="hljs-constant">H</span> &gt;&gt; <span class="hljs-number">8</span>;
	<span class="hljs-constant">Tx_Buf</span>[<span class="hljs-number">12</span>] = <span class="hljs-constant">Size</span>.<span class="hljs-constant">H</span>;
	<span class="hljs-constant">Tx_Buf</span>[<span class="hljs-number">13</span>] = operation;

	<span class="hljs-regexp">//</span> <span class="hljs-constant">Start</span> transmission
	<span class="hljs-constant">SSP_DMA_Start</span>(<span class="hljs-number">14</span>, <span class="hljs-constant">Tx_Buf</span>, <span class="hljs-constant">Rx_Buf</span>);
}</pre><br><p>I&apos;ve made a SPI speed test, it&apos;s possible to go up to 32Mbits/s. That&apos;s well within the need. SPI is not the bottleneck here since the receive only commands, not big blobs of data.</p></div>
                            </div>
                        </li>
                    
                </ul>

                
                <div class="pagination">
                    
                    <a href="?page=1" class="grey-gold-button prev-button show">Previous</a>
                    
                    
                </div>
                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'TcOklSlj-3KKyo5BEQXCKKfsg3vVSW80RHqU';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>