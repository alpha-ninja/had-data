<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; Improve the Haber process &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F4689%2Flogs%3Fpage%3D2">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/4689-improve-the-haber-process">Improve the Haber process</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">See if ultrasonic cavitation can be used to fixate atmospheric Nitrogen less expensively than the Haber process.</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/56245-peter-walsh" title="Visit Profile">Peter Walsh</a><span>&bull;</span>
                
                5 months ago<span>&bull;</span><a href="/project/4689#discussion-list" title="See Comments">23 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/4689-improve-the-haber-process">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/4689/logs/sort/newest">Newest</option>
                    <option value="/project/4689/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/4689/log/16493-april-of-the-difficulties">April of the Difficulties</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/4689/log/16493#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-16493"><p>I'm a bit further along in the project than the build logs might suggest, and am stalled while I sort out a few issues.</p><p>Here's what's going on ATM.</p><p>(Give feedback if you don't like these "Peyton Place" type of status updates.)</p><hr><h2>Transducer resonance isn't acting as expected</h2><p>I <a href="https://hackaday.io/project/4689-improve-the-bosch-haber-process/log/16065-measuring-resonant-frequency-the-easier-way">wrote a program</a> for Arduino hardware to automatically sweep through frequencies and determine the transducer resonance point, and this seems to work as expected.</p><p>When I cut/paste data into LibreOffice and plot the results, there's an unaccountable spike in the data right at the resonance point. This is reproducible and not a bug in the program so far as I can tell, and it needs to be addressed in order to get accurate transducer measurements.</p><p>I made a list of possible explanations, and am in the process of testing and eliminating each.</p><p>1) A bug in the transducer program</p><p>2) Arduino hardware not powerful enough or otherwise not suitable for excitation</p><p>3) Poorly chosen component values for the interface circuit</p><p>4) An artifact of using square waves instead of sine waves to energize the transducer</p><p>5) Defective transducer/artifact of the transducer</p><p>6) Some other explanation</p><p>(NB: The Y-axis scale is in AtoD counts, which is upside down from the normal impedance plot. Maximum AtoD voltage is minimum impedance.)</p><p><img src="https://cdn.hackaday.io/images/9041881428974992402.png" style="width: 343px; height: 194.032846715328px;"></p><hr><h2>Horn is much longer than needed</h2><p>I used the speed of sound in aluminum to calculate the proper horn length (1/2 wavelength), and then cast and turned down a step horn.</p><p>'Turns out, there's two speeds of sound in Aluminum, and I used the wrong one (*sigh*). The 6400 m/s value is the speed of sound in bulk material, but it's 5100 m/s in a cylinder. I have no idea why the speeds would be different for different geometries, but there are definitely two values cited on the 'net depending on which source you use. Looking at <a>Lindsay Wilson's page</a> as a comparison check indicates that my horn 25% too long.</p><p>Not a big issue, it only means I have to face off the horn to bring it closer to the required length. I should also shorten the casting form.</p><hr><h2>Attaching horn to transducer has no effect</h2><p>I wrote a program for the PC which triggers the frequency sweep and pops up a chart (like the one shown above) so I don't have to keep cutting/pasting data into LibreOffice to see the results. This means I can take my laptop to <a href="http://www.makeitlabs.com/">the hackerspace</a> and shorten the horn using their lathe, then quickly see what this does to the resonant frequency. Hit uparrow/enter and it automatically triggers the sweep.</p><p>(I'll put this program up on GitHub along with everything else.)<br></p><p><img src="https://cdn.hackaday.io/images/9992341428977103804.jpg" style="width: 299px; height: 276.076666666667px;"></p><p>...and come to find that shortening the horn has no effect on the system resonance. Possible explanations:</p><p>1) Horn face is not flat, not making good contact with transducer</p><p>2) Problem with interface/electronics/program (see above)</p><p>3) Defective transducer</p><p>4) Other explanation</p><hr><h2>I Need a better way to mount the horn in the lathe</h2><p>Learning to use the lathe has been a journey of discovery. I can hold the horn by either end in the chuck to face off a section (for tuning), but in doing so there's nothing holding the faced end. I can't use a tailstock center because it gets in the way of the facing operation. I can't mount the horn further into the headstock because it's too big for the hole in the middle. The steady rest badly(!) chews up the surface.</p><p>Also, the lathe 3-jaw chuck bites into the end of the horn. This is not an issue for the horn, but it'd be nice to be able to make professional-looking turned items.</p><p><span></span>So far I've been getting by on guts and liquor, but I really need a better solution. Possible solutions include:</p><p>1) Cut out wooden vice jaws and clamp the horn in the/use the Bridgeport mill for facing with a fly cutter.</p><p>2) Make/get a steady rest that uses bearings instead of brass fingers</p><p>3) Hold the horn by the small end in my hexagonal collet form</p><p>4) Find a bigger lathe</p><p>The image below illustrates the problem using the 1:1 step horn, which doesn't have a skinny end. For the step horn I have to clamp the skinny end in the chuck and face the fat end hanging out in empty space. The horn doesn't fit any further into the chuck.<br></p><p><img src="https://cdn.hackaday.io/images/3733891428978117047.jpg"></p><h2><hr></h2><h2>Power supply from eBay is all busted up<br></h2><p>The power supply I ordered from eBay is a bit... pre-owned.</p><p>Pretty much <em>all</em> of the front panel controls are busted in some way or another: the power switch is broken permanently in the "on" position, two of the latching PB switches are jammed or broken, and the digital display doesn't light up. The connectors in the back are rusted, and the outsides are covered with a fine white powder, which I'm privately hoping doesn't turn out to be poisonous or carcinogenic. The insides show signs of severe rusting, as if the unit has been outside for several months.</p><p>The good news is that despite all this, the system seems to work. It fires right up and generates a perfect sine wave. With the power control set to minimum the output sits at 200 volts. Yow!</p><p><img src="https://cdn.hackaday.io/images/5413991428979088791.jpg"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4689/log/16986-analysis-of-the-ebay-ultrasonic-power-supply">Analysis of the eBay ultrasonic power supply</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/4689/log/16986#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-16986"><h2>Summary</h2><p>1) The ultrasonic transducer power supply boards found on eBay are, um... unsuited for hacker use.</p><p>2) Despite being careful, I managed to burn one out.</p><p>3) Apparently, no one else has been able to get these to work, either.<br></p><p>4) I'm a total coward when it comes to high-voltage measurements.<br></p><hr><h2>Hackaday Fail</h2><p>For <a href="https://hackaday.io/project/4689-improve-the-bosch-haber-process">the project</a>, I had originally planned to build and describe two types of ultrasonic experiment kits: a "simple" unit based on an eBay power supply board with a timed relay, which would be simple to purchase and assemble, and a "designed" supply with adjustable power and microprocessor control.</p><p>I've since played around with the ultrasonic power supply board that came with my transducer, and have concluded that these are pretty-well useless for hacker purposes. Additionally, I managed to burn one out despite being careful.</p><p>My explanation of why these boards burn out so easily is below, after some background info about tuned circuits.</p><p>(NB: Apologies for the large images - the <a href="http://hackaday.io" target="_blank">http://hackaday.io</a> system doesn't save the image size properly. It looks good while editing, but after posting the images go back to "full size.")</p><p><img src="https://cdn.hackaday.io/images/4780741430110712512.jpg"></p><hr><h2>Powering a resonant circuit</h2><p>As mentioned in <a href="https://hackaday.io/project/4689-improve-the-bosch-haber-process/log/15687-measuring-resonant-frequency-the-easy-way">a previous post</a>, an ultrasonic transducer is effectively a series resonant LC circuit: the piezo plate electrodes form a capacitor, and the resonating mass acts as an inductance.</p><table><tbody><tr><td><img src="https://cdn.hackaday.io/images/9082821430110123582.png" style="width: 325px; height: 312.84289276808px;"></td><td><img src="https://cdn.hackaday.io/images/1849371430110143832.png" style="width: 414px; height: 312.18444846293px;"></td></tr></tbody></table><p>Since the transducer is an LC circuit, it presents different impedances to the driving circuit at different frequencies. At its resonant frequency (28 KHz), it will appear to be a 25 ohm load, and when driven off-resonance, it will look like 1000. And driving the device at an intermediate frequency will result in an impedance omewhere between the extremes.</p><p>(The high peaks in the plot are the parallel resonant modes, which should be avoided. Most of the off-resonance areas are about 1000 ohms.)</p><p>The eBay transducers are rated at 100 watts, so the next question is: "What level of drive voltage is needed to push 100 watts through the device?"<br></p><p>Power is voltage squared divided by the resistance, which in this case is the impedance to the AC driving voltage, so the needed voltage depends on the driving frequency:</p><p><img src="https://hackaday.io/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20%5Cfrac%7BV%5E2%7D%7BR%7D%20%3D%20P" alt="\color{White} \large \frac{V^2}{R} = P"></p><p><img src="https://hackaday.io/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20V%5E2%20%3D%20P%20%20%5Ctimes%20R" alt="\color{White} \large V^2 = P \times R"></p><p><img src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20V%5E2%20%3D%2025%20%5C%2C%20%5Ctext%7BOhms%7D%20%5Ctimes%20100%20%5C%2C%20%5Ctext%7BWatts%7D" title="\color{White} \large V^2 = 25 \, \text{Ohms} \times 100 \, \text{Watts}" alt="\color{White} \large V^2 = 25 \, \text{Ohms} \times 100 \, \text{Watts}"></p><p><img src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20V%20%3D%2050%20%5C%2C%20%5Ctext%7BVolts%20(at%20resonance)%7D" title="\color{White} \large V = 50 \, \text{Volts (at resonance)}" alt="\color{White} \large V = 50 \, \text{Volts (at resonance)}"></p><p><img src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20V%20%5Capprox%20315%20%5C%2C%20%5Ctext%7BVolts%7D%20%5C%2C%20%5Ctext%7B(off-resonance)%7D" title="\color{White} \large V \approx 315 \, \text{Volts} \, \text{(off-resonance)}" alt="\color{White} \large V \approx 315 \, \text{Volts} \, \text{(off-resonance)}"></p><hr><h2>Tuned horns and cleaning baths<span></span></h2><p><img src="https://cdn.hackaday.io/images/3105771430102369714.png"></p><p>Most ultrasonic applications use a metal horn attached to the transducer to focus the energy into a small area, depending on the application. The horn vibrates at its own resonant frequency, so the resonant frequency of the complete system (transducer+horn) is a melding of the two. Typically, one makes the horn extra long and "trims" it to match the transducer resonance.</p><p><img src="https://cdn.hackaday.io/images/187281430110275720.png"></p><p>An ultrasonic cleaner connects the transducer directly to a metal bath chamber where the ultrasonic energy gets bounced around a lot.<br></p><p>1) The chamber is square(ish), with rounded corners<br></p><p>2) You don't know ahead of time how much liquid is in the chamber</p><p>3) You don't know the density of the liquid (it might not be pure water)</p><p>4) You don't know what or how many things are in the water to be cleaned.</p><p>Because of this, the cleaner bath will never be in sharp resonance as one would get with a tuned horn. The ultrasonic cleaning system should present a high impedance to the driving circuit in all cases.</p><hr><h2>The eBay ultrasonic transducer driver explained</h2><p><img src="https://cdn.hackaday.io/images/7856741430093121127.png"></p><p>Here's the full schematic of the eBay driver board.</p><p>The 120 volt input is rectified (poorly) into 160 volts, then split into a balanced +/- 80 volts by C3/C4. One end of the T1 primary is held to the common midpoint, while Q1 and Q2 alternately switch the other end high (+80 volts) and low (-80 volts). The secondary of T1 amplifies this voltage, while T2 acts as a rude filter for the output waveform. Note that T2 is only used as an inductor - the primary is shorted and grounded to keep it from generating any voltage.</p><p>The transducer oscillations are picked up by L1-1 and delivered to Q1 and Q2 via L1-3 and L1-2. As Q1 powers up the transducer, feedback from L1 will eventually turn it off and Q2 on to power the transducer in the other direction.  As Q2 powers up the transducer, feedback from L1 eventually turns *it* off and Q1 turns on again.</p><p>The output voltage at T1 is about 4x the input voltage from the rectifier/splitter (as gingerly measured using a variac). At full AC voltage, 80 volts becomes 320 volts at the output, which is about right for an off-resonance system.</p><p>I believe this is a variation of a <a href="http://en.wikipedia.org/wiki/Royer_oscillator">Royer oscillator</a>. The system will find and keep the resonant frequency of the "transducer plus system", whatever that may be.</p><hr><h2>Problems with the eBay circuit</h2><p>1) It burns out easily</p><p>The biggest issue with the eBay circuit is that it has a tendency to burn out.</p><p>Referring to the calculations above, the circuit generates voltage appropriate for a fairly high impedance. A bare transducer (nothing attached) will present as a highly tuned circuit with low impedance, drawing some 6x more current than the transistors expect. The transistors burn out within a few seconds (like, three seconds).</p><p>(As an aside, this is why ultrasonic cleaner manuals warn about running with little or no fluid. For instance, the <a href="http://www.nist.gov/ncnr/upload/Branson-1510-DTH-Ultrasonic-Cleaner-Manual.pdf">Branson ultrasonic cleaner user manual</a> has the ominous: "Do not allow the solution to drop more than 3/8 inch below the operating level line with heat or ultrasonics on. Failure to comply may cause transducer and/or heater damage and will void your warranty.")<br></p><p>2) The generated waveform is crappy</p><p><img src="https://cdn.hackaday.io/images/5865701430110315662.jpg"></p><p>The output waveform is nowhere near a sine wave.</p><p>Looking at the circuit, note that the AC is rectified, but not smoothed. With no filter capacitors on the supply, the system is switching bouncy AC at 29 KHz through a high-frequency SMPS transformer.</p><p>This might be OK for ultrasonic cleaning as it only makes the rubble bounce around more, but it's not good for the home lab.</p><p>3) There's no good way to adjust the power</p><p>You could probably run the board from a variac while simultaneously measuring the current, but that's a lot of effort. Additionally, if the system goes out of tune for whatever reason (such as the transducer heating up) the power will drop, and if you adjust the power and the system comes *back* into tune you risk burning out your board.</p><p>It's a lot of trouble to go to, and you have to keep watching it.</p><p>Also, the variac doesn't have much resolution at 1/6 full scale, and it's not clear that the feedback circuit would even work at that low voltage.</p><p>4) The circuit is nigh impossible to measure<br></p><p>A scope probe pretty-much anywhere will change the circuit behavior in bad ways.</p><hr><h2>Parting thoughts</h2><p>As near as I can tell, no one has posted a YouTube video demonstrating a home-built ultrasonic cleaner. (There are some posts that use motors and orbital sanders, but none that are both home-built and actually ultrasonic.)</p><p>Additionally, <a href="http://www.tovatech.com/blog/3398/ultrasonic-cleaner/how-to-make-your-own-diy-homemade-ultrasonic-cleaner-myth-or-fact">this link</a> suggests that *no one* has successfully home-built an ultrasonic cleaner. <a href="http://www.instructables.com/id/Home-Made-Ultrasonic-Cleaning-Tank/">This instructable</a> is the only real home-built ultrasonic cleaner I could find, and he's using a $200 professional board (not the eBay board) *and* he burned one out in the process.</p><p>I realize that used cleaners start at around $50 on eBay, but still - affordable 100 watt ultrasonic transducers would seem to have good hacker potential. I'm surprised no one else is using them for projects.</p><p>I'm currently designing a power supply based on the <a href="http://www.farnell.com/datasheets/36719.pdf">3525</a> PWM controller. These have a sync input which can be used to slave the device to an external clock. I think the transducer feedback can be used as this input, which would make the system self-resonant.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4689/log/17115-new-power-supply-design">New power supply design</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/4689/log/17115#discussion-list">
                                    7 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17115"><h2>Summary</h2><p>I'm designing a hobbyist power supply for ultrasonic transducers in the 100 watt range, with these goals:<br></p><p>1) Automatic resonance seeking</p><p>2) Variable power output</p><p>3) Microcontroller measurement and control</p><p>4) Generally bullet-proof and safe</p><p>Circuit and an explanation are posted below.</p><hr><h2>More Difficulties</h2><p>Someone at <a href="http://www.makeitlabs.com/">my hackerspace</a> took the lathe offline and didn't tell anyone, so I'm blocked from making transducer horns for the moment. They won't let me strangle him, but to be fair, they won't let anyone else strangle him either.</p><p>So I'm concentrating on a new power supply circuit for hobbyists which won't burn out and has some useful features.</p><p>NOTE: This is very much a work in progress. I'm waiting on some parts, I haven't bread-boarded and tested, and it doesn't make sense to capture a circuit before you know it will work.</p><p>Also, I'm not an electronics engineer and this puts me out of my comfort zone, so if you see something fundamentally wrong with the circuit, please let me know.</p><h2>Switcher</h2><p><img src="https://cdn.hackaday.io/images/9213001430327142827.png"></p><p>Compare with the supply <a href="https://hackaday.io/project/4689-improve-the-bosch-haber-process/log/16986-analysis-of-the-ebay-ultrasonic-power-supply">from eBay</a>.<br></p><p>The switcher uses the same standard totem-pole configuration, but with a proper DC supply instead of cheaply-rectified AC mains.</p><p>The user must supply their own 120 watt DC supply in the 12V - 80V range, but these are *common*. A 30 volt 10 amp supply goes for $10 on eBay: it's safe, reliable, and cheap. You can even put two of them in series for higher voltages! (I've never done this, but I'm told it will work.) Switch mode supplies have isolated outputs, so it's OK to connect the outputs in series.</p><p>I'd *like* a system that would work from 12V, thus driven from a computer PSU (those are *really* common), but this depends on the specs of the SMPS transformer. I'll know more a bit later in the project.</p><p>The transistors are a wee bit overspec for the application (35A, 600V). The difference between "50% more than needed" and "insanely overpowered" is a couple of dollars (like, $2), and I want this to be bullet proof. The transistors are typically what burns out if the user makes a mistake, and we can let the fuse do its 'goddam job for once.<br></p><p>On the output side, the capacitor and inductor form a low-pass filter that turns the square-wave into a sine wave.</p><p>The mathematical formula for a square wave is:</p><p><img src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20%5Cfrac%7B4A%7D%7B%5Cpi%7D%5B%5Csin(f)%20%2B%20%5Cfrac%7B1%7D%7B3%7Dsin(3f)%20%2B%20%5Cfrac%7B1%7D%7B5%7Dsin(5f)%20%5Cldots%5D" title="\color{White} \large \frac{4A}{\pi}[\sin(f) + \frac{1}{3}sin(3f) + \frac{1}{5}sin(5f) \ldots]" alt="\color{White} \large \frac{4A}{\pi}[\sin(f) + \frac{1}{3}sin(3f) + \frac{1}{5}sin(5f) \ldots]">Where "A" is the square wave amplitude, and "f" is the frequency.</p><p>If the low-pass filter has a cutoff somewhere between f and 3f, the higher frequencies will be suppressed, presenting only the fundamental to the transducer. As a bonus, the result is slightly higher voltage than the original square wave due to the 4/pi term.</p><p>The capacitor is TBD because the inductor is a SMPS transformer and I don't know what that inductance is yet. Needs to be high voltage with low ESR - probably polypropylene.</p><hr><h2>Synchronization and Power measurement</h2><p><img src="https://cdn.hackaday.io/images/2668711430330864312.png"></p><p>In addition to the transducer, the output goes through an Allegro hall-effect current sensor via PWR-1 and PWR-2, from the switcher. </p><p>The Allegro chip generates a voltage proportional to the current through the transducer. It has low resistance (a few m<span class="st">Ω), 2KV isolation, and an 80kHz bandwidth. This one chip solves a whole lot of issues.</span></p><p><span class="st"></span>The signal from the Allegro chip becomes two outputs: a voltage proportional to current, and a frequency synchronous pulse train.</p><p>The lower path routes the sin wave through an active rectifier, followed by an RC integrator. The output is a DC voltage proportional to the current through the transducer, which is delivered as feedback to the PWM controller.</p><p>The upper path requires a bit of explanation. The SG2535 controller driving the switcher has a "synchronize" input that can be used to slave the internal oscillator to an external clock. The slave signal is a pulse that switches the oscillator from its charge cycle to it's discharge cycle, so to synchronize the chip to the transducer we need to generate pulses at the *peaks* of the sine wave signal. That's what the top path does.</p><p>Referring to the signal images in the circuit, the sine wave is presented to both inputs of an LM339 comparator (typo'ed as LM324) with one input delayed by an RC constant. Since the negative input is delayed, a rising signal will result in a positive output, and a falling signal becomes a negative output. The result is a square wave which is 90 degrees off from the original signal.</p><p>The square wave is presented to both inputs of an XOR gate, and once again one side is delayed by an RC constant. This results in a series of pulses at each transition of the square wave - at twice the original frequency.</p><p>...which is what the SG2535 wants to see for synchronization.</p><p>(If I have interpreted the datasheet correctly. There's *very* little information available about this chip, and as far as I can tell no example circuits on the net use the synchronization feature. And if they did, they would be slaving one SG chip to another, without noting what signal that is.)</p><hr><h2>PWM control</h2><p><img src="https://cdn.hackaday.io/images/6358541430333681693.png"></p><p>The power and synchronization are presented to a UC3525 PWM management chip, which controls the switcher (first image) via PWM-A and PWM-B.</p><p>The UC3525 has an onboard 5.1 volt reference, which runs through a digital potentiometer controlled by the microcontroller. The voltage chosen by the micro is compared to the current signal from the transducer, and used to adjust the PWM width. As the transducer draws more current, the voltage goes up and the PWM controller reduces the pulse width to compensate.</p><p>Negative feedback keeps the system fixed at a power level calculated by the micro, and the sync input keeps the frequency locked to the transducer/system resonant frequency. From the point of view of the micro, it's "set and forget".</p><p>Labels "UC-xxx" represent connections to or from the microcontroller. For example, the micro can turn the output on or off using the SD ("shutdown") input to the switcher.</p><hr><h2>Possible issues</h2><p>My biggest issue ATM is finding vendors and specs for SMPS power transformers, as found in computer power supplies. So far as I can tell, no standard vendor sells them (DigiKey, Farnell, Mouser, Coilcraft, et al). Lots and lots of sellers on AliBaba, but no one has specs.</p><p>I'd *like* to say "pull two transformers from old computer PSUs", because that would be an easy source for the hobbyist, but I suspect there's a lot of variation and being able to tell which ones are good to use is not a casual skill.</p><p>I'd *also* like to point to a list of component vendors, in case the hobbyist just wants to buy the parts and put it together, and maybe sell a parts kit or something. That's hard without a specific vendor and proper specs.</p><p>If anyone knows where to get SMPS transformers cheaply (meaning: not $50 each from a specialty brand) please let me know.</p><p>If anyone sees a flaw in the logic, also please let me know.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4689/log/17444-status">Status</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/4689/log/17444#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17444"><p>Ah, Spring. In the spring a young man's fancy lightly turns to thoughts of...</p><p>Eeek! More than a third of the Hackaday prize time has passed! Have to make some progress real soon or curtail the project goals!</p><p>A status update follows.</p><hr><p><img src="https://cdn.hackaday.io/images/478101430883739908.jpg" alt="" style="width: 354px; height: 334.53px; float: right; margin: 0px 0px 10px 10px;"></p><p>The lathe at <a href="http://www.makeitlabs.com/">my hackerspace</a> is still offline, so I haven't been able to do any more horn tuning. Next week 'fer sure.</p><p>I cast two new horns by way of a casting demo at the space - a 2nd horn for my small (50 Watt) transducer, and one for the large (100 Watt) transducer. I've got pics and intend to make a full blog post (two, actually) with instructions, tips and tricks, etc.</p><p>(ProTip: Don't run the kiln from an extension cord, at the hackerspace, as a casting demo. Kilns and extension cords don't mix. Now I know.)</p><p>After the [abortive] demo, one of the members offered me a piece of round-stock aluminum that's just the right diameter to make the bigger horn. That's about $30 of stock in one piece right there. Thanks, Adam!</p><p>And apropos of nothing, this is why I cast horns instead of, for example, ordering stock from McMaster Carr. I'm not Tony Stark.</p><p>(But to be fair, Stark himself <a href="http://www.imdb.com/title/tt0371746/">cast his first arc reactor</a>, so he too uses this method.)</p><hr><p><img src="https://cdn.hackaday.io/images/4207951430882838750.jpg" alt="" style="width: 313px; height: 261.876666666667px; float: right; margin: 0px 0px 10px 10px;"></p>The PWM controller chips (ziplock bag in middle) have just now arrived, I haven't had a chance to breadboard any.<p>My frequency generator has poor resolution at 28KHz, so I made up a  555-timer squarewave generator (leftmost board) with a 10-turn pot. The pot sits in the middle of the frequency range of the transducer, so there's a lot of resolution with little drift.</p><p>I also breadboarded a SMPS transformer from a computer PSU and a drive transistor (lower-middle board). I also pulled two more transformers for comparison (upper right).</p><p>The good news is that the transformer generates 200 volts AC from a 12 volt supply!</p><p>This is about the right voltage to run 100 watt transducers off-resonance, which means that anyone who wants to make the circuit can get the only expensive-and-hard-to-find part from a junked computer.</p><p>It also means said hacker can run the circuit from a 10-amp 12-volt supply - in all likelihood an old computer PSU will suffice.</p><p>(I think. Time will tell if this is right.)</p><p>But this also means I can't show any progress. The 200 volts would push too much power through the transducer, so I have to get a PWM circuit running that will control power before I can show anything working. Right now I'm limiting power by crowbar'ing a supply that doesn't have overcurrent protection, and that's not an optimal solution.</p><h1><hr></h1><h1>THANK YOU<br></h1><p>to everyone who signed up to follow the project &amp; gave out skulls!</p><p>Getting the E-mail notices from followers/skulls makes me happy, and I save every one. (Not making that up.) </p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4689/log/17654-status-update-may-10">Status update May 10</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/4689/log/17654#discussion-list">
                                    1 comment
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17654"><h2>A quick interlude</h2><p>M.Bindhammer's <a href="https://hackaday.io/project/5460-aspirin-for-everyone">Hackaday Prize project</a> proposes making hand-held chemical reactors for the synthesis of Aspirin.</p><p>Whether making Aspirin locally is cost-effective or not, I like the idea of hand-held chemical reactors that anyone can make. If the "proof of concept" can be made with Aspirin, then his ideas may lead to a wide array of hand-held chemical processing components.</p><p>We have a laser cutter at <a href="http://www.makeitlabs.com/">my space</a>, so I offered to make and send him some prototypes. The results are below.</p><p>The first one on the left is a vacuum filtration system. You put a section of filter in the horizontal slot at the top, then connect a vacuum pump to the passage leading from the side. (Doesn't photograph well - see his project page for info.)</p><p>The second one (middle) looks a lot like a reflux distillation system, which would be totally awesome if that's what it is &amp; it can be made to work. The third one (right) is how the plastic comes from the laser: sticky paper protecting the surface, and without the intervening blocks removed.</p><p>These are comprised of 3 acrylic pieces: a clear face and back plate (upper left) with 0.3" ivory acrylic in between. To assemble, you line up the middles on the plates, then dribble a little methylene chloride (MEC) at the interfaces using a syringe. MEC, an acrylic solvent, gets soaked up by capillary action and dissolves some of the acrylic. Then it evaporates, leaving the acrylic pieces welded together.</p><p>If I understand his process, acrylic *should* tolerate the temperatures he needs for his synthesis, and should be immune to the reagents. (And if not, it's still a good material for a physical prototype.)</p><p>Check out  his <a href="https://hackaday.io/project/5460-aspirin-for-everyone">Hackaday Prize project</a> for more info. His ideas hold a lot of promise.</p><p><img src="https://cdn.hackaday.io/images/6013361431244648232.jpg" style="width: 406px; height: 246.983333333333px;"></p><hr><h2>Power supply development is proceeding apace</h2><p>I figured out a lot about computer PSU transformers, and now have a good idea of which ones are good to use for this application; meaning, I can now write a build procedure that describes to others what to look for when scrounging for this part. If everything holds as I think it should, anyone who wants to build an ultrasonic supply can use one PSU for power and cannibalize another one for this singular-and-difficult-to-find part.</p><p>I got my UC3525 SMPS controllers running on a breadboard, and made a new power control board, shown below. Testing starts tomorrow.</p><p><img src="https://cdn.hackaday.io/images/5550031431244788074.jpg" style="width: 417px; height: 232.825px;"></p><br></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4689/log/17894-status-for-may-14">Status for May 14</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/4689/log/17894#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17894"><h2>Summary</h2><p>1) The new driver board works</p><p>2) An ATX supply makes a good DC supply for the driver</p><p>3) An ATX SMPS transformer can drive an ultrasonic transducer</p><p>4) I've ordered parts from DigiKey</p><p>5) My ears hurt, and I don't know why...</p><hr><h2>ATX supply makes a good DC supply</h2><p>I'm using a discarded ATX supply as the DC supply for the ultrasonic driver board. With 12 volts at 15 amps, the system can supply 180 watts of drive power to the transducer circuit. The biggest transducer I can find on eBay is 120 watts, so the range is good.</p><p>I mounted the supply on a board with decent bus connections and a current monitor tap. Harbor Freight was giving out free DVMs at one point, so I got a bunch and use them as embedded current/voltage monitors. The system is pushing 5.23 amps in the image below.</p><p><img src="https://cdn.hackaday.io/images/1388041431583985251.jpg"></p><hr><h2>The new driver board works</h2><p>The driver board, which uses an SMPS transformer scavenged from a different ATX supply, works. The transformer generates enough voltage to drive quite a bit of power through the transducer at resonance - I've had the system "accidentally" up to 17 amps, which is 200 watts, or double the rated transducer output.</p><p>It's a bit noisy, so I have to figure out some way of filtering. Also, I have to add some circuit protections such as zeners on the driver gates and such. Maybe a bypass cap on the gates as well.</p><p>The power driver is the perfboard sitting in front of the current meter (yellow-stripe transformer).</p><p><img src="https://cdn.hackaday.io/images/2202121431584085599.jpg"></p><hr><h2>SMPS is working, manually</h2><p>The SMPS circuit is working manually; meaning, I can adjust the frequency and duty cycle using two pots. I'm waiting on some parts from DigiKey, then I'll be able to hook the system up to an Arduino to monitor and control frequency and power.</p><p><img src="https://cdn.hackaday.io/images/1254601431583478952.jpg"></p><hr><h2>My ears are still ringing</h2><p>While attempting to get a picture of the system pushing 10 amps (120 watts), the system accidentally ran up to 17 amps for a few moments.</p><p>Despite immediately shutting down the system, the transducer managed to walk across the table (no mean feat at 28kHz) and my head has been ringing ever since. And I never heard a thing.</p><p>Yikes!</p><p>I suppose this is the ultrasonic version of playing with lasers, I'll have to come up with some type of safety gear to protect myself. Maybe earplugs?</p><p>Have to do some research...</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4689/log/18128-status-for-may-20">Status for May 20</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/4689/log/18128#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-18128"><h2>Summary<br></h2><p>1) Power supply design is coming along</p><p>2) Final design will require an embedded Arduino Nano</p><p>3) Final design will use a laptop (or desktop) as display</p><hr><h2>Random Status</h2><p>A lot of little things are happening with the project but nothing of special note, so I won't post this to the feed.</p><p>My DigiKey order came in, I'm working up the various device interface software, nothing exceptional.</p><p>I'm looking into generating Hydrogen on a small scale, and collecting plumbing for the experimental setup.<br></p><p>I've resolved the safety issue using a lasercut holder for the transducer with rubber feet so it doesn't skitter across the table when energized, and a sculpted-foam parasol to catch the ultrasonic energy. (Which looks vaguely like to the starship enterprise.)<br></p><p><img src="https://cdn.hackaday.io/images/652251432154409168.jpg" alt="" style="width: 468px; height: 335.010845986985px; float: right; margin: 0px 0px 10px 10px;"></p><p><img src="https://cdn.hackaday.io/images/6127661432154377534.jpg" alt="" style="width: 298px; height: 347.666666666667px; float: left; margin: 0px 10px 10px 0px;"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4689/log/18471-demo-videos">Demo videos!</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/4689/log/18471#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-18471"><h2>Summary</h2><p>1) The power driver board works</p><p>2) The control board works</p><p>3) The basic control software works</p><p>4) I can levitate small bits of paper</p><p>A video demo of ultrasonic levitation showing off the system is below.</p><hr><h2>The power driver board is soldered!<br></h2><p>For my best shot at the next interim prize, I need to show something soldered, and also have a circuit schematic.</p><p>Here's the driver board, and here's the back of the driver board, and here's the schematic. Note the back: it's soldered!</p><table><tbody><tr><td><img src="https://cdn.hackaday.io/images/9429771432598340251.jpg" alt="" style="width: 255px; height: 153.927272727273px;"></td><td><img src="https://cdn.hackaday.io/images/4144551432598379233.jpg" alt="" style="width: 249px; height: 157.7px;"></td><td><img src="https://cdn.hackaday.io/images/6998011432598411559.jpg" alt="" style="width: 164px; height: 149.165829145729px;"></td></tr></tbody></table><hr><h2>The control board is... not soldered!<br></h2><p>I use protoboards when possible - it's easier to tinker with things and fix problems. The driver board handles a lot of power and voltage, so I soldered that, but the control board... it's not soldered. I mounted ICs on carrier boards though, and *theyre* soldered. That counts, right?</p><p>Right now I only have direct control - no feedback. This means that I can set the PWM and frequency, but there's no feedback keeping things at the setpoints. That software hasn't been written yet.</p><p>Here's the control board, and here's the schematic. Note the components on carrier boards - they're soldered!</p><table><tbody><tr><td><img src="https://cdn.hackaday.io/images/869111432598868106.jpg" style="width: 203px; height: 158.34px;"></td><td><img src="https://cdn.hackaday.io/images/1780281432598896464.jpg" style="width: 237px; height: 167.940397350993px;"><br></td></tr></tbody></table><hr><h2>And... the system works!<br></h2><p>Mike Harrison built <a href="https://www.youtube.com/watch?v=qy1w6rTpC2g">an ultrasonic levitation system</a> which was featured <a href="http://hackaday.com/2013/09/20/diy-ultrasonic-acoustic-levitation/">on Hackaday</a> awhile back, so for fun I decided to see if I could reproduce his results. After a few minutes of tinkering, I was able to levitate a small piece of tissue.</p><p>The transducer generates plane waves, which are reflected from the aluminum plate over top. The height of the transducer is adjusted so that the distance to the plate is some multiple of half the wavelength.</p><p>The result is a standing wave with nodes and anti-nodes, which are seen as "steps" as the tissue paper is played up and down.</p><p>I video'd a quick tour of my system, and the levitation results. (Note to self: use better lighting next time.)<br></p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/kyRl_-ReDBs" frameborder="0" allowfullscreen=""></iframe><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/GgWMPX8J9LI" frameborder="0" allowfullscreen=""></iframe><table><tbody><tr><td></td><td></td></tr></tbody></table><hr><h2>A note on Philosophy</h2><p>People keep asking me why I don't "just go buy stuff" for the project - it would make development *so* much easier.</p><p>Usually it's when they hear that I'm casting the aluminum horn. "Just order round stock from McMaster Carr, then you know what alloy you have, you don't have to worry about bubbles, and this-or-that other issue that I've just now thought of. It'd be so much easier..."</p><p>The purpose of the project is to put ultrasonic tools in the hands of hackers, and this year's prize is to change the world, so I'm thinking globally.</p><p>A 2.75" piece of round stock from McMaster Carr costs about $50. While that may not seem like much as an individual purchase, you can't have many $50 purchases in a project before it starts to get out of reach. The project already requires a $50 transducer from eBay, and I don't want to compound the costs.</p><p>Also, I'm regarding people across the world who might not have access to McMaster Carr. African nations, Cuba, maybe some Eastern European places don't have UPS delivery from the US, but might have access to sand, a junked car, an iron pot, and a bonfire.</p><p>So I'm structuring the project to reuse common materials as much as possible. If you can find 2 ATX power supplies, a laptop, and an arduino, you can purchase a transducer for $50 and build the rest for under $50.</p><p>If you're good at scrounging, you might do it for less: power transistors and heat sinks are in old power supplies, and I've seen the digital pots in CDRom drives. You might also be able to find pot ICs on a motherboard or old sound card.</p><p>All the info needed for the project will be available on GitHub: schematics, software, instructions, and where to get materials. Look for it in about 6 months, once the Hackaday prize contest winds down and the development is complete.</p><hr><h2>User supplied display</h2><p>I had originally thought to build a system with an embedded display and control buttons, but thinking it through I now believe a serial interface is more useful.</p><p>Displays come and go faster than <a href="https://www.youtube.com/watch?v=ss_BmTGv43M">Lada Gaga's wardrobe</a>. In five years, I don't want the project to languish because people can't find the specific graphics display needed by the software, and I don't want software versions for different hardware either. Laptops and PCs will be available long into the future, and eliminating that section simplifies the project.</p><p>Also, laptop control means the user can write programs to run the system in ways specific to his needs. With commands such as start/stop/set power/set frequency/set timer available on the serial port, it's not hard to build a scripting system based on Perl or Python to control the system.</p><h2>Embedded Arduino Nano</h2><p>For even more simplicity, I'm using an embedded Arduino Nano as a component.</p><p>A PCB taking an Atmega chip and associated hardware isn't terribly difficult to design and would reduce the costs a *little*, but it's really hard to beat a $2.18 Nano board from eBay. Using the Nano as a component eliminates a lot of tricky soldering, it's known to work, a hacker is more likely to have one on-hand (fewer parts to order), and it can even be socketed so you can remove it and use it for other projects.</p><p>Additionally, I'm discovering that much of the circuitry can be done in software, such as power control and calibration. This makes the control board even simpler to build, It eliminates adjustment pots, the end user doesn't need a scope or DVM for tuning, and so forth.</p><p>All things considered, for the PCB I'm just going to throw in a Nano and be done with it. Maybe have pinouts for either a Nano or a regular Arduino, so the user can just populate whichever one they have on hand.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4689/log/18874-status-for-june-02">Status for June 02</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/4689/log/18874#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-18874"><p>Current status:</p><p>1) Software development of the controller board is coming along</p><p>2) Measuring frequency and pulse width on an Arduino at 30kHz is a hard problem</p><p>3) ...but I think I have it sorted with some additional hardware. Adds a dime to the build cost.</p><p>4) I've built a gas collection system</p><p>5) I can generate (and collect) Hydrogen and Nitrogen as needed for the project.</p><p>6) I'll soon start building the cavitation system</p><p>I was busy with personal obligations, so abbreviated report this week.</p><hr><p>The driver and controller board are working well enough that morphing them into a mature hacker-friendly project is straightforward, and this can happen over June and July at a more leisurely pace. Further updates will probably say "nothing of interesting going on", except for the occasional demo.</p><p>Time for some chemistry!</p><p>I built Nitrogen and Hydrogen generators, as well as a gas collection system. My plan is to generate 1.5L of Hydrogen and 0.5L of Nitrogen, giving 2L of the correct ratio of gases for experimentation. Two litres (at a time) should be plenty for near-term experiments.</p><p>Here's a video of the system generating Nitrogen:</p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/9IVnC_ek2qY" frameborder="0" allowfullscreen=""></iframe><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/f6qLQRBzm50" frameborder="0" allowfullscreen=""></iframe></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4689/log/19194-using-the-uc3525-pulse-width-modulator">Using the UC3525 pulse width modulator</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/4689/log/19194#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19194"><p>For my project I'm building a high voltage ultrasonic power supply (400V, 28kHz) based on the UC3525 pulse width modulation chip.</p><p>There's very little information on the net that explains how to use these chips, so for this week's update I thought I'd write a quick summary.<br></p><hr><h2>Where to get 3525 chips<br></h2><p>Pulse width modulators are common. They're made by TI (UC3525), ON Semiconductor (SG3525), Fairchild (KA3525), and several others. They're available from DigiKey, Mouser, and from eBay in small quantities for about a buck each.</p><p>The datasheet for these chips contains almost no application information. Some have a small section detailing how the "Shutdown" pin can be used to skip a pulse when needed, but others don't even have that.</p><p>The internet isn't much help either. <a href="http://tahmidmc.blogspot.com/2013/01/using-sg3525-pwm-controller-explanation.html">Tahmid's blog</a> has a pin-by-pin functional description with a demonstration circuit, and the <a href="http://www.microsemi.com/document-portal/doc_download/129602-sg1525a-sg1526-and-sg1527a-power-supply-circuits-head-for-simplicity-by-integration">SG153x App Note</a> describes a related chip, but with important differences.</p><p>If you don't understand something here, take a look at <a href="http://tahmidmc.blogspot.com/2013/01/using-sg3525-pwm-controller-explanation.html">Tahmid's blog</a> for a counterpoint explanation.</p><p>Also, <a href="https://www.openimpulse.com/blog/">Open Impulse</a> sells an SG3525 <a href="https://www.openimpulse.com/blog/products-page/product-category/sg3525-pwm-controller-module/">experimentor's board</a> for $3.24 which includes potentiometer controlled PWM and frequency.</p><hr><h2>Generating PWM signals</h2><p>A PWM signal is generated by comparing a triangle wave to a reference level. The output will be high when the triangle is higher than the reference and low everywhere else. Adjusting the reference adjusts the pulse width.<br></p><p><img src="https://cdn.hackaday.io/images/7479751433788573418.png" alt="" style="width: 200px; height: 259px; float: left; margin: 0px 10px 10px 0px;"></p><p><img src="https://cdn.hackaday.io/images/103221433788687643.png" alt="" style="margin: auto; display: block;"></p><p>The UC3525 chip is basically a triangle wave generator and comparator, with some extras thrown in for convenience. Any properly-scaled voltage proportional to output error can be used as a reference voltage to the comparator. A larger error results in a higher reference voltage, which clips the triangle wave higher, which makes the output pulses narrower, which generates less output, which in turn generates a lower error voltage.</p><p>For example, a 12V power supply might have an error voltage proportional to the difference between 12 volts and the actual output. The voltage will shorten or lengthen the PWM times, forcing the output to exactly 12 volts.</p><p>The circuit doesn't have to be a power supply, it only needs a feedback voltage proportional to the error. To run a DC motor at a specific speed, simply feed back a voltage proportional to the difference between the requested speed and the actual speed: negative feedback will force the motor to the right speed.</p><p>So for another example, you can make a class-D amplifier using an audio signal as Vref:</p><p><img src="https://cdn.hackaday.io/images/2722541433806609679.png" style="width: 324px; height: 188.152466367713px;"></p><hr><h2>Precision voltage source</h2><p><img src="https://cdn.hackaday.io/images/1190341433791854134.png"></p><p>The UC3525 supplies a precision 5.1V reference which can be compared to the error signal, or as a 5V supply for external logic (up to 20mA).</p><p>So to make a regulated power supply, simply divide the output down using 1% resistors and compare it to the voltage reference and you're done. For other circuits, simply generate 5.1V on correct output, with higher voltages for "too much" output.<br></p><p><span></span>An example from <a href="http://tahmidmc.blogspot.com/2013/01/using-sg3525-pwm-controller-explanation.html">Tahmid's blog</a>:<br></p><p><img src="https://cdn.hackaday.io/images/9524501433794597215.png" alt="" style="width: 579px; height: 233.02802690583px;"></p><hr><h2>Error Amplifier</h2><p>The UC3525 implements an extra op-amp on the VRef input of the comparator and brings the connections out to the user. This makes it easy to convert error signals - the positive input can level shift, while the inverting input and feedback can amplify the error to bring it into range.</p><p><img src="https://cdn.hackaday.io/images/7473571433797260175.png"></p><p>You can also use the op-amp to slow down the feedback. In the circuit below, the PWM error adjustment is delayed by the RC constant of the amplifier feedback. This can eliminate ringing and spurious oscillations that you might get from instantaneous feedback.</p><p><img src="https://cdn.hackaday.io/images/1626901433797714555.png"></p><p>If your output has a lot of inertia (big filter capacitors, motor speed, or similar), you can run the PWM in ON/OFF mode with an optoisolator. The control circuit is then isolated from the output.<br></p><p>In the example below, when the output is higher than 68 volts the optoisolator turns on, comparing the full Vref against Vref/2 and the PWM turns off. For a lower output voltage, the optoisolator is turned off and 0 volts is compared against Vref/2, turning the PWM completely on.</p><p><img src="https://cdn.hackaday.io/images/5344861433799220991.png" style="width: 513px; height: 241.92998678996px;"></p><h2><hr></h2><h2>Triangle wave oscillator<br></h2><p>So a natural question to ask is: how does one generate a triangle wave?</p><p>You start with a constant current source. Then you connect the constant current source to a constant capacitance and the voltage rises linearly as a function of time.</p><p><img src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20I%20%3D%20C%20%5Cfrac%7Bdv%7D%7Bdt%7D">The UC3525 provides a constant current source and a flip-flop mechanism that alternately charges and discharges a capacitor which the user supplies. The user also supplies an external resistor which sets the amount of current.</p><p>The upshot is that the user sets the oscillation frequency by supplying an R and C to the oscillator section according to the following formula:</p><p><img src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20f%20%3D%20%5Cfrac%7B1%7D%7BC_t(0.7%20R_t%20%2B%203%20R_d)%7D"><img src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20f%20%3D%20%5Ctext%7BFrequency%20of%20oscillation%7D"><img src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20C_t%20%3D%20%5Ctext%7BTiming%20capacitor%7D"><img src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20R_t%20%3D%20%5Ctext%7BTiming%20resistor%7D"><img src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20R_d%20%3D%20%5Ctext%7BDischarge%20resistor%7D"></p><p>Note: the UC3525 has two outputs each modulating half-cycles of the output frequency. This means that the triangle oscillator runs at *twice* the output frequency (one output for each half cycle). If you want a 50Hz output, configure the oscillator to run at 100Hz.</p><p>The discharge resistor, Rd is discussed later.</p><p><img src="https://cdn.hackaday.io/images/7671851433801668980.png" style="width: 412px; height: 199.82px; float: right; margin: 0px 0px 10px 10px;" alt=""></p>The oscillator has a pulse output that can be used to measure the generated frequency, and an input for synchronizing multiple devices.<p>To synchronize two devices, set the "master" device to oscillate at the desired frequency, set slave to oscillate a little slower (for example: 90% of the master speed), and connect the "OSC Output" of the master to the slave "nSync" input.</p><p>Clock pulses on a slave nSync prematurely cycle the oscillator flip-flop - causing the peaks and troughs to synchronize with the master.</p><p>As far as I can tell, no one has ever used this feature. If you don't need to synchronize multiple units, just leave the nSync and OscOut pins unconnected.</p><hr><h2>Programmable Dead time</h2><p><img src="https://cdn.hackaday.io/images/4747771433802661344.png" alt="" style="float: left; margin: 0px 10px 10px 0px;"></p><p>A "totem pole" output can have problem with synchronous control pulses.</p><p>The power transistors don't turn off instantly when their controlling pulse goes low, so if the falling and rising edges of the control pulses are close enough, there's a brief time when both transistors are conducting.</p><p>This is called "shoot through", and in effect the transistors briefly short the power supply to ground, often with disastrous results. Usually this ends up burning out your vary-expensive output transistors.</p><p>Conceptually, the gate has a small capacitance and the driver has an internal resistance, so switching the transistor takes an RC constant to complete. Other factors also come into play, such as the lead and trace inductance.</p><p>The solution is to have "dead time" where both pulses are off during the transitions, giving the active transistor time to turn off before the inactive one turns on.</p><p><img src="https://cdn.hackaday.io/images/1427301433803767342.png"></p><p>The Rd in the UC3525 oscillator section allows the user to set a dead time.</p><p>The rise time of the oscillator is determined by Rt, but the fall time is determined by the sum of Rt and Rd. The extra conductance causes the capacitor to discharge faster than it rises, prematurely ending the pulse a little before the opposite pulse begins. The end result is that there is a short time when both pulses are "off" at the same time.</p><p>If you don't need dead time, short the "Discharge" pin directly to Ct, making Rd effectively zero.<br></p><p>Here's a variable frequency example with 8 uS dead time. See the datasheet to determine dead time per component values.<br></p><p><img src="https://cdn.hackaday.io/images/1836981433805673383.png"></p><hr><h2>Output drivers</h2><p><img src="https://cdn.hackaday.io/images/2324041433811185114.png" alt=""></p><p>The UC3525 output is itself a totem-pole: each output can source or sink about half an amp of current (varies with vendor - see datasheet).</p><p>The output voltage comes from a supply separate from the internal chip logic, so you can interface the PWM sections with low-voltage logic while switching a much higher voltage. For example, high power FETs usually require between 8 and 20 volts for proper switching. You can operate the UC3525 logic from a high voltage input, 35 volts for example, while switching a lower voltage more appropriate for the FETs.</p><p>If you don't have need for separate voltage levels, just connect Vc and Vcc together. The UC3525 logic operates anywhere from 8 to 35 volts.<br></p><h2><hr></h2><h2>Soft start and low voltage</h2><p>The UC3525 has a couple of other features which are straightforward to use.</p><p>A capacitor connected to the "soft start" input will delay startup during powerup. This prevents the device from generating spurious output before other sections of the circuit come on line. It can give a microcontroller a chance to boot, capacitors a chance to charge, and other control electronics time to start.</p><p>There's also a low-voltage detection that takes the outputs offline when the power is removed - you don't have to worry about the output going haywire as the control circuitry powers down.</p><hr><h2>Putting it all together</h2><p><img src="http://2.bp.blogspot.com/-IGrcj4RjyYs/UOqa9ISSgXI/AAAAAAAAAYY/PpmE6sGtLck/s1600/circuit+50kHz.png" alt="" style="float: right; width: 416px; height: 187.155650319829px; margin: 0px 0px 10px 10px;"></p><p>With all these features there's a lot going on in this one chip, but it's mostly passives programming the individual sections. Once you understand the individual sections, using the UC3525 in a circuit is straightforward.</p><p>Here's an example of a completed project from the links posted above, and the one on which I based my design. It's pretty simple, and can be breadboarded in an afternoon.</p><p>Once you have the basic circuit running, modifying it for your project is straightforward.</p></div>
                            </div>
                        </li>
                    
                </ul>

                
                <div class="pagination">
                    
                    <a href="?page=1" class="grey-gold-button prev-button ">Previous</a>
                    
                    
                    <a href="?page=3" class="grey-gold-button next-button ">Next</a>
                    
                </div>
                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'XVSpslFM-cYHkGjo7hrGe7DRbFcfOoIEcsJQ';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>