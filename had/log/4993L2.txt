<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; Dual Channel Battery Charger/Analyzer &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F4993%2Flogs%3Fpage%3D2">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/4993-dual-channel-battery-chargeranalyzer">Dual Channel Battery Charger/Analyzer</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">This is an efficient dual channel battery charger/analyzer for maintaining rechargeable batteries with programmable parameters and logging.</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/10708-kc-lee" title="Visit Profile">K.C. Lee</a><span>&bull;</span>
                
                5 months ago<span>&bull;</span><a href="/project/4993#discussion-list" title="See Comments">4 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/4993-dual-channel-battery-chargeranalyzer">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/4993/logs/sort/newest">Newest</option>
                    <option value="/project/4993/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/4993/log/19303-a-tale-of-the-two-designs">A tale of the two designs</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/4993/log/19303#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19303"><p>I haven&apos;t been spending a lot of time working on this project, but rest be assured that bits and pieces of this project has been progressing slowly and indirectly.  On the other hand, this is an upgrade for a working design and working PC software, so I am actually ahead of schedule. :)</p><p>I am using the same EFM8 Universal Bee series in another project, so I am familiar with the development environment. I have been recoding bits and pieces of my old charger low level code for it.  I have a good understanding of the ADC, PWM, pin change interrupt, USB (wallwart) charger detector that is needed by this project.  </p><p>The only thing I haven&apos;t done a lot is working with SiLabs USB library.  The code from their GUI is actually very readable and their forum support is good. Compiling a bare minimum USB device is a few mouse clicks - quite a large difference than writing USB low level drive from scratch like <a href="https://hackaday.io/project/2213-tusb-blaster">here</a>.</p><hr><p>Starting to feel like TV reruns here.  Here is what the rev 2.0 of the charger looks like.  You can think of it as the proof of concept/prototype of  this project.</p><p><img src="https://cdn.hackaday.io/images/9009961434675777016.jpg"></p><p><img src="https://cdn.hackaday.io/images/3419211434675803495.jpg"></p><p>Most of these parts other than the LCD were recycled from old boards or what I have in stock.  My old PII motherboard was a donor for the two MOSFET, 555, resistor packs.  I recycled the ferrite from a power filter and the MLCC ceramic caps from other scrap boards.</p><p>The problem with this board is that the doubled sided design means that the board needs 2 passes in the SMT assembly, so that&apos;s something I want to avoid.  The heavy components would also require the parts to be glued down so that they don&apos;t fall off when they are upside down during the 2nd pass of reflow. Surface tension of the molten solder can keep smaller/lighter parts in place.</p><p>I am beefing up the design for higher current and doing a bit of parts/cost reduction and improvement.</p><hr><p>Routing is done.  The few air wires are the connections to the other side of the LCD.  On the module, both left and right are connected together,  I might have some last minute things or clean up.</p><p><img src="https://cdn.hackaday.io/images/7119001436867046222.png"></p><p>It is 50mm x 100mm (1.96&quot; x 3.94&quot;) which is one of the popular sizes that the Chinese Proto PCB places are offering.  All of the components are now located on the primary side for easy assembly. </p><p><span></span></p><p><img src="https://cdn.hackaday.io/images/1492101436830823686.png"></p><p>The board is in portrait orientation (orientation shown below.) The charger has all the connectors located on the left hand side to be out of the way. The same &quot;Nokia&quot; graphic LCD over the two rows of connectors on opposite side which also act as mechanical support. The 3 buttons are on the right side of the LCD.</p><p><img src="https://cdn.hackaday.io/images/9844451436830896029.png"></p><p>Still not too sure about the HaD contest deadline for product.  There is the issue of upgrading the firmware remotely between rounds.  I might have to port a serial bootloader for it.   Still sorting out the logistics and it seems to be a lot of work which I might not have the time for.</p><hr><p>Got my BOM sorted out with the help of BOM-EX ULP in Eagle (<a href="http://www.bobstarr.net/pages/downloads.html">Home</a>, <a href="http://www.cadsoftusa.com/downloads/ulps">Eagle CAD site</a>).  I used the older version because I am using ver. 6 for now.  It is a bit easier to use as it is a GUI based ULP that allow for setting parts#/values on mass and consolidating parts with same part#.<br></p><hr><p>I have ordered the parts, so hopefully I can verify the footprints and close off the PCB.  I&apos;ll need to kludge the SEPIC 5V supply to make sure that works as it is something that wasn&apos;t simulated due to lack of chip model.  Quick and dirty test project loog:  <a href="https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/21302-we-need-bigger-inductors">here</a><br></p><hr><p><img src="https://cdn.hackaday.io/images/3074141437583158092.jpg"></p><p>Size comparison with the V.2 prototype.  Going to do a few more passes at the layout and make sure everything looks right, I&apos;ll probably order the PCB tonight just in time for China&apos;s work day. </p><p>The back view of the new layout.  Wish Eagle CAD has a backside view in layout.</p><p><img src="https://cdn.hackaday.io/images/971281437583407454.png"></p><hr><p>Boards ordered.  Too lazy to check.  Last year my FPGA board took only 2 weeks from file to postman knocking on my door.  The PCB itself is fast.  Hard to tell how long the Postal system is going to take as there has been some slow down in the last few months.</p><p>Initial release PCB files are up on Github link:</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4993/log/20749-you-are-only-human-human-interface">&#34;You are only Human&#34; - Human Interface</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/4993/log/20749#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20749"><p>This is an entry into the &quot;Show how your project interacts with people: Human Interface contest&quot;. <br></p><p style="margin-left: 20px;"><span></span>Sorry for the camera work as this is my first video with my new camera. It is hard (major time lags) to look at the camera while mousing on the netbook without my head blocking the camera.<br>Code is very lean, so don&apos;t expect anything flashy. Windows software (150kB binary) is written in C (Pelles C &amp; IDE on Windows) with Win32 API and libusb-win32 as the USB device driver.</p><p>Short Youtube video showing the user interface and the PC control software.</p><p><iframe width="500" height="281" src="//www.youtube.com/embed/3i67olQ1HNk" frameborder="0" allowfullscreen=""></iframe>While the charger can operate in a stand alone mode with the 3 button and a small LCD, you can also connect and control it from a PC.  The PC and the Charger are linked together with bidirectional data path over the USB interface.  Either side can control the charging process and both displays get updated. The PC can send commands to the charger via USB Vendor command packets while the Charger uses USB Interrupt packets to the PC for status and information update.  USB packets are treated as if they were local user interface events.</p><p>This is my &quot;Charger Control&quot; software for Windows.  The battery voltage, Charge Current, Time are shown in the &quot;Charger Tab&quot;</p><p><img src="https://cdn.hackaday.io/images/7476231436483679362.jpg"></p>The drop down list in each of the charger menu let you select the battery type.  The bottom status bar shows USB connection and the Flashing USB text shows the activities.<img src="https://cdn.hackaday.io/images/7545361436483894348.jpg">Once the battery type is selected, the status now reads &quot;Ready&quot; and the Start button is no longer greyed out.  The status will show the various charging cycles information.<p><img src="https://cdn.hackaday.io/images/1356791436484082509.jpg"></p><p>This is the Batteries Tab.  You can edit the battery type, charging parameters, capacities, algorithm etc here.  This functionality is not available on the charger.  There is only so much you can squeeze in the 8kB FLASH of the ATMega8 (current ~7kB used) in the prototype and a user interface on a tiny screen.<br>FYI: The prototype uses ATMega8A while the work in progress design uses SiLabs chips with larger memory, hardware USB and Debugger.</p><p><img src="https://cdn.hackaday.io/images/1294101436484319705.jpg"></p><p><img src="https://cdn.hackaday.io/images/2699211436484344317.jpg"></p>The &quot;Add&quot; button can create a new battery entry while the &quot;Remove&quot; button can delete an existing entry from the EEPROM on the charger.  Changes/tweaks in battery parameters can be save in the charger by using the &quot;Update&quot; button.<p><img src="https://cdn.hackaday.io/images/4744021436484438091.jpg"><span class="redactor-invisible-space">Notice that &quot;New&quot;<span class="redactor-invisible-space"> (default name, can be edited) now shows up in the &quot;Charger&quot; menu.  The battery settings are updated directly to the non-volatile storage.</span></span></p><p><span class="redactor-invisible-space"><span class="redactor-invisible-space"><img src="https://cdn.hackaday.io/images/1225851436484593524.jpg">This shows the bare functionality of the charger.  There are still quite a bit of work I wanted to do, but I am limited by the amount of FLASH storage in the small device.  That&apos;s one of the few things I am trying to change by using a different microcontroller. </span></span></p><p><span class="redactor-invisible-space"><span class="redactor-invisible-space">Here is a charging plot from Megunolink from the serial debug port previously.  Sadly that I ran out of FLASH space, so my debug console has to be removed to make room for the USB code.  I am hoping to add the plotting/logging functionality to the PC software as it already has all the raw data from the USB, but I don&apos;t have time for it.</span></span></p><p><img src="https://cdn.hackaday.io/images/6895991436485002560.jpg" width="452" height="294" style="width: 452px; height: 294px;"></p><p><span class="redactor-invisible-space"><span class="redactor-invisible-space">Button pressing is a bit painful on the charger in the stand alone mode as there are only so much you can do there with limited buttons, screen size and FLASH space.  The PC companion software improves on this aspect.</span></span></p><p><span class="redactor-invisible-space"><span class="redactor-invisible-space">Current status:<br></span></span></p><span></span><ul><li>While the &quot;Batteries&quot; menu shows the various options, the current firmware have not implemented Ni chemistry charging due to hardware limitation (ADC resolution, battery terminals &amp; trace impedance) to sense the tiny voltage change (1-5mV) for charge termination.  My new design tries to improve on these areas. This charger is still primarily designed for Li based chemistry.</li><li><a href="http://ultrasmartcharger.com/">UltraSmartCharger</a> (<a href="http://www.paulallenengineering.com/related-files.html">Paul Allen&apos;s NiMH Charger</a>) forum <a href="http://www.ultrasmartcharger.com/phpBB3/viewtopic.php?f=3&amp;t=5">topic</a> shows a promising charge algorithm for NiMH that might work without having to deal with the tiny voltage changes.  The algorithm detects the rate of change of voltage over time.  When the rate of change decreases from the maximum (inflection point), the battery is at/near full charged.  This is more desirable than trying to detect 1-5mV change of voltage.</li><li>The discharge hardware is working, but functionality not implemented pending on time and logging/charting functionality on the PC.</li></ul></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4993/log/21159-dummy-load-for-dummies">Dummy Load for Dummies!?</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/4993/log/21159#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21159"><p> In the discharge mode, the SEPIC converters acts as a buck/boost converter to drive an external load.   I am going to talk about making one.  You can use the good old power resistor and mount it on a panel/heatsink and call it a day.  Of course, this would make a very boring project log if I ended it like that.</p><p><img src="https://cdn.hackaday.io/images/8031451437267716985.png"></p><p>We are living in very interesting times when a MOSFET is cheaper than a resistor. This is the cheapest TO-220 MOSFET I can find at digikey.  A TO220 is easy to mount onto a heatsink.  There is no point of getting a MOSFET for low Rds(on) or logic threshold as the MOSFET would operate in the <a href="https://en.wikipedia.org/wiki/MOSFET">linear region</a> part of its drain current vs. drain-to-source voltage curve.</p><p><img src="https://cdn.hackaday.io/images/8709841437267660931.png"></p><p>I read about the idea back when I was designing the V2.0 circuit.  I can no longer find the link as the web is cluttered these days.  The basic circuit is a very crude shunt regulator using the threshold voltage of the MOSFET.  The voltage divider R1 and R2 controls the the feedback ratio.  It is very crude as the voltage is dependent on the process, temperature.  It is not an issue here as the PID firmware loop would adjust the SEPIC output (within limits) via duty cycle to suit the load. </p><p>The SEPIC topology switching elements sees the sum of input and output voltage. You want to keep the voltage to around 12V so that it would leave lots of headroom for the battery input voltage.  A really low voltage on the other hand, means a higher current and you&apos;ll run against the relay contacts ratings.</p><p>You can mount the MOSFET on old CPU cooler that you have lying around and connect the fan directly across the MOSFET load and use it to run the cooling fan.  :)</p><p><img src="https://cdn.hackaday.io/images/3352211437268279294.png"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4993/log/21302-we-need-bigger-inductors">We need bigger inductors!!!</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/4993/log/21302#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21302"><p>Ordered some 0201 0.01uF caps by mistake. 0201 is 0603 Metric, so it showed up in the 0603 search! Thankfully I pull some parts off PII motherboard like I was before.</p><hr><p>I have been testing out the 5V SEPIC. Previously I had luck with both the same vendors<span class="redactor-invisible-space"> on <a href="https://hackaday.io/project/1347-fpga-computereval-board">my FPGA board</a>. I guess I have made some bad choices on the Taiyo Yuden 1210 inductors. The chip has a switch for 500mA, thought I&apos;ll be okay with something in the 600-700mA range.  I actually did a simulation with a LT part and the inductor currents were 200-300mA range.</span></p><p><span class="redactor-invisible-space">Thankfully I haven&apos;t ordered the PCB just yet.<span class="redactor-invisible-space">, so I am going to redo the that section to put in a larger footprints for some last minute Chinese inductors.  For the mean while I&apos;ll wound my own inductors if I have to get things moving.</span></span></p><p>Ordered some of the replacement inductors from Aliexpress.  They look to be knock off Samida CD54 series, so I made PCB footprints for them.  All else fails, I&apos;ll order the legit ones from digikey.</p><p><img src="https://cdn.hackaday.io/images/6485571437677821702.png"></p><p>I swapped out the inductors with larger ones.  Those are iron powder cores inductors intended as filters (because they are lossy), but that&apos;s all I have right now. </p><p><img src="https://cdn.hackaday.io/images/6325821437537227653.jpg"></p><p>This time the SEPIC works.  It is supply 5V to two 100 ohms resistor in parallel (i.e. 100mA).  The 5V SEPIC runs the relays and supplied 5V to the microcontroller&apos;s on-chip 3.3V LDO which runs the control circuits and the LCD.<br></p><p><img src="https://cdn.hackaday.io/images/6205591437532087035.jpg"></p><p>At 3V, we get about 72% efficiency.  The SEPIC converter is operating as a boost converter.<br></p><p><img src="https://cdn.hackaday.io/images/2207241437532603660.jpg"></p>At 15V, the efficiency is around 80%.  The SEPIC converter is now operating as a buck converter.<p>So I guess it works!
</p><hr>I have received the inductors today.  The parts comes on cut tapes.  It takes exactly 3 weeks with the &quot;Free&quot; small packet non-tracking shipping option just like the other places I order from.<p>Here is the same circuit on a home made PCB.</p><p><img src="https://cdn.hackaday.io/images/6601671439618155987.jpg"></p><hr><p>With a proper PCB layout, the output regulation has improved.  This was tested with a 50 ohms load, i.e. 100mA.  The efficiency is about 80% between 5V and 15V.  At 3V, the design lower limit,  it is a bit lower at about 70%.</p><p><img src="https://cdn.hackaday.io/images/3313511439653662668.jpg"></p><p>In version 2.0, I used a LDO fro powering the control circuits.  The SEPIC converter for the charging circuits was used to derive the gate drivers.  That proves to be problematic in the case when the main power is off, but a battery is connected.  The inputs to the gate drivers are not defined and can cause the MOSFET to turn on shorting out the battery.  The 2.1 design runs the control circuit and gate driver are powered from the same  SEPIC supply.</p><p>The switching node in the SEPIC converter sees a voltage peak that is the sum of Vin and Vout. (Source <a href="http://www.analog.com/library/analogdialogue/archives/44-05/sepic.html">here</a>)</p><p><img src="http://www.analog.com/library/analogdialogue/archives/44-05/AD44_05_FIG_05.jpg"></p><p>The peak voltage from the switching node is rectified and a <a href="https://en.wikipedia.org/wiki/Linear_regulator#Simple_series_regulator">simple series regulator</a> is used to regulate the output. </p><p><img src="https://cdn.hackaday.io/images/4792891439659343313.png" width="523" height="362" style="width: 523px; height: 362px;"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4993/log/21663-where-is-waldo-pcb-status">Where is waldo? - PCB Status</a></h2>
                            <small class="authorship">22 days ago  &bull;
                                <a class="gray-link" href="/project/4993/log/21663#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21663"><p>2 email updates from vendor in the last 2 days, tracking code still not even in China Post&apos;s system and ditto for Canada Post.  Yes that looks like my PCB.  Earliest arrival would take at least a week.  So far it is not looking good at all.</p><p>Meanwhile the inductor from a seller I haven&apos;t dealt with has been received by China Post and it out of China already. It might take a incognito slow boat scenic route.  I guess I&apos;ll find out.<br></p><p>The vendor claims that they used paypal for shipping and it&apos;ll take 3-4 day for the tracking to show up.  Just hope this will not cost 3-4 additional days of delays.</p><hr><p><img src="https://cdn.hackaday.io/images/1626991438548414308.jpg"></p><p>Paypal package tracking.  Not sure where it is departing from and where it is going to.  Still not in China Post nor Canada Post system.</p><p>I did some reading seem like the <a href="http://www.elecrow.com/blog/paypal-package-available-in-elecrow/">Paypal package</a> is a new service for cheap shipping for small items with tracking. It links China Postal Beijing to the postal system of other countries.  </p><p><span class="redactor-invisible-space">It used to be it could make a next door trip to Hong Kong, handed it off to Canada Post and be on its flight within a couple of days.  </span>I now have a feeling that the departure scan is for my PCB leaving Southern China to make a trip up North to Beijing.  The tracking is not even there on China Post nor Canada Post. </p><p>Looking at the numbers they are quoting for 7-15 days to the US, I am not too optimistic about it showing up here and leave me some time before the deadline for the video.  Of course I can be completely wrong and I would be delighted for that.</p><hr><p><img src="https://cdn.hackaday.io/images/4078671438342589184.jpg"></p><p>Now tracking info is in China Post&apos;s system.<br>Destination: Canada   Current Status: International Mail Receiving Centre - Received<br></p><p>Now Canada Post has the tracking info:</p><p><img src="https://cdn.hackaday.io/images/2824271438441013148.jpg"></p><p><img src="https://cdn.hackaday.io/images/2555241438548810924.png"></p><p>Well not really.  It only arrived at the air terminal.  I guess it is not a daily flight.</p><p><img src="https://cdn.hackaday.io/images/3745451438641686207.png"></p><p><img src="https://cdn.hackaday.io/images/1054111438641700652.png"></p><p>It has arrived on the West coast.  Further Processing = Canada Customs</p><p><img src="https://cdn.hackaday.io/images/5271891438733691034.png"></p><p>Lot of horror stories about custom delays.  :(   <a href="http://forums.redflagdeals.com/mail-processing-canada-customs-slow-711375/58/">http://forums.redflagdeals.com/mail-processing-canada-customs-slow-711375/58/</a><br></p><p><img src="https://cdn.hackaday.io/images/9472721439246462463.png"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4993/log/21932-i-am-altering-the-deal-pray-i-dont-alter-it-any-further">I am altering the deal, pray I don&#39;t alter it any further.</a></h2>
                            <small class="authorship">19 days ago  &bull;
                                <a class="gray-link" href="/project/4993/log/21932#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21932"><p>So looks like they have changed the PCB design including the pin out and the dimension of the LCD modules.  On the other hand, these modules are cheaper, the LCD aren&apos;t scratched up.  One of the backlight LED wasn&apos;t reflowed properly, that&apos;s why the LCD wasn&apos;t pushed all the way down and the latch on the right side of this picture are left opened.  The PCB is thicker than what the latches are designed for.  On 2 of the panels, the metal tabs are twisted 30 degrees or so while 2 of the modules just have them latches grabbing to the inner surface of the milled slots.</p><p>The LED connection are also a bit different - they have included four 300 ohms series resistors for the 4 LED.  The LED pin should now be grounded and &quot;JP&quot; can be used to jumper that.</p><p><img src="https://cdn.hackaday.io/images/1418441438363951845.JPG"></p><p>These LCD are probably &quot;look alike&quot; made by different vendor.  That&apos;s a business risk.  The good news is that the PCB is simple, so it is a matter of sourcing the LCD modules and making my own for the long term.  The other thing to do is to integrate the buttons on that PCB.</p><p>The shipping time for small packages via China Post is now back to the usual 3 weeks instead of 4 weeks.</p><hr><p>The pin out of the new LCD module matches a 1.8&quot; TFT LCD module I am using for a different project.  </p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4993/log/22124-ucfirmware-status">uC/Firmware Status</a></h2>
                            <small class="authorship">15 days ago  &bull;
                                <a class="gray-link" href="/project/4993/log/22124#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22124"><p>Right now I have managed to compile/port part of the AVR firmware over to SiLabs EFM8UB (8051).  As predicted,  the code size is about double that of the AVR as 8051 code.  LCD font data takes up a bit of space, but is the same size on 8051.  I won&apos;t be doing any actual test until the new PCB is populated.  I am hoping that there are no significant delays now that the package has finally left China.<span class="redactor-invisible-space"></span></p><p><img src="https://cdn.hackaday.io/images/6389741438698171467.png"></p><p>There are some missing pieces such as USB code and EEPROM emulation (code and FLASH space).  Previously, I used V-USB on the ATMega8, whereas EFM8UB1 has hardware USB.  The EEPROM emulation uses FLASH memory and provides an EEPROM/abstraction layer.  I have ported that code from SiLabs application note on to the data FLASH on a project.  I&apos;ll need to read up on the Keil compiler to figure a way to reserve a few blocks of FLASH in the code space in order for storing the different battery parameters.  Alternative a small I2C EEPROM dongle may be plugged into the recessed 3.3V Serial/GPIO port.</p><p>I have considered their EFM8UB2 series which has a larger program memory, but they are slightly older chips and do not have the USB charger detection support.  Hopefully at some point, they&apos;ll make EFM8UB1 chips with more memory.</p><p>The Keil compiler is a lot nicer to use than GCC/AVR as it  has 8051 extensions for embedded code. It fully supports the different memory models (a lot of them for the 8051) directly without clumsy kludges like GCC/AVR.</p><p>8051 only has a single 16-bit memory pointer, therefore it isn&apos;t too good on memory access and needs lots of register shuffling on moving/copying external memory (xdata). <span class="redactor-invisible-space"> Complex data structures, pointers, large number of parameters passing can be very costly in this architecture.</span></p></div>
                            </div>
                        </li>
                    
                </ul>

                
                <div class="pagination">
                    
                    <a href="?page=1" class="grey-gold-button prev-button show">Previous</a>
                    
                    
                </div>
                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'QZtXGxTH-RzM2OmQ22rrQLBpOkhG9iiQ0W3k';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>