<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; Snail Mail Notifier &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F1954%2Flogs">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/1954-snail-mail-notifier">Snail Mail Notifier</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">Low power, wireless device that informs user of regular mail.</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/12658-solenoid" title="Visit Profile">Solenoid</a><span>&bull;</span>
                
                a year ago<span>&bull;</span><a href="/project/1954#discussion-list" title="See Comments">5 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/1954-snail-mail-notifier">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/1954/logs/sort/newest">Newest</option>
                    <option value="/project/1954/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/1954/log/5132-first-steps">First steps...</a></h2>
                            <small class="authorship">a year ago  &bull;
                                <a class="gray-link" href="/project/1954/log/5132#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-5132"><p>The first step in this project is to build a test rig, a good start is choosing the hardware for the transmitter/receiver and MCU is to look at <a href="http://lowpowerlab.com/blog/2013/03/01/mailboxnotifier-moteino-based-mail-event-notifier/">existing</a> <a href="http://www.instructables.com/id/Arduino-Snail-Mail-Notifier/">projects</a>. I bought a couple of popular <a href="http://www.fasttech.com/products/1005/10002877/1215200">NRF24L01 wireless modules</a> to test the range, later I'd use the SMD variant if the tests prove satisfactory for mounting on the PCB.</p><p>As far as the MCU is concerned I'm most confortable with AVR chips and I already have developing tools for it (<a href="http://www.hobbyking.com/hobbyking/store/__27990__usbasp_avr_programming_device_for_atmel_proccessors.html">USBasp programmer</a>) so I'm leaning towards that. I know that the AVR MCUs are quite stable within a large input voltage range which is perfect for this kind of battery powered project, for example some of the ATtiny MCU can be powered with only 0.7V. They also have low power consumption mode theoretically allowing them to run for absurd amounts of time (years) on standard batteries.</p><p>Ideally no regulator has to be used, the NRF24L01 seems to run happily from 1.9 to 3.6V, but once the transmitter starts sending data it draws a lot of current from what I've read, an important voltage drop might cause problems when a battery with a high internal resistance is used (such as a coin battery), to be tested...</p><p>I'm now waiting for the delivery of the electronic components to start building the test rig. The first test is to check the transmitter/receiver range and if it can communicate between my mailbox/house.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/1954/log/5204-another-similar-project">Another similar project</a></h2>
                            <small class="authorship">a year ago  &bull;
                                <a class="gray-link" href="/project/1954/log/5204#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-5204"><p><a href="http://hackaday.io/hacker/15499">Eric Tsai</a> made a <a href="http://hackaday.io/project/1720">similar project</a> using an Arduino compatible MCU, he's using the RFM69HW wireless module for data transmission, just like the <a href="http://lowpowerlab.com/blog/2013/03/01/mailboxnotifier-moteino-based-mail-event-notifier/">Moteino</a>, it might be a better idea than the <a href="http://www.fasttech.com/products/1005/10002877/1215200">NRF24L01</a>, but more expensive...</p><p>As far as the sensor for detecting new mail delivery is concerned my first idea was a light sensor to detect the mailbox opening (while the module is inside the mailbox), but I figured since power consumption must be minimised the sensor should be a passive one. So I'll just use a button based "sensor" that'll trigger an interrupt and wake up the MCU, this way the "sensor" won't draw any power whatsoever while waiting.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/1954/log/11068-huge-leap">Huge leap</a></h2>
                            <small class="authorship">9 months ago  &bull;
                                <a class="gray-link" href="/project/1954/log/11068#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-11068"><p>I haven't updated this project for a long time, but that's because I've worked on it on the side whenever I had time and changed my mind a lot.</p><p>It has taken a bit of a turn: I have discovered V-USB/Digispark on the way and decided the receiver should be a stand-alone module as my receiver-connected-to-a-random-Arduino wasn't as elegant as I hoped. I bought some ATtiny85-20 and other passive parts to test them on a custom etched a circuit. I now have a fully functional USB receiver module that forwards data to a computer.</p><p><img src="https://cdn.hackaday.io/images/3457251415986262836.jpg"></p><p>Early transmitter module on a stripboard with a DIP ATtiny85V-10 MCU.<br></p><p><img src="https://cdn.hackaday.io/images/137531415986406909.jpg"></p><p><img src="https://cdn.hackaday.io/images/7410701415985794046.jpg"></p><p>Current transmitter module on an etched PCB, the MCU can be reprogrammed via the broken out pins.</p><p><img src="https://cdn.hackaday.io/images/4256461415985783352.jpg"></p><p>Receiver module with both USB-A and micro-USB connector footprints. I programmed the MCU via a temporarily soldered ISP connector, now it can be reprogrammed using the Digispark bootloader.</p><p>I will definately be using the cheap 433MHz transmitter/emitter pair mainly because of price, low power usage and virtually no voltage regulation requirements. The transmission is quite reliable.</p><p>Something that is a bit annoying currently is that I use a ATtiny85V-10 for the transmitter and an ATtiny85-20 for the receiver (because of USB), indeed the 85V version can function down to 1.8V, but I'm not sure it's really useful as I intend to power the transmitter via a 3V lithium button cell and also the transmission power being dependant on voltage this 1.8V "advantage" might make it absolutely useless.</p><p>I have measured the power consumption of the transmitter and it was only 100nA in power-down mode, also thanks to the transmitter module that doesn't consume any power whatsoever, contrary to NRF or RFM modules. The ATtiny85V-10 can work at 1MHz between 1.8 and 2.4V and up to 8MHz from 2.4 to 5V, when I tested it I could get reliable transmission with 8MHz at 1.7V, completely out of specifications :).</p><p>As far as software is concerned both modules work as expected: transmission, reception and forwarding to computer. The Atmel MCU can measure their own supply voltage and have an uncalibrated internal temperature sensor which I forward together with the actual data just because I can.</p><p>I'm about to order some PCBs for both sides to make the whole thing more elegant and professional looking. By the end of the project both sides will have a nice 3D printed enclosures.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/1954/log/11142-pcbs">PCBs</a></h2>
                            <small class="authorship">9 months ago  &bull;
                                <a class="gray-link" href="/project/1954/log/11142#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-11142"><p>I made the PCBs in Eagle CAD and ordered them from Elecrow as they currently a have a <a href="http://www.elecrow.com/special-offer-for-2-layer-1010cm-max-green-pcb-510pcs-p-761.html">5x10cm board size special offer</a>, it remains to be seen if they actually agree producing them as there are some particularities with panelized PCBs.</p><p><img src="https://cdn.hackaday.io/images/7182901416248081276.png"></p><p><img src="https://cdn.hackaday.io/images/1302021416248120021.png"></p><p>The 3D rendering was made using <a href="http://eagleup.wordpress.com/">EagleUp</a>, a plugin for Eagle CAD and SketchUp, all free.</p><p>I put 6 transmitters and one receiver on the board, I plan to use the other transmitters to report on various variables around the house such as temperature (with the internal temperature sensors which I'll calibrate for each MCU separately) and it can also be hooked to other systems (heating, power consumption, water usage...) which all report to the central receiver that can then dispatch the information wherever needed. It remains a one way communication, but a very cheap and power efficient one.</p><p>I also added a coin cell battery (3V) holder footprint on the receivers as I want those transmitter to be as small and self-contained as possible, I hope the transmitter current draw isn't too high and those cells have quite a high internal resistance. I added to 10uF capacitor on the line, it's probably not enough but it's something.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/1954/log/11163-pcb-changes">PCB changes</a></h2>
                            <small class="authorship">9 months ago  &bull;
                                <a class="gray-link" href="/project/1954/log/11163#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-11163"><p>It turns out Elecrow has some trouble manufacturing half-holes which I used for the CR2032 battery holder in order to save some space. It doesn't really matter so I made the half-holes whole and since I had to make the transmitter board bigger I also broke out the RF signal pin and LED so that they could be used if the module was used in a different way.</p><p><img src="https://cdn.hackaday.io/images/3788611416331809348.png"></p><p>As you can see the board still fits the 5x10cm limits.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/1954/log/11263-too-cheap-denied">Too cheap, denied...</a></h2>
                            <small class="authorship">9 months ago  &bull;
                                <a class="gray-link" href="/project/1954/log/11263#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-11263"><p>As Elecrow, and basically all other Chinese PCB manufacturers, state: only one PCB design per order. So my order was naturally refused in the end, but in rare cases it passes inspection, so I tried to be too cheap and failed.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/1954/log/11299-new-pcb-order">New PCB order</a></h2>
                            <small class="authorship">9 months ago  &bull;
                                <a class="gray-link" href="/project/1954/log/11299#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-11299"><p>This time I ordered 2 PCBs, I panelized the circuits since they're so small. The limit for the cheapest PCB size is 50x50mm so I crammed 3 receivers and 4 transmitters on them. From Elecrow it's still cheaper than from DirtyPCBs with shipping ($26.32 vs. $28), the actual manufacturer is probably the same anyways</p><p><img src="https://cdn.hackaday.io/images/4381171416784992044.png"></p><p><img src="https://cdn.hackaday.io/images/7086951416785044425.png"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/1954/log/13093-its-not-a-defect-its-a-feature">It&#39;s not a defect, it&#39;s a feature!</a></h2>
                            <small class="authorship">7 months ago  &bull;
                                <a class="gray-link" href="/project/1954/log/13093#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-13093"><p>The PCBs arrived a while ago, but I didn't have the motivation to assemble and document right away. Now that they're assembled I started screwing around and programming all sorts of useless stuff... I'm not good without a deadline.</p><p><img src="https://cdn.hackaday.io/images/899221421780068992.jpg"></p><p>So far I have only tested the receiver board, without the receiver module. I routed the lines the same way as Digispark so that I wouldn't have to mess around with the Digispark libraries (that was quite annoying with my prototype boards), eventually this project should be easily reproducible so that's a plus.</p><p>I routed the passive buzzer, 1K current limiting resistor and LED in series, thinking that by toggling the pin slowly I could make the LED blink and when toggled fast the buzzer would make some noise, unfortunately the buzzer is a piezoelectronic type which means it's effectively an open circuit... why didn't I test it before &gt;_&lt;?!? The good news is that by mounting the buzzer OR the LED and shorting the missing element they work separately. Not as pretty as I would've wanted, but eh...</p><p>The receiver board works fine and looks quite good, the emitter hasn't been tested yet, but will be whenever I feel like it. On the emitter boards I soldered an ATtiny85-20SU<span></span> on one and an ATtiny85V-10SU<span></span> on the other to see how they perform power-wise when in power-down mode, maybe I could cut the V-10SU<span></span> from the parts list and go with the 20SU-type on both sides.<img src="https://cdn.hackaday.io/images/8679551421780169465.jpg">Since there are 2 types of footprints for the USB connector (uUSB and USB-A) I soldered one of each on the boards, the same with the buzzer/LED.</p><p>I think I'll have way too many boards left over so if anyone's interested...</p><p>Now I'll be slowly, on and off,<span></span> working on the software side of the project for the next couple of months.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/1954/log/13258-steady">Steady...</a></h2>
                            <small class="authorship">7 months ago  &bull;
                                <a class="gray-link" href="/project/1954/log/13258#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-13258"><p>I have tested the wireless communication and it works really well even with a discharged 3V coin cell on the emitter (~2.5V). I'm currently squeezing an enormous amount out of the ATtiny85 on the receiver side and that's exactly what I love about this project.</p><p>The receiver board basically copies Digispark which has mainstreamed the USB connectivity with the ATtiny. USB is horrible as the protocol timings are critical and the smallest deviation will make the computer barf and ignore the device, the amount of effort Digispark has put into making the ATtiny speak USB is massive and I'm really glad I can use it.</p><p>The MCU is a fighter: it's communicating with the computer via USB, makes a sound via the buzzer or fades the LED (depending on what's soldered), takes input from the user via the on-board button and all that while listening to the emitter and decoding the data. I'm almost using all the available flash memory right now.</p><p><img src="https://cdn.hackaday.io/images/8268261422026749506.jpg"></p><p>On the receiver board the receiver module is way too close to the PCB and not very well fixed so there's a chance of shorts happening when one squeezes it too hard. That wasn't a chance I was willing to take so I inserted a piece of a broken bicycle inner-tube between them, this should prevent any issues for now.</p><p>I plan to 3D print a case by the end of the project so the inner-tube won't be necessary later-on.</p><img src="https://cdn.hackaday.io/images/4390531422026713742.jpg"><p>I've been having transmission reliability issues, even with additional antennae (~17mm for 433MHz): for some reason I was only able to transmit at about 2-3m before I stripped the red lacquer from the green coil and adjusted it. Now I can reliably transmit 10-20m, through walls (with less than 3V!).</p><p><img src="https://cdn.hackaday.io/images/9051351422027359306.png"></p>Another thing I've been busy with is how to interpret the data coming from the module to the computer. Since the easiest solution is the use the Digispark libraries and the only way to communicate with the computer, without having to make any drivers, is the declare oneself as a human interface device (HID), like a keyboard, I did just that: send keyboard commands to the computer.<p>The receiver sends a user defined shortcut combination and from there the computer simply interprets that. On a Mac there's a thing called Automator (comes with the OS), one can make a service that displays a notification, then in the keyboard settings instruct the computer to call that service when the shortcut combination is entered, voilà: a desktop notification for snail mail. The Automator can also send e-mails ;).</p><p>I won't be using my Mac as a receiver though, I have a Raspberry Pi media center running 24/7 that will handle that, but that's one possible approach.</p><p>Next I need to check the power consumption on the emitter side, with different types of MCUs, and build the switch for detecting the mailbox lid state.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/1954/log/13299-the-life-of-the-battery">The life of the battery...</a></h2>
                            <small class="authorship">7 months ago  &bull;
                                <a class="gray-link" href="/project/1954/log/13299#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-13299"><p>Now that I have the hardware the project is fun again and it's advancing much faster than I anticipated :).</p><p>I have tested the ATtiny85-20SU and ATtiny85V-10SU for power consumption in power-down more on the emitter, they're basically the same, so I can remove the <em>technically more power efficient</em> V-10SU-type from the parts list and use two 20SU-types.</p><p>At first I wanted to use the V-10SU-type because it can still reliably work at 1.8V, but I forgot that the transmitter also needs decent voltage to be able to emit something (it's actually rated between 3 and 12V), also the 3V coin-cell battery would be pretty much deceased at 1.8V, even with some remaining voltage when the transmission would begin the voltage would probably fall to 0, so two 20SU it is.</p><p>As written in the datasheet the ATtiny uses 0.1uA in power-down mode, that's what I measured, this is quite incredible and a 200mAh CR2032 battery would last 228 years! Now to be more realistic the transmission takes about 7mA for a fraction of a second which is not negligible, even if only about once per day and the weather conditions and battery self discharge also play a role in battery life. But my goal was 1 year of battery life and that's probably satisfied.</p><p>I have also implemented a one-minute waiting period after the message has been sent so that multiple messages, and thus excessive power, wouldn't be used when different things are inserted in the mailbox. In Switzerland, and Europe in general, the mailboxes usually <span></span>have 2 compartments: one for the letters, closed with a key, with an lid that moves <em>inside</em> the mailbox and another one, for small packages, with a little door that opens outside. The mailman will drop the letters in the letter compartment one by one and will this trigger the system multiple times requiring this setup.</p><p>During this one-minute waiting period the MCU uses 4.3uA as it uses the watchdog that sleeps for 8 seconds, decrements a counter, and continues to sleep until 8s*8=64s have passed, then it disables the watchdog and returns to power-down mode (0.1uA).<br><img src="https://cdn.hackaday.io/images/7037851422109910810.jpg">I drew a state machine of how the emitter works using <a href="https://www.lucidchart.com">Lucidchart</a>:<span></span></p><p><img src="https://cdn.hackaday.io/images/9116881422110538168.png"><span></span>The reason to not use a reed or a light sensor is evident here: an active sensor needs power (&gt;1mA), but why use an active sensor when a passive uses absolutely no power whatsoever? That's why a simple lever-switch is the best kind of "sensor" in this scenario.</p></div>
                            </div>
                        </li>
                    
                </ul>

                
                <div class="pagination">
                    
                    
                    <a href="?page=2" class="grey-gold-button next-button show">Next</a>
                    
                </div>
                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = '8gMAXJ6J-8yO3K8jjISI8B8k6vKnrjlvqnkE';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>