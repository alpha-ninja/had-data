<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; Medical tricorder &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F4693%2Flogs">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/4693-medical-tricorder">Medical tricorder</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">Using artificial intelligence to identify a disease by its symptoms</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/56285-m-bindhammer" title="Visit Profile">M. Bindhammer</a><span>&bull;</span>
                
                5 months ago<span>&bull;</span><a href="/project/4693#discussion-list" title="See Comments">8 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/4693-medical-tricorder">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/4693/logs/sort/newest">Newest</option>
                    <option value="/project/4693/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/4693/log/16577-type-2-diabetes-risk-assessment">Type 2 diabetes risk assessment</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/4693/log/16577#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-16577"><p>A risk assessment tool has been coded based on a <a href="http://www.diabetes.fi/files/1100/Type2diabetesRiskTest_.jpg">short list of questions</a> to assess the risk of developing type 2 diabetes over the next ten years. Example Arduino code below:</p><pre class="hljs cpp">char incomingLetter;

void setup() {
  Serial.begin(<span class="hljs-number">9600</span>);
}

void loop() {
  Serial.println(<span class="hljs-string">"TYPE 2 DIABETES RISK ASSESSMENT"</span>); 
  Serial.println(<span class="hljs-string">""</span>);
  <span class="hljs-keyword">int</span> score = <span class="hljs-number">0</span>;
  char * a_to_d[] = {<span class="hljs-string">"a) "</span>, <span class="hljs-string">"b) "</span>, <span class="hljs-string">"c) "</span>, <span class="hljs-string">"d) "</span>};
  char * questionary[<span class="hljs-number">8</span>][<span class="hljs-number">5</span>] = 
  {
    {<span class="hljs-string">"1. AGE"</span>, <span class="hljs-string">"Under 45 years"</span>, <span class="hljs-string">"45-54 years"</span>, <span class="hljs-string">"55-64 years"</span>, <span class="hljs-string">"Over 64 years"</span>},
    {<span class="hljs-string">"2. BODY-MASS INDEX, BMI = MASS [kg]/(HEIGHT [m])^2"</span>, <span class="hljs-string">"Lower than 25 kg/m^2"</span>, <span class="hljs-string">"25-30 kg/m^2"</span>, 
     <span class="hljs-string">"Higher than 30 kg/m^2"</span>},
    {<span class="hljs-string">"3. WAIST CIRCUMFERENCE BELOW RIBS"</span>, <span class="hljs-string">"Men: Less than 94 cm, Women: Less than 80 cm"</span>, 
     <span class="hljs-string">"Men: 94-102 cm, Women: 80-88 cm"</span>, <span class="hljs-string">"Men: More than 102 cm, Women: More than 88 cm"</span>},
    {<span class="hljs-string">"4. DAILY AT LEAST 30 MINUTES PHYSICAL ACTIVITY?"</span>, <span class="hljs-string">"Yes"</span>, <span class="hljs-string">"No"</span>},
    {<span class="hljs-string">"5. HOW OFTEN DO YOU EAT VEGETABLES OR FRUITS?"</span>, <span class="hljs-string">"Every day"</span>, <span class="hljs-string">"Not every day"</span>},
    {<span class="hljs-string">"6. HAVE YOU EVER TAKEN MEDICATION FOR HIGH BLOOD PRESSURE ON REGULARY BASIS?"</span>, <span class="hljs-string">"No"</span>, <span class="hljs-string">"Yes"</span>},
    {<span class="hljs-string">"7. HAVE YOU EVER BEEN FOUND TO HAVE HIGH BLOOD GLUCOSE?"</span>, <span class="hljs-string">"No"</span>, <span class="hljs-string">"Yes"</span>},
    {<span class="hljs-string">"8. HAVE ANY OF THE MEMBERS OF YOUR IMMEDIATE FAMILY BEEN DIAGNOSED WITH DIABETES TYPE 1 OR 2?"</span>, 
     <span class="hljs-string">"No"</span>, <span class="hljs-string">"Yes: grandparent, aunt, uncle, first cousin (but no own parent, sister, brother or child)"</span>, 
     <span class="hljs-string">"Yes: own parent, sister, brother or child"</span>}
  };
  <span class="hljs-keyword">int</span> questionary_col_index[] = {<span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>};
  <span class="hljs-keyword">int</span> score_table[<span class="hljs-number">8</span>][<span class="hljs-number">4</span>] = 
  {
    {<span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>},
    {<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>},
    {<span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>},
    {<span class="hljs-number">0</span>, <span class="hljs-number">2</span>},
    {<span class="hljs-number">0</span>, <span class="hljs-number">1</span>},
    {<span class="hljs-number">0</span>, <span class="hljs-number">2</span>},
    {<span class="hljs-number">0</span>, <span class="hljs-number">5</span>},
    {<span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>}
  };
  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i ++) {
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; questionary_col_index[i] + <span class="hljs-number">2</span>; j ++) {
      <span class="hljs-keyword">if</span>(j &gt; <span class="hljs-number">0</span>) Serial.<span class="hljs-keyword">print</span>(a_to_d[j - <span class="hljs-number">1</span>]);
      Serial.println(questionary[i][j]);
    }
    Serial.println(<span class="hljs-string">""</span>);
    <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>) {
      user_input();
      <span class="hljs-keyword">if</span>(incomingLetter == <span class="hljs-string">'a'</span>) {
        score += score_table[i][<span class="hljs-number">0</span>];
        reset_input();
        <span class="hljs-keyword">break</span>;
      }
      <span class="hljs-keyword">if</span>(incomingLetter == <span class="hljs-string">'b'</span>) {
        score += score_table[i][<span class="hljs-number">1</span>];
        reset_input();
        <span class="hljs-keyword">break</span>;
      }
      <span class="hljs-keyword">if</span>(questionary_col_index[i] &gt; <span class="hljs-number">1</span> &amp;&amp; incomingLetter == <span class="hljs-string">'c'</span>) {
        score += score_table[i][<span class="hljs-number">2</span>];
        reset_input();
        <span class="hljs-keyword">break</span>;
      }
      <span class="hljs-keyword">if</span>(questionary_col_index[i] &gt; <span class="hljs-number">2</span> &amp;&amp; incomingLetter == <span class="hljs-string">'d'</span>) {
        score += score_table[i][<span class="hljs-number">3</span>];
        reset_input();
        <span class="hljs-keyword">break</span>;
      }
    } 
  } 
  char * risk_assessment[] = 
  {
    <span class="hljs-string">"estimated "</span>,
    <span class="hljs-string">"LOW:"</span>,
    <span class="hljs-string">"1 in 100"</span>,
    <span class="hljs-string">"SLIGHTLY ELEVATED:"</span>,
    <span class="hljs-string">"1 in 25"</span>,
    <span class="hljs-string">"MODERATE:"</span>,
    <span class="hljs-string">"1 in 6"</span>,
    <span class="hljs-string">"HIGH:"</span>,
    <span class="hljs-string">"1 in 3"</span>,
    <span class="hljs-string">"VERY HIGH:"</span>,
    <span class="hljs-string">"1 in 2"</span>
  };
  Serial.<span class="hljs-keyword">print</span>(<span class="hljs-string">"THE RISK OF DEVELOPING TYPE 2 DIABETES WITHIN 10 YEARS IS "</span>);
  <span class="hljs-keyword">if</span>(score &lt; <span class="hljs-number">7</span>) {
    Serial.println(risk_assessment[<span class="hljs-number">1</span>]);
    Serial.<span class="hljs-keyword">print</span>(risk_assessment[<span class="hljs-number">0</span>]);
    Serial.<span class="hljs-keyword">print</span>(risk_assessment[<span class="hljs-number">2</span>]);
  }
  <span class="hljs-keyword">if</span>(score &gt; <span class="hljs-number">6</span> &amp;&amp; score &lt; <span class="hljs-number">12</span>) {
    Serial.println(risk_assessment[<span class="hljs-number">3</span>]);
    Serial.<span class="hljs-keyword">print</span>(risk_assessment[<span class="hljs-number">0</span>]);
    Serial.<span class="hljs-keyword">print</span>(risk_assessment[<span class="hljs-number">4</span>]);
  }
  <span class="hljs-keyword">if</span>(score &gt; <span class="hljs-number">11</span> &amp;&amp; score &lt; <span class="hljs-number">15</span>) {
    Serial.println(risk_assessment[<span class="hljs-number">5</span>]);
    Serial.<span class="hljs-keyword">print</span>(risk_assessment[<span class="hljs-number">0</span>]);
    Serial.<span class="hljs-keyword">print</span>(risk_assessment[<span class="hljs-number">6</span>]);
  }
  <span class="hljs-keyword">if</span>(score &gt; <span class="hljs-number">14</span> &amp;&amp; score &lt; <span class="hljs-number">21</span>) {
    Serial.println(risk_assessment[<span class="hljs-number">7</span>]);
    Serial.<span class="hljs-keyword">print</span>(risk_assessment[<span class="hljs-number">0</span>]);
    Serial.<span class="hljs-keyword">print</span>(risk_assessment[<span class="hljs-number">8</span>]);
  }
  <span class="hljs-keyword">if</span>(score &gt; <span class="hljs-number">20</span>) {
    Serial.println(risk_assessment[<span class="hljs-number">9</span>]);
    Serial.<span class="hljs-keyword">print</span>(risk_assessment[<span class="hljs-number">0</span>]);
    Serial.<span class="hljs-keyword">print</span>(risk_assessment[<span class="hljs-number">10</span>]);
  }
  Serial.println(<span class="hljs-string">" will develope disease"</span>);
  Serial.println(<span class="hljs-string">""</span>);
}

void user_input() {
  <span class="hljs-keyword">if</span>(Serial.available()) {
    delay(<span class="hljs-number">50</span>);
    <span class="hljs-keyword">while</span>(Serial.available()) {
      incomingLetter = Serial.<span class="hljs-keyword">read</span>();
    }
  }
}

void reset_input() {
  incomingLetter = <span class="hljs-string">' '</span>;
}</pre><iframe style="width: 500px; height: 281px;" src="//www.youtube.com/embed/Ykv5YDk8Pug" allowfullscreen="" frameborder="0" height="281" width="500"></iframe><br></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4693/log/16806-second-approach-of-a-diabetes-type-2-risk-calculator">Second approach of a diabetes type 2 risk calculator</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/4693/log/16806#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-16806"><p>Based on <a href="http://reference.medscape.com/calculator/diabetes-risk-score-type-2">this reference</a> I started to develop a second diabetes type 2 risk calculator:</p><table><thead><tr><td><strong><h2>Term</h2></strong></td><td><strong><h2>Classification</h2></strong></td><td><strong><h2>Value</h2></strong></td></tr></thead><tbody><tr><td><strong>Sex</strong><br></td><td>Female</td><td><span class="medCalcFontOne">-0.879</span></td></tr><tr><td><br></td><td>Male</td><td>0</td></tr><tr><td><span class="medCalcFontOneBold"><strong>Rx HTN<br>(High blood pressure medication)<br></strong></span></td><td>Yes</td><td><span class="medCalcFontOne">1.222</span></td></tr><tr><td></td><td>No</td><td>0</td></tr><tr><td><strong>Rx Steroids<br>(Steroids medication)</strong></td><td>Yes</td><td><span class="medCalcFontOne">2.191</span></td></tr><tr><td></td><td>No</td><td>0</td></tr><tr><td><strong>Age <br></strong></td><td>/</td><td>[years]</td></tr><tr><td><span class="medCalcFontOneBold"><strong>BMI <br>(Body mass index in <span class="medCalcFontOneBold"><strong>kg/m²</strong></span>)</strong><br></span></td><td><span class="medCalcFontOne">&lt; 25</span></td><td>0</td></tr><tr><td></td><td><span class="medCalcFontOne">25 - 27.49</span></td><td><span class="medCalcFontOne">0.699</span></td></tr><tr><td></td><td><span class="medCalcFontOne">27.5 - 29.99</span></td><td><span class="medCalcFontOne">1.97</span></td></tr><tr><td></td><td><b></b>≥ 30</td><td><span class="medCalcFontOne">2.518</span></td></tr><tr><td><strong>FMH<br>(Family medical history<em></em>)<br></strong></td><td><span class="medCalcFontOne">No 1st degree family members with diabetes</span></td><td>0</td></tr><tr><td></td><td><span class="medCalcFontOne">Parent OR</span> siblings with diabetes mellitus<span></span></td><td><span class="medCalcFontOne">0.728</span></td></tr><tr><td></td><td><span class="medCalcFontOne">Parent AND</span> siblings with diabetes mellitus</td><td><span class="medCalcFontOne">0.753</span></td></tr><tr><td><strong>Smoker</strong></td><td><span class="medCalcFontOne">Non smoker</span></td><td>0</td></tr><tr><td></td><td><span class="medCalcFontOne">Used to smoke</span></td><td><span class="medCalcFontOne">-0.218</span></td></tr><tr><td></td><td>Smoker</td><td><span class="medCalcFontOne">0.855</span></td></tr></tbody></table><p>The risk to suffer from diabetes type 2 is then given by</p><p><img alt="\color{White} \large Terms=6.322-Sex-RxHTN-RxSteroids-0.063 \times Age-BMI-FMH-Smoker " title="\color{White} \large Terms=6.322-Sex-RxHTN-RxSteroids-0.063 \times Age-BMI-FMH-Smoker " src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20Terms%3D6.322-Sex-RxHTN-RxSteroids-0.063%20%5Ctimes%20Age-BMI-FMH-Smoker%20"><img alt="\color{White} \large Risk= \frac{100}{1+e^{Terms}} " title="\color{White} \large Risk= \frac{100}{1+e^{Terms}} " src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20Risk%3D%20%5Cfrac%7B100%7D%7B1%2Be%5E%7BTerms%7D%7D%20"></p><p>That's a <a href="http://en.wikipedia.org/wiki/Logistic_function">logistic function</a> of the form</p><p><img alt="\color{White} \large \color{White} \large f(x)= \frac{L}{1+e^{-k\times \big(x-x_{0}\big)}}   " title="\color{White} \large \color{White} \large f(x)= \frac{L}{1+e^{-k\times \big(x-x_{0}\big)}}   " src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20%5Ccolor%7BWhite%7D%20%5Clarge%20f(x)%3D%20%5Cfrac%7BL%7D%7B1%2Be%5E%7B-k%5Ctimes%20%5Cbig(x-x_%7B0%7D%5Cbig)%7D%7D%20%20%20">with<i> L</i> = 100, midpoint x-value<i> </i><em>x0</em> = 0 and steepness <em>k</em> = -1. The plot of the risk function looks as follows:</p><p><img src="https://cdn.hackaday.io/images/2591431429709703483.jpg"></p><p>Example code:</p><pre class="hljs cpp">String commandbuffer;

<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setup</span><span class="hljs-params">()</span> </span>{
  Serial.begin(<span class="hljs-number">9600</span>);
}

<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">loop</span><span class="hljs-params">()</span> </span>{
  <span class="hljs-keyword">char</span>* a_c[] = {<span class="hljs-string">"a) "</span>, <span class="hljs-string">"b) "</span>, <span class="hljs-string">"c) "</span>};
  <span class="hljs-keyword">char</span>* questionary[<span class="hljs-number">8</span>][<span class="hljs-number">4</span>] = 
  {
    {<span class="hljs-string">"1. GENDER"</span>, <span class="hljs-string">"Female"</span>, <span class="hljs-string">"Male"</span>},
    {<span class="hljs-string">"2. HIGH BLOOD PRESSURE MEDICATION"</span>, <span class="hljs-string">"Yes"</span>, <span class="hljs-string">"No"</span>},
    {<span class="hljs-string">"3. STEROIDS MEDICATION"</span>, <span class="hljs-string">"Yes"</span>, <span class="hljs-string">"No"</span>},
    {<span class="hljs-string">"4. AGE [years]"</span>},
    {<span class="hljs-string">"5. BODY MASS [kg]"</span>},
    {<span class="hljs-string">"6. BODY HEIGHT [m]"</span>},
    {<span class="hljs-string">"7. FAMILY MEDICAL HISTORY"</span>, <span class="hljs-string">"No 1st degree family members with diabetes"</span>, 
     <span class="hljs-string">"Parent OR siblings with diabetes mellitus"</span>, 
     <span class="hljs-string">"Parent AND siblings with diabetes mellitus"</span>},
    {<span class="hljs-string">"8. SMOKER"</span>, <span class="hljs-string">"Non smoker"</span>, <span class="hljs-string">"Used to smoke"</span>, <span class="hljs-string">"Smoker"</span>}
  };
  <span class="hljs-keyword">int</span> column_index[] = {<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>};
  <span class="hljs-keyword">float</span> score[<span class="hljs-number">6</span>][<span class="hljs-number">4</span>] = 
  {
    {-<span class="hljs-number">0.879</span>, <span class="hljs-number">0.0</span>},
    {<span class="hljs-number">1.222</span>, <span class="hljs-number">0.0</span>},
    {<span class="hljs-number">2.191</span>, <span class="hljs-number">0.0</span>},
    {<span class="hljs-number">0.0</span>, <span class="hljs-number">0.699</span>, <span class="hljs-number">1.97</span>, <span class="hljs-number">2.518</span>},
    {<span class="hljs-number">0.0</span>, <span class="hljs-number">0.728</span>, <span class="hljs-number">0.753</span>},
    {<span class="hljs-number">0.0</span>, -<span class="hljs-number">0.218</span>, <span class="hljs-number">0.855</span>}
  };
  <span class="hljs-keyword">float</span> terms[<span class="hljs-number">7</span>];
  <span class="hljs-keyword">float</span> mass, height, BMI;
  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i++) {
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; column_index[i] + <span class="hljs-number">1</span>; j++) {
      <span class="hljs-keyword">if</span>(j &gt; <span class="hljs-number">0</span>) Serial.print(a_c[j-<span class="hljs-number">1</span>]);
      Serial.println(questionary[i][j]);
    }
    <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>) {
      user_input();
      <span class="hljs-keyword">if</span>(i &lt; <span class="hljs-number">3</span> &amp;&amp; (commandbuffer == <span class="hljs-string">"a"</span> || commandbuffer == <span class="hljs-string">"b"</span>)) {
        <span class="hljs-keyword">if</span>(commandbuffer == <span class="hljs-string">"a"</span>) {
          input_reset();
          terms[i] = score[i][<span class="hljs-number">0</span>];
          <span class="hljs-keyword">break</span>;
        } 
        <span class="hljs-keyword">if</span>(commandbuffer == <span class="hljs-string">"b"</span>) {
          input_reset();
          terms[i] = score[i][<span class="hljs-number">1</span>];
          <span class="hljs-keyword">break</span>;
        } 
      } 
      <span class="hljs-keyword">if</span>(i == <span class="hljs-number">3</span> &amp;&amp; commandbuffer.toInt() &gt; <span class="hljs-number">0</span> &amp;&amp; commandbuffer.toInt() &lt; <span class="hljs-number">121</span>) {
        Serial.print(<span class="hljs-string">"Age: "</span>);
        Serial.print(commandbuffer.toInt());
        Serial.println(<span class="hljs-string">" year(s)"</span>);
        terms[i] = <span class="hljs-keyword">float</span>(commandbuffer.toInt());
        input_reset();
        <span class="hljs-keyword">break</span>;
      } 
      <span class="hljs-keyword">if</span>(i == <span class="hljs-number">4</span> &amp;&amp; commandbuffer.toFloat() &gt; <span class="hljs-number">5.0</span> &amp;&amp; commandbuffer.toFloat() &lt; <span class="hljs-number">250.0</span>) {
        Serial.print(<span class="hljs-string">"Body mass: "</span>);
        Serial.print(commandbuffer.toFloat());
        Serial.println(<span class="hljs-string">" kg"</span>);
        mass = commandbuffer.toFloat();
        input_reset();
        <span class="hljs-keyword">break</span>;
      } 
      <span class="hljs-keyword">if</span>(i == <span class="hljs-number">5</span> &amp;&amp; commandbuffer.toFloat() &gt; <span class="hljs-number">0.4</span> &amp;&amp; commandbuffer.toFloat() &lt; <span class="hljs-number">2.5</span>) {
        Serial.print(<span class="hljs-string">"Body height: "</span>);
        Serial.print(commandbuffer.toFloat());
        Serial.println(<span class="hljs-string">" m"</span>);
        height = commandbuffer.toFloat();
        BMI = mass / <span class="hljs-built_in">pow</span>(height, <span class="hljs-number">2.0</span>);
        Serial.print(<span class="hljs-string">"BMI: "</span>);
        Serial.print(BMI);
        Serial.println(<span class="hljs-string">" kg/m^2"</span>);
        <span class="hljs-keyword">if</span>(BMI &lt; <span class="hljs-number">25.0</span>) terms[i-<span class="hljs-number">1</span>] = score[i-<span class="hljs-number">2</span>][<span class="hljs-number">0</span>];
        <span class="hljs-keyword">if</span>(BMI &gt;= <span class="hljs-number">25.0</span> &amp;&amp; BMI &lt; <span class="hljs-number">27.5</span>) terms[i-<span class="hljs-number">1</span>] = score[i - <span class="hljs-number">2</span>][<span class="hljs-number">1</span>];
        <span class="hljs-keyword">if</span>(BMI &gt;= <span class="hljs-number">27.5</span> &amp;&amp; BMI &lt; <span class="hljs-number">30</span>) terms[i-<span class="hljs-number">1</span>] = score[i - <span class="hljs-number">2</span>][<span class="hljs-number">2</span>];
        <span class="hljs-keyword">if</span>(BMI &gt;= <span class="hljs-number">30.0</span>) terms[i-<span class="hljs-number">1</span>] = score[i-<span class="hljs-number">2</span>][<span class="hljs-number">3</span>];
        input_reset();
        <span class="hljs-keyword">break</span>;
      } 
      <span class="hljs-keyword">if</span>(i &gt; <span class="hljs-number">5</span> &amp;&amp; (commandbuffer == <span class="hljs-string">"a"</span> || commandbuffer == <span class="hljs-string">"b"</span> || commandbuffer == <span class="hljs-string">"c"</span>)) {
        <span class="hljs-keyword">if</span>(commandbuffer == <span class="hljs-string">"a"</span>) {
          input_reset();
          terms[i-<span class="hljs-number">1</span>] = score[i-<span class="hljs-number">2</span>][<span class="hljs-number">0</span>];
          <span class="hljs-keyword">break</span>;
        } 
        <span class="hljs-keyword">if</span>(commandbuffer == <span class="hljs-string">"b"</span>) {
          input_reset();
          terms[i-<span class="hljs-number">1</span>] = score[i-<span class="hljs-number">2</span>][<span class="hljs-number">1</span>];
          <span class="hljs-keyword">break</span>;
        } 
        <span class="hljs-keyword">if</span>(commandbuffer == <span class="hljs-string">"c"</span>) {
          input_reset();
          terms[i-<span class="hljs-number">1</span>] = score[i-<span class="hljs-number">2</span>][<span class="hljs-number">2</span>];
          <span class="hljs-keyword">break</span>;
        }
      } 
      <span class="hljs-function"><span class="hljs-keyword">else</span> <span class="hljs-title">input_reset</span><span class="hljs-params">()</span></span>;
    }
    Serial.println(<span class="hljs-string">""</span>);
  }
  <span class="hljs-keyword">float</span> exponent = <span class="hljs-number">6.322</span>-terms[<span class="hljs-number">0</span>]-terms[<span class="hljs-number">1</span>]-terms[<span class="hljs-number">2</span>]-<span class="hljs-number">0.063</span>*terms[<span class="hljs-number">3</span>]-terms[<span class="hljs-number">4</span>]-terms[<span class="hljs-number">5</span>]-terms[<span class="hljs-number">6</span>];
  <span class="hljs-keyword">float</span> risk = <span class="hljs-number">100.0</span>/(<span class="hljs-number">1</span>+<span class="hljs-built_in">exp</span>(exponent));
  Serial.print(<span class="hljs-string">"RISK TO SUFFER FROM TYPE 2 DIABETES: "</span>);
  Serial.print(risk, <span class="hljs-number">3</span>);
  Serial.println(<span class="hljs-string">" %"</span>);
  Serial.println(<span class="hljs-string">""</span>); 
}

<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">user_input</span><span class="hljs-params">()</span> </span>{
  <span class="hljs-keyword">if</span>(Serial.available()){
    delay(<span class="hljs-number">100</span>);
    <span class="hljs-keyword">while</span>(Serial.available()) {
      commandbuffer += (<span class="hljs-keyword">char</span>)Serial.read();
    }
  }
}

<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">input_reset</span><span class="hljs-params">()</span> </span>{
  commandbuffer = <span class="hljs-string">""</span>;
}</pre><br></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4693/log/17230-framingham-risk-score">Framingham risk score</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/4693/log/17230#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17230"><p>The <a href="http://en.wikipedia.org/wiki/Framingham_Risk_Score">Framingham risk score</a> is an algorithm to estimate the 10-year risk of developing coronary heart disease (CHD). I want to combine the diabetes type 2 risk calculator with this algorithm because many of the input data are the same. Furthermore I want to research if total/HDL cholesterol as well as systolic blood pressure can be estimated from simple to obtain numerical data (e.g. BMI) or <span class="st">Boolean</span> data (e.g. on high blood pressure medication? - yes, no) in case the user has no access to laboratory diagnosis and blood pressure monitor.</p><p>Code snippet of Framingham risk score algorithm below:</p><pre class="hljs cpp">// Framingham Risk Score

void setup() {
  Serial.begin(9600);
}

void loop() {
  // user input data
  boolean gender = true; // false: female, true: male
  boolean smoker = true;
  boolean medication = true; // high blood pressure medication
  int age = 60;
  int total_cholesterol = 200; // mg/dL
  int HDL_cholesterol = 20; // mg/dL
  int systolic<span class="hljs-emphasis">_blood_</span>pressure = 200; // mm Hg
  
  int CHD_score;
  // look-up tables obtained from <a href="http://en.wikipedia.org/wiki/Framingham" target="_blank">http://en.wikipedia.org/wiki/Framingham</a><span class="hljs-emphasis">_Risk_</span>Score
  int score<span class="hljs-emphasis">_age_</span>women_men[<span class="hljs-link_label">10</span>][<span class="hljs-link_reference">4</span>] =
  {
<span class="hljs-code">    {20, 34, -7, -9},</span>
<span class="hljs-code">    {35, 39, -3, -4},</span>
<span class="hljs-code">    {40, 44, 0, 0},</span>
<span class="hljs-code">    {45, 49, 3, 3},</span>
<span class="hljs-code">    {50, 54, 6, 6},</span>
<span class="hljs-code">    {55, 59, 8, 8},</span>
<span class="hljs-code">    {60, 64, 10, 10},</span>
<span class="hljs-code">    {65, 69, 12, 11},</span>
<span class="hljs-code">    {70, 74, 14, 12},</span>
<span class="hljs-code">    {75, 79, 16, 13}</span>
  };
  int tot<span class="hljs-emphasis">_cholesterol_</span>women_men[<span class="hljs-link_label">5</span>][<span class="hljs-link_reference">12</span>] =
  {
<span class="hljs-code">    {130, 159,  0, 0, 0, 0, 0,  0, 0, 0, 0, 0},</span>
<span class="hljs-code">    {160, 199,  4, 3, 2, 1, 1,  4, 3, 2, 1, 0},</span>
<span class="hljs-code">    {200, 239,  8, 6, 4, 2, 1,  7, 5, 3, 1, 0},</span>
<span class="hljs-code">    {240, 279,  11, 8, 5, 3, 2,  9, 6, 4, 2, 1},</span>
<span class="hljs-code">    {280, 320,  13, 10, 7, 4, 2,  11, 8, 5, 3, 1}</span>
  };
  int smoker<span class="hljs-emphasis">_women_</span>men[<span class="hljs-link_label">5</span>][<span class="hljs-link_reference">2</span>] =
  {
<span class="hljs-code">    {9, 8},</span>
<span class="hljs-code">    {7, 5},</span>
<span class="hljs-code">    {4, 3},</span>
<span class="hljs-code">    {2, 1},</span>
<span class="hljs-code">    {1, 1}</span>
  };
  int HDL<span class="hljs-emphasis">_cholesterol_</span>women_men[<span class="hljs-link_label">4</span>][<span class="hljs-link_reference">3</span>] =
  {
<span class="hljs-code">    {60, 100, -1},</span>
<span class="hljs-code">    {50, 59, 0},</span>
<span class="hljs-code">    {40, 49, 1},</span>
<span class="hljs-code">    {20, 39, 2}</span>
  };
  int blood<span class="hljs-emphasis">_pressure_</span>women_men[<span class="hljs-link_label">5</span>][<span class="hljs-link_reference">6</span>] =
  {
<span class="hljs-code">    {90, 119,  0, 0,  0, 0},</span>
<span class="hljs-code">    {120, 129,  1, 3,  0, 1},</span>
<span class="hljs-code">    {130, 139,  2, 4,  1, 2},</span>
<span class="hljs-code">    {140, 159,  3, 5,  1, 2},</span>
<span class="hljs-code">    {160, 200,  4, 6,  2, 3}</span>
  };
  int CHD<span class="hljs-emphasis">_risk_</span>score[<span class="hljs-link_label">14</span>][<span class="hljs-link_reference">6</span>] =
  {
<span class="hljs-code">    {-10, 8,  -10, 0,  1, 1},</span>
<span class="hljs-code">    {9, 12,  1, 4,  1, 1},</span>
<span class="hljs-code">    {13, 14,  5, 6,  2, 2},</span>
<span class="hljs-code">    {15, 15,  7, 7,  3, 3},</span>
<span class="hljs-code">    {16, 16,  8, 8,  4, 4},</span>
<span class="hljs-code">    {17, 17,  9, 9,  5, 5},</span>
<span class="hljs-code">    {18, 18,  10, 10,  6, 6},</span>
<span class="hljs-code">    {19, 19,  11, 11,  8, 8},</span>
<span class="hljs-code">    {20, 20,  12, 12,  11, 10},</span>
<span class="hljs-code">    {21, 21,  13, 13,  14, 12},</span>
<span class="hljs-code">    {22, 22,  14, 14,  17, 16},</span>
<span class="hljs-code">    {23, 23,  15, 15,  22, 20},</span>
<span class="hljs-code">    {24, 24,  16, 16,  27, 25},</span>
<span class="hljs-code">    {25, 46,  17, 46,  30, 30}</span>
  };
  // compute age score
  for(int i = 0; i <span class="xml"><span class="hljs-tag">&lt; <span class="hljs-attribute">10</span>; <span class="hljs-attribute">i</span>++) {
    <span class="hljs-attribute">if</span>(<span class="hljs-attribute">gender</span> =<span class="hljs-value">=</span> <span class="hljs-attribute">false</span> &amp;&amp; <span class="hljs-attribute">age</span> &gt;</span></span>= score<span class="hljs-emphasis">_age_</span>women<span class="hljs-emphasis">_men[i][0] &amp;&amp; age &lt;= score_</span>age<span class="hljs-emphasis">_women_</span>men[<span class="hljs-link_label">i</span>][<span class="hljs-link_reference">1</span>]) {
<span class="hljs-code">      CHD_score = score_age_women_men[i][2];</span>
<span class="hljs-code">      break;</span>
<span class="hljs-code">    }</span>
<span class="hljs-code">    if(gender == true &amp;&amp; age &gt;= score_age_women_men[i][0] &amp;&amp; age &lt;= score_age_women_men[i][1]) {</span>
<span class="hljs-code">      CHD_score = score_age_women_men[i][3];</span>
<span class="hljs-code">      break;</span>
<span class="hljs-code">    }</span>
  }
  // get age index for cholesterol and smoker score
  int j;
  for(j = 0; j <span class="xml"><span class="hljs-tag">&lt; <span class="hljs-attribute">9</span>; <span class="hljs-attribute">j</span> += <span class="hljs-attribute">2</span>) {
    <span class="hljs-attribute">if</span>(<span class="hljs-attribute">age</span> &gt;</span></span>= score<span class="hljs-emphasis">_age_</span>women<span class="hljs-emphasis">_men[j][0] &amp;&amp; age &lt;= score_</span>age<span class="hljs-emphasis">_women_</span>men[<span class="hljs-link_label">j+1</span>][<span class="hljs-link_reference">1</span>]) {
<span class="hljs-code">      j = j/2;</span>
<span class="hljs-code">      break;</span>
<span class="hljs-code">    }</span>
  }
  // compute cholesterol and smoker score
  for(int i = 0; i <span class="xml"><span class="hljs-tag">&lt; <span class="hljs-attribute">5</span>; <span class="hljs-attribute">i</span>++) {
    <span class="hljs-attribute">if</span>(<span class="hljs-attribute">total_cholesterol</span> &gt;</span></span>= tot<span class="hljs-emphasis">_cholesterol_</span>women<span class="hljs-emphasis">_men[i][0] &amp;&amp; total_</span>cholesterol <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-title">=</span> <span class="hljs-attribute">tot_cholesterol_women_men</span>[<span class="hljs-attribute">i</span>][<span class="hljs-attribute">1</span>]) {
      <span class="hljs-attribute">if</span>(<span class="hljs-attribute">gender</span> =<span class="hljs-value">=</span> <span class="hljs-attribute">false</span>) {
        <span class="hljs-attribute">CHD_score</span> += <span class="hljs-attribute">tot_cholesterol_women_men</span>[<span class="hljs-attribute">i</span>][<span class="hljs-attribute">j</span>+<span class="hljs-attribute">2</span>];
        <span class="hljs-attribute">if</span>(<span class="hljs-attribute">smoker</span> =<span class="hljs-value">=</span> <span class="hljs-attribute">true</span>) <span class="hljs-attribute">CHD_score</span> += <span class="hljs-attribute">smoker_women_men</span>[<span class="hljs-attribute">j</span>][<span class="hljs-attribute">0</span>];
      }
      <span class="hljs-attribute">if</span>(<span class="hljs-attribute">gender</span> =<span class="hljs-value">=</span> <span class="hljs-attribute">true</span>) {
        <span class="hljs-attribute">CHD_score</span> += <span class="hljs-attribute">tot_cholesterol_women_men</span>[<span class="hljs-attribute">i</span>][<span class="hljs-attribute">j</span>+<span class="hljs-attribute">7</span>];
        <span class="hljs-attribute">if</span>(<span class="hljs-attribute">smoker</span> =<span class="hljs-value">=</span> <span class="hljs-attribute">true</span>) <span class="hljs-attribute">CHD_score</span> += <span class="hljs-attribute">smoker_women_men</span>[<span class="hljs-attribute">j</span>][<span class="hljs-attribute">1</span>];
      }
      <span class="hljs-attribute">break</span>; 
    }
  }
  // <span class="hljs-attribute">compute</span> <span class="hljs-attribute">HDL</span> <span class="hljs-attribute">cholesterol</span> <span class="hljs-attribute">score</span>
  <span class="hljs-attribute">for</span>(<span class="hljs-attribute">int</span> <span class="hljs-attribute">i</span> = <span class="hljs-attribute">0</span>; <span class="hljs-attribute">i</span> &lt; <span class="hljs-attribute">4</span>; <span class="hljs-attribute">i</span>++) {
    <span class="hljs-attribute">if</span>(<span class="hljs-attribute">HDL_cholesterol</span> &gt;</span></span>= HDL<span class="hljs-emphasis">_cholesterol_</span>women<span class="hljs-emphasis">_men[i][0] &amp;&amp; HDL_</span>cholesterol <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-title">=</span> <span class="hljs-attribute">HDL_cholesterol_women_men</span>[<span class="hljs-attribute">i</span>][<span class="hljs-attribute">1</span>]) {
      <span class="hljs-attribute">CHD_score</span> += <span class="hljs-attribute">HDL_cholesterol_women_men</span>[<span class="hljs-attribute">i</span>][<span class="hljs-attribute">2</span>];
      <span class="hljs-attribute">break</span>;
    }
  }
  // <span class="hljs-attribute">compute</span> <span class="hljs-attribute">blood</span> <span class="hljs-attribute">pressure</span> <span class="hljs-attribute">score</span>
  <span class="hljs-attribute">for</span>(<span class="hljs-attribute">int</span> <span class="hljs-attribute">i</span> = <span class="hljs-attribute">0</span>; <span class="hljs-attribute">i</span> &lt; <span class="hljs-attribute">5</span>; <span class="hljs-attribute">i</span>++) {
    <span class="hljs-attribute">if</span>(<span class="hljs-attribute">systolic_blood_pressure</span> &gt;</span></span>= blood<span class="hljs-emphasis">_pressure_</span>women<span class="hljs-emphasis">_men[i][0] &amp;&amp; systolic_</span>blood<span class="hljs-emphasis">_pressure &lt;= blood_</span>pressure<span class="hljs-emphasis">_women_</span>men[<span class="hljs-link_label">i</span>][<span class="hljs-link_reference">1</span>]) {
<span class="hljs-code">      if(gender == false) {</span>
<span class="hljs-code">        if(medication == false) CHD_score += blood_pressure_women_men[i][2];</span>
<span class="hljs-code">        if(medication == true) CHD_score += blood_pressure_women_men[i][3];</span>
<span class="hljs-code">      }</span>
<span class="hljs-code">      if(gender == true) {</span>
<span class="hljs-code">        if(medication == false) CHD_score += blood_pressure_women_men[i][4];</span>
<span class="hljs-code">        if(medication == true) CHD_score += blood_pressure_women_men[i][5];</span>
<span class="hljs-code">      }</span>
<span class="hljs-code">    }</span>
  }
  // compute 10 year CHD risk
  for(int i = 0; i <span class="xml"><span class="hljs-tag">&lt; <span class="hljs-attribute">14</span>; <span class="hljs-attribute">i</span>++) {
    <span class="hljs-attribute">if</span>(<span class="hljs-attribute">gender</span> =<span class="hljs-value">=</span> <span class="hljs-attribute">false</span>) {
      <span class="hljs-attribute">if</span>(<span class="hljs-attribute">CHD_score</span> &gt;</span></span>= CHD<span class="hljs-emphasis">_risk_</span>score[<span class="hljs-link_label">i</span>][<span class="hljs-link_reference">0</span>] &amp;&amp; CHD<span class="hljs-emphasis">_score &lt;= CHD_</span>risk_score[<span class="hljs-link_label">i</span>][<span class="hljs-link_reference">1</span>]) {
<span class="hljs-code">        if(i == 0) Serial.print("&lt; ");</span>
<span class="hljs-code">        if(i == 13) Serial.print("&gt; ");</span>
<span class="hljs-code">        Serial.print(CHD_risk_score[i][4]);</span>
<span class="hljs-code">        break;</span>
<span class="hljs-code">      }</span>
<span class="hljs-code">    }</span>
<span class="hljs-code">    if(gender == true) {</span>
<span class="hljs-code">      if(CHD_score &gt;= CHD_risk_score[i][2] &amp;&amp; CHD_score &lt;= CHD_risk_score[i][3]) {</span>
<span class="hljs-code">        if(i == 0) Serial.print("&lt; ");</span>
<span class="hljs-code">        if(i == 13) Serial.print("&gt; ");</span>
<span class="hljs-code">        Serial.print(CHD_risk_score[i][5]);</span>
<span class="hljs-code">        break;</span>
<span class="hljs-code">      }</span>
<span class="hljs-code">    }</span>
  }
  Serial.println(" of 100 people with this level of risk will have a heart attack in the next 10 years");
  while(1) {
  } 
}</pre></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4693/log/17275-relationship-between-systolic-blood-pressure-totalhdl-cholesterol-and-bmi">Relationship between systolic blood pressure, total/HDL cholesterol and BMI</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/4693/log/17275#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17275"><p>The <a href="http://sphweb.bumc.bu.edu/otlt/MPH-Modules/BS/BS704_Correlation-Regression/mobile_pages/BS704_Correlation-Regression4.html">relationship between total/HDL cholesterol and BMI</a> can be expressed by <a href="http://en.wikipedia.org/wiki/Simple_linear_regression">simple linear regression</a> models:</p><p><img alt="\color{White} \large  Total~cholesterol~ \left [ \frac{mg}{dl} \right ]=28.07+6.49 \times BMI~\left [ \frac{kg}{m^{2}} \right ] " title="\color{White} \large  Total~cholesterol~ \left [ \frac{mg}{dl} \right ]=28.07+6.49 \times BMI~\left [ \frac{kg}{m^{2}} \right ] " src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20%20Total~cholesterol~%20%5Cleft%20%5B%20%5Cfrac%7Bmg%7D%7Bdl%7D%20%5Cright%20%5D%3D28.07%2B6.49%20%5Ctimes%20BMI~%5Cleft%20%5B%20%5Cfrac%7Bkg%7D%7Bm%5E%7B2%7D%7D%20%5Cright%20%5D%20"><img alt="\color{White} \large  HDL~cholesterol~ \left [ \frac{mg}{dl} \right ]=111.79-2.35 \times BMI~\left [ \frac{kg}{m^{2}} \right ] " title="\color{White} \large  HDL~cholesterol~ \left [ \frac{mg}{dl} \right ]=111.79-2.35 \times BMI~\left [ \frac{kg}{m^{2}} \right ] " src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20%20HDL~cholesterol~%20%5Cleft%20%5B%20%5Cfrac%7Bmg%7D%7Bdl%7D%20%5Cright%20%5D%3D111.79-2.35%20%5Ctimes%20BMI~%5Cleft%20%5B%20%5Cfrac%7Bkg%7D%7Bm%5E%7B2%7D%7D%20%5Cright%20%5D%20">The <a href="http://sphweb.bumc.bu.edu/otlt/MPH-Modules/BS/BS704-EP713_MultivariableMethods/BS704-EP713_MultivariableMethods3.html">relationship between the systolic blood pressure and BMI</a> can be expressed by a simple multiple regression model:</p><p><img alt="\color{White} \large Systolic~blood~pressure~ \left [ mm~Hg \right ]=68.15 + 0.58 \times BMI ~\left [ \frac{kg}{m^{2}} \right ]+ 0.65  \times Age ~[a]+ 0.94  \times Gender+ 6.44  \times Hypertension~treatment  " title="\color{White} \large Systolic~blood~pressure~ \left [ mm~Hg \right ]=68.15 + 0.58 \times BMI ~\left [ \frac{kg}{m^{2}} \right ]+ 0.65  \times Age ~[a]+ 0.94  \times Gender+ 6.44  \times Hypertension~treatment  " src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20Systolic~blood~pressure~%20%5Cleft%20%5B%20mm~Hg%20%5Cright%20%5D%3D68.15%20%2B%200.58%20%5Ctimes%20BMI%20~%5Cleft%20%5B%20%5Cfrac%7Bkg%7D%7Bm%5E%7B2%7D%7D%20%5Cright%20%5D%2B%200.65%20%20%5Ctimes%20Age%20~%5Ba%5D%2B%200.94%20%20%5Ctimes%20Gender%2B%206.44%20%20%5Ctimes%20Hypertension~treatment%20%20"><img alt="\color{White} \large Gender =\begin{cases}0&amp; female\\1 &amp; male\end{cases}" title="\color{White} \large Gender =\begin{cases}0&amp; female\\1 &amp; male\end{cases}" src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20Gender%20%3D%5Cbegin%7Bcases%7D0%26%20female%5C%5C1%20%26%20male%5Cend%7Bcases%7D"><img alt="\color{White} \large Hypertension~treatment =\begin{cases}0&amp; no\\1 &amp; yes\end{cases}" title="\color{White} \large Hypertension~treatment =\begin{cases}0&amp; no\\1 &amp; yes\end{cases}" src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20Hypertension~treatment%20%3D%5Cbegin%7Bcases%7D0%26%20no%5C%5C1%20%26%20yes%5Cend%7Bcases%7D">Now diabetes type 2 and Framingham risk score calculator can be combined as mentioned in my previous project log. With the data we get from the diabetes type 2 questionnaire, we can compute total/HDL cholesterol and systolic blood pressure which are needed for the Framingham risk score algorithm. Video after the code snippet...</p><pre class="hljs cpp"><span class="hljs-comment">/*
  diabetes type 2 &amp; heart attack risk calculator
  total/HDL cholesterol and systolic blood pressure
  estimated by linear regression models
*/</span>

<span class="hljs-keyword">char</span> commandbuffer[<span class="hljs-number">10</span>]; 
<span class="hljs-keyword">int</span> commandbuffer_index;

<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setup</span> <span class="hljs-params">()</span></span>{
  Serial.begin(<span class="hljs-number">9600</span>);
  Serial.flush();
}

<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">loop</span> <span class="hljs-params">()</span> </span>{
  <span class="hljs-keyword">char</span>* a_c[] = {<span class="hljs-string">"a) "</span>, <span class="hljs-string">"b) "</span>, <span class="hljs-string">"c) "</span>};
  <span class="hljs-keyword">char</span>* questionary[<span class="hljs-number">8</span>][<span class="hljs-number">4</span>] = 
  {
    {<span class="hljs-string">"1. GENDER"</span>, <span class="hljs-string">"Female"</span>, <span class="hljs-string">"Male"</span>},
    {<span class="hljs-string">"2. HIGH BLOOD PRESSURE MEDICATION"</span>, <span class="hljs-string">"Yes"</span>, <span class="hljs-string">"No"</span>},
    {<span class="hljs-string">"3. STEROIDS MEDICATION"</span>, <span class="hljs-string">"Yes"</span>, <span class="hljs-string">"No"</span>},
    {<span class="hljs-string">"4. AGE [years]"</span>},
    {<span class="hljs-string">"5. BODY MASS [kg]"</span>},
    {<span class="hljs-string">"6. BODY HEIGHT [m]"</span>},
    {<span class="hljs-string">"7. FAMILY MEDICAL HISTORY"</span>, <span class="hljs-string">"No 1st degree family members with diabetes"</span>, 
     <span class="hljs-string">"Parent OR siblings with diabetes mellitus"</span>, 
     <span class="hljs-string">"Parent AND siblings with diabetes mellitus"</span>},
    {<span class="hljs-string">"8. SMOKER"</span>, <span class="hljs-string">"Non smoker"</span>, <span class="hljs-string">"Used to smoke"</span>, <span class="hljs-string">"Smoker"</span>}
  };
  <span class="hljs-keyword">int</span> column_index[] = {<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>};
  boolean smoker, gender, medication;
  <span class="hljs-keyword">float</span> score[<span class="hljs-number">6</span>][<span class="hljs-number">4</span>] = 
  {
    {-<span class="hljs-number">0.879</span>, <span class="hljs-number">0.0</span>},
    {<span class="hljs-number">1.222</span>, <span class="hljs-number">0.0</span>},
    {<span class="hljs-number">2.191</span>, <span class="hljs-number">0.0</span>},
    {<span class="hljs-number">0.0</span>, <span class="hljs-number">0.699</span>, <span class="hljs-number">1.97</span>, <span class="hljs-number">2.518</span>},
    {<span class="hljs-number">0.0</span>, <span class="hljs-number">0.728</span>, <span class="hljs-number">0.753</span>},
    {<span class="hljs-number">0.0</span>, -<span class="hljs-number">0.218</span>, <span class="hljs-number">0.855</span>}
  };
  <span class="hljs-keyword">float</span> terms[<span class="hljs-number">7</span>];
  <span class="hljs-keyword">float</span> mass, height, age, BMI, TC, HDLC, SBP;
  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i++) {
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; column_index[i] + <span class="hljs-number">1</span>; j++) {
      <span class="hljs-keyword">if</span>(j &gt; <span class="hljs-number">0</span>) Serial.print(a_c[j-<span class="hljs-number">1</span>]);
      Serial.println(questionary[i][j]);
    }
    <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>) {
      user_input();
      <span class="hljs-keyword">if</span>(i &lt; <span class="hljs-number">3</span> &amp;&amp; ((commandbuffer_index &gt; <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-built_in">strcmp</span>(<span class="hljs-string">"a"</span>, commandbuffer) == <span class="hljs-number">0</span>) || 
        (commandbuffer_index &gt; <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-built_in">strcmp</span>(<span class="hljs-string">"b"</span>, commandbuffer) == <span class="hljs-number">0</span>))) {
        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(<span class="hljs-string">"a"</span>, commandbuffer) == <span class="hljs-number">0</span>) {
          <span class="hljs-keyword">if</span>(i == <span class="hljs-number">0</span>) gender = <span class="hljs-keyword">false</span>;
          <span class="hljs-keyword">if</span>(i == <span class="hljs-number">1</span>) medication = <span class="hljs-keyword">true</span>;
          terms[i] = score[i][<span class="hljs-number">0</span>];
          <span class="hljs-keyword">break</span>;
        } 
        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span> (<span class="hljs-string">"b"</span>, commandbuffer) == <span class="hljs-number">0</span>) {
          <span class="hljs-keyword">if</span>(i == <span class="hljs-number">0</span>) gender = <span class="hljs-keyword">true</span>;
          <span class="hljs-keyword">if</span>(i == <span class="hljs-number">1</span>) medication = <span class="hljs-keyword">false</span>;
          terms[i] = score[i][<span class="hljs-number">1</span>];
          <span class="hljs-keyword">break</span>;
        }
      } 
      <span class="hljs-keyword">if</span>(i == <span class="hljs-number">3</span> &amp;&amp; user_input_to_int() &gt; <span class="hljs-number">0</span> &amp;&amp; user_input_to_int() &lt; <span class="hljs-number">121</span>) {
        Serial.print(<span class="hljs-string">"Age: "</span>);
        Serial.print(user_input_to_int());
        Serial.println(<span class="hljs-string">" year(s)"</span>);
        terms[i] = user_input_to_float();
        age = user_input_to_float();
        clear_buffer();
        <span class="hljs-keyword">break</span>;
      }
      <span class="hljs-keyword">if</span>(i == <span class="hljs-number">4</span> &amp;&amp; user_input_to_float() &gt; <span class="hljs-number">5.0</span> &amp;&amp; user_input_to_float() &lt; <span class="hljs-number">250.0</span>) {
        Serial.print(<span class="hljs-string">"Body mass: "</span>);
        Serial.print(user_input_to_float());
        Serial.println(<span class="hljs-string">" kg"</span>);
        mass = user_input_to_float();
        clear_buffer();
        <span class="hljs-keyword">break</span>;
      }
      <span class="hljs-keyword">if</span>(i == <span class="hljs-number">5</span> &amp;&amp; user_input_to_float() &gt; <span class="hljs-number">0.4</span> &amp;&amp; user_input_to_float() &lt; <span class="hljs-number">2.5</span>) {
        Serial.print(<span class="hljs-string">"Body height: "</span>);
        Serial.print(user_input_to_float());
        Serial.println(<span class="hljs-string">" m"</span>);
        height = user_input_to_float();
        BMI = mass / <span class="hljs-built_in">pow</span>(height, <span class="hljs-number">2.0</span>);
        Serial.print(<span class="hljs-string">"BMI: "</span>);
        Serial.print(BMI);
        Serial.println(<span class="hljs-string">" kg/m^2"</span>);
        <span class="hljs-keyword">if</span>(BMI &lt; <span class="hljs-number">25.0</span>) terms[i-<span class="hljs-number">1</span>] = score[i-<span class="hljs-number">2</span>][<span class="hljs-number">0</span>];
        <span class="hljs-keyword">if</span>(BMI &gt;= <span class="hljs-number">25.0</span> &amp;&amp; BMI &lt; <span class="hljs-number">27.5</span>) terms[i-<span class="hljs-number">1</span>] = score[i - <span class="hljs-number">2</span>][<span class="hljs-number">1</span>];
        <span class="hljs-keyword">if</span>(BMI &gt;= <span class="hljs-number">27.5</span> &amp;&amp; BMI &lt; <span class="hljs-number">30</span>) terms[i-<span class="hljs-number">1</span>] = score[i - <span class="hljs-number">2</span>][<span class="hljs-number">2</span>];
        <span class="hljs-keyword">if</span>(BMI &gt;= <span class="hljs-number">30.0</span>) terms[i-<span class="hljs-number">1</span>] = score[i-<span class="hljs-number">2</span>][<span class="hljs-number">3</span>];
        clear_buffer();
        <span class="hljs-keyword">break</span>;
      }
      <span class="hljs-keyword">if</span>(i &gt; <span class="hljs-number">5</span> &amp;&amp; ((commandbuffer_index &gt; <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-built_in">strcmp</span>(<span class="hljs-string">"a"</span>, commandbuffer) == <span class="hljs-number">0</span>) || 
        (commandbuffer_index &gt; <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-built_in">strcmp</span>(<span class="hljs-string">"b"</span>, commandbuffer) == <span class="hljs-number">0</span>) || 
        (commandbuffer_index &gt; <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-built_in">strcmp</span>(<span class="hljs-string">"c"</span>, commandbuffer) == <span class="hljs-number">0</span>))) {
        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(<span class="hljs-string">"a"</span>, commandbuffer) == <span class="hljs-number">0</span>) {
          <span class="hljs-keyword">if</span>(i == <span class="hljs-number">7</span>) smoker = <span class="hljs-keyword">false</span>;
          terms[i-<span class="hljs-number">1</span>] = score[i-<span class="hljs-number">2</span>][<span class="hljs-number">0</span>];
          <span class="hljs-keyword">break</span>;
        } 
        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(<span class="hljs-string">"b"</span>, commandbuffer) == <span class="hljs-number">0</span>) {
          <span class="hljs-keyword">if</span>(i == <span class="hljs-number">7</span>) smoker = <span class="hljs-keyword">true</span>;
          terms[i-<span class="hljs-number">1</span>] = score[i-<span class="hljs-number">2</span>][<span class="hljs-number">1</span>];
          <span class="hljs-keyword">break</span>;
        } 
        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(<span class="hljs-string">"c"</span>, commandbuffer) == <span class="hljs-number">0</span>) {
          <span class="hljs-keyword">if</span>(i == <span class="hljs-number">7</span>) smoker = <span class="hljs-keyword">true</span>;
          terms[i-<span class="hljs-number">1</span>] = score[i-<span class="hljs-number">2</span>][<span class="hljs-number">2</span>];
          <span class="hljs-keyword">break</span>;
        }
      }
    }
    Serial.println(<span class="hljs-string">""</span>);
  }
  <span class="hljs-comment">// compute diabetes type 2 risk</span>
  <span class="hljs-keyword">float</span> exponent = <span class="hljs-number">6.322</span>-terms[<span class="hljs-number">0</span>]-terms[<span class="hljs-number">1</span>]-terms[<span class="hljs-number">2</span>]-<span class="hljs-number">0.063</span>*terms[<span class="hljs-number">3</span>]-terms[<span class="hljs-number">4</span>]-terms[<span class="hljs-number">5</span>]-terms[<span class="hljs-number">6</span>];
  <span class="hljs-keyword">float</span> risk = <span class="hljs-number">100.0</span>/(<span class="hljs-number">1</span>+<span class="hljs-built_in">exp</span>(exponent));
  Serial.print(<span class="hljs-string">"RISK TO SUFFER FROM TYPE 2 DIABETES: "</span>);
  Serial.print(risk, <span class="hljs-number">3</span>);
  Serial.println(<span class="hljs-string">" %"</span>);
  Serial.println(<span class="hljs-string">""</span>); 
  <span class="hljs-comment">// compute total cholesterol</span>
  TC = <span class="hljs-number">28.07</span>+<span class="hljs-number">6.49</span>*BMI;
  <span class="hljs-keyword">if</span>(TC &lt; <span class="hljs-number">130.0</span>) TC = <span class="hljs-number">130.0</span>; <span class="hljs-comment">// set limits</span>
  <span class="hljs-keyword">if</span>(TC &gt; <span class="hljs-number">320.0</span>) TC = <span class="hljs-number">320.0</span>;
  <span class="hljs-comment">// compute HDL cholesterol</span>
  HDLC = <span class="hljs-number">111.79</span>-<span class="hljs-number">2.35</span>*BMI;
  <span class="hljs-keyword">if</span>(HDLC &lt; <span class="hljs-number">20.0</span>) HDLC = <span class="hljs-number">20.0</span>; <span class="hljs-comment">// set limits</span>
  <span class="hljs-keyword">if</span>(HDLC &gt; <span class="hljs-number">60.0</span>) HDLC = <span class="hljs-number">60.0</span>;
  <span class="hljs-keyword">char</span>* cholesterol_text[] ={<span class="hljs-string">"ESTIMATED "</span>, <span class="hljs-string">"TOTAL "</span>, <span class="hljs-string">"HDL "</span>, <span class="hljs-string">"CHOLESTEROL: "</span>, <span class="hljs-string">" mg/dl"</span>};
  Serial.print(cholesterol_text[<span class="hljs-number">0</span>]);
  Serial.print(cholesterol_text[<span class="hljs-number">1</span>]);
  Serial.print(cholesterol_text[<span class="hljs-number">3</span>]);
  Serial.print(TC);
  Serial.println(cholesterol_text[<span class="hljs-number">4</span>]);
  Serial.print(cholesterol_text[<span class="hljs-number">0</span>]);
  Serial.print(cholesterol_text[<span class="hljs-number">2</span>]);
  Serial.print(cholesterol_text[<span class="hljs-number">3</span>]);
  Serial.print(HDLC);
  Serial.println(cholesterol_text[<span class="hljs-number">4</span>]);
  <span class="hljs-comment">// compute systolic blood pressure</span>
  SBP = <span class="hljs-number">68.15</span>+<span class="hljs-number">0.58</span>*BMI+<span class="hljs-number">0.65</span>*age+<span class="hljs-number">0.94</span>*<span class="hljs-keyword">float</span>(gender)+<span class="hljs-number">6.44</span>*<span class="hljs-keyword">float</span>(medication);
  <span class="hljs-keyword">if</span>(SBP &lt; <span class="hljs-number">90.0</span>) SBP = <span class="hljs-number">90.0</span>; <span class="hljs-comment">// set limits</span>
  <span class="hljs-keyword">if</span>(SBP &gt; <span class="hljs-number">200.0</span>) SBP = <span class="hljs-number">200.0</span>;
  Serial.print(cholesterol_text[<span class="hljs-number">0</span>]);
  Serial.print(<span class="hljs-string">"SYSTOLIC BLOOD PRESSURE: "</span>);
  Serial.print(SBP);
  Serial.println(<span class="hljs-string">" mm Hg"</span>);
  <span class="hljs-comment">// Framingham risk score only valid for age between 20 and 79</span>
  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">int</span>(age) &gt;= <span class="hljs-number">20</span> &amp;&amp; <span class="hljs-keyword">int</span>(age) &lt;= <span class="hljs-number">79</span>) {
    Serial.println(<span class="hljs-string">""</span>);
    <span class="hljs-keyword">int</span> CHD_score;
    <span class="hljs-comment">// look-up tables obtained from <a href="http://en.wikipedia.org/wiki/Framingham_Risk_Score" target="_blank">http://en.wikipedia.org/wiki/Framingham_Risk_Score</a></span>
    <span class="hljs-keyword">int</span> score_age_women_men[<span class="hljs-number">10</span>][<span class="hljs-number">4</span>] =
    {
      {<span class="hljs-number">20</span>, <span class="hljs-number">34</span>, -<span class="hljs-number">7</span>, -<span class="hljs-number">9</span>},
      {<span class="hljs-number">35</span>, <span class="hljs-number">39</span>, -<span class="hljs-number">3</span>, -<span class="hljs-number">4</span>},
      {<span class="hljs-number">40</span>, <span class="hljs-number">44</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>},
      {<span class="hljs-number">45</span>, <span class="hljs-number">49</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>},
      {<span class="hljs-number">50</span>, <span class="hljs-number">54</span>, <span class="hljs-number">6</span>, <span class="hljs-number">6</span>},
      {<span class="hljs-number">55</span>, <span class="hljs-number">59</span>, <span class="hljs-number">8</span>, <span class="hljs-number">8</span>},
      {<span class="hljs-number">60</span>, <span class="hljs-number">64</span>, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>},
      {<span class="hljs-number">65</span>, <span class="hljs-number">69</span>, <span class="hljs-number">12</span>, <span class="hljs-number">11</span>},
      {<span class="hljs-number">70</span>, <span class="hljs-number">74</span>, <span class="hljs-number">14</span>, <span class="hljs-number">12</span>},
      {<span class="hljs-number">75</span>, <span class="hljs-number">79</span>, <span class="hljs-number">16</span>, <span class="hljs-number">13</span>}
    };
    <span class="hljs-keyword">int</span> tot_cholesterol_women_men[<span class="hljs-number">5</span>][<span class="hljs-number">12</span>] =
    {
      {<span class="hljs-number">130</span>, <span class="hljs-number">159</span>,  <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,  <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>},
      {<span class="hljs-number">160</span>, <span class="hljs-number">199</span>,  <span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>,  <span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>},
      {<span class="hljs-number">200</span>, <span class="hljs-number">239</span>,  <span class="hljs-number">8</span>, <span class="hljs-number">6</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>,  <span class="hljs-number">7</span>, <span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>},
      {<span class="hljs-number">240</span>, <span class="hljs-number">279</span>,  <span class="hljs-number">11</span>, <span class="hljs-number">8</span>, <span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>,  <span class="hljs-number">9</span>, <span class="hljs-number">6</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>},
      {<span class="hljs-number">280</span>, <span class="hljs-number">320</span>,  <span class="hljs-number">13</span>, <span class="hljs-number">10</span>, <span class="hljs-number">7</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span>,  <span class="hljs-number">11</span>, <span class="hljs-number">8</span>, <span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>}
    };
    <span class="hljs-keyword">int</span> smoker_women_men[<span class="hljs-number">5</span>][<span class="hljs-number">2</span>] =
    {
      {<span class="hljs-number">9</span>, <span class="hljs-number">8</span>},
      {<span class="hljs-number">7</span>, <span class="hljs-number">5</span>},
      {<span class="hljs-number">4</span>, <span class="hljs-number">3</span>},
      {<span class="hljs-number">2</span>, <span class="hljs-number">1</span>},
      {<span class="hljs-number">1</span>, <span class="hljs-number">1</span>}
    };
    <span class="hljs-keyword">int</span> HDL_cholesterol_women_men[<span class="hljs-number">4</span>][<span class="hljs-number">3</span>] =
    {
      {<span class="hljs-number">60</span>, <span class="hljs-number">100</span>, -<span class="hljs-number">1</span>},
      {<span class="hljs-number">50</span>, <span class="hljs-number">59</span>, <span class="hljs-number">0</span>},
      {<span class="hljs-number">40</span>, <span class="hljs-number">49</span>, <span class="hljs-number">1</span>},
      {<span class="hljs-number">20</span>, <span class="hljs-number">39</span>, <span class="hljs-number">2</span>}
    };
    <span class="hljs-keyword">int</span> blood_pressure_women_men[<span class="hljs-number">5</span>][<span class="hljs-number">6</span>] =
    {
      {<span class="hljs-number">90</span>, <span class="hljs-number">119</span>,  <span class="hljs-number">0</span>, <span class="hljs-number">0</span>,  <span class="hljs-number">0</span>, <span class="hljs-number">0</span>},
      {<span class="hljs-number">120</span>, <span class="hljs-number">129</span>,  <span class="hljs-number">1</span>, <span class="hljs-number">3</span>,  <span class="hljs-number">0</span>, <span class="hljs-number">1</span>},
      {<span class="hljs-number">130</span>, <span class="hljs-number">139</span>,  <span class="hljs-number">2</span>, <span class="hljs-number">4</span>,  <span class="hljs-number">1</span>, <span class="hljs-number">2</span>},
      {<span class="hljs-number">140</span>, <span class="hljs-number">159</span>,  <span class="hljs-number">3</span>, <span class="hljs-number">5</span>,  <span class="hljs-number">1</span>, <span class="hljs-number">2</span>},
      {<span class="hljs-number">160</span>, <span class="hljs-number">200</span>,  <span class="hljs-number">4</span>, <span class="hljs-number">6</span>,  <span class="hljs-number">2</span>, <span class="hljs-number">3</span>}
    };
    <span class="hljs-keyword">int</span> CHD_risk_score[<span class="hljs-number">14</span>][<span class="hljs-number">6</span>] =
    {
      {-<span class="hljs-number">10</span>, <span class="hljs-number">8</span>,  -<span class="hljs-number">10</span>, <span class="hljs-number">0</span>,  <span class="hljs-number">1</span>, <span class="hljs-number">1</span>},
      {<span class="hljs-number">9</span>, <span class="hljs-number">12</span>,  <span class="hljs-number">1</span>, <span class="hljs-number">4</span>,  <span class="hljs-number">1</span>, <span class="hljs-number">1</span>},
      {<span class="hljs-number">13</span>, <span class="hljs-number">14</span>,  <span class="hljs-number">5</span>, <span class="hljs-number">6</span>,  <span class="hljs-number">2</span>, <span class="hljs-number">2</span>},
      {<span class="hljs-number">15</span>, <span class="hljs-number">15</span>,  <span class="hljs-number">7</span>, <span class="hljs-number">7</span>,  <span class="hljs-number">3</span>, <span class="hljs-number">3</span>},
      {<span class="hljs-number">16</span>, <span class="hljs-number">16</span>,  <span class="hljs-number">8</span>, <span class="hljs-number">8</span>,  <span class="hljs-number">4</span>, <span class="hljs-number">4</span>},
      {<span class="hljs-number">17</span>, <span class="hljs-number">17</span>,  <span class="hljs-number">9</span>, <span class="hljs-number">9</span>,  <span class="hljs-number">5</span>, <span class="hljs-number">5</span>},
      {<span class="hljs-number">18</span>, <span class="hljs-number">18</span>,  <span class="hljs-number">10</span>, <span class="hljs-number">10</span>,  <span class="hljs-number">6</span>, <span class="hljs-number">6</span>},
      {<span class="hljs-number">19</span>, <span class="hljs-number">19</span>,  <span class="hljs-number">11</span>, <span class="hljs-number">11</span>,  <span class="hljs-number">8</span>, <span class="hljs-number">8</span>},
      {<span class="hljs-number">20</span>, <span class="hljs-number">20</span>,  <span class="hljs-number">12</span>, <span class="hljs-number">12</span>,  <span class="hljs-number">11</span>, <span class="hljs-number">10</span>},
      {<span class="hljs-number">21</span>, <span class="hljs-number">21</span>,  <span class="hljs-number">13</span>, <span class="hljs-number">13</span>,  <span class="hljs-number">14</span>, <span class="hljs-number">12</span>},
      {<span class="hljs-number">22</span>, <span class="hljs-number">22</span>,  <span class="hljs-number">14</span>, <span class="hljs-number">14</span>,  <span class="hljs-number">17</span>, <span class="hljs-number">16</span>},
      {<span class="hljs-number">23</span>, <span class="hljs-number">23</span>,  <span class="hljs-number">15</span>, <span class="hljs-number">15</span>,  <span class="hljs-number">22</span>, <span class="hljs-number">20</span>},
      {<span class="hljs-number">24</span>, <span class="hljs-number">24</span>,  <span class="hljs-number">16</span>, <span class="hljs-number">16</span>,  <span class="hljs-number">27</span>, <span class="hljs-number">25</span>},
      {<span class="hljs-number">25</span>, <span class="hljs-number">46</span>,  <span class="hljs-number">17</span>, <span class="hljs-number">46</span>,  <span class="hljs-number">30</span>, <span class="hljs-number">30</span>}
    };
    <span class="hljs-comment">// compute age score</span>
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++) {
      <span class="hljs-keyword">if</span>(gender == <span class="hljs-keyword">false</span> &amp;&amp; <span class="hljs-keyword">int</span>(age) &gt;= score_age_women_men[i][<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-keyword">int</span>(age) &lt;= score_age_women_men[i][<span class="hljs-number">1</span>]) {
        CHD_score = score_age_women_men[i][<span class="hljs-number">2</span>];
        <span class="hljs-keyword">break</span>;
      }
      <span class="hljs-keyword">if</span>(gender == <span class="hljs-keyword">true</span> &amp;&amp; <span class="hljs-keyword">int</span>(age) &gt;= score_age_women_men[i][<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-keyword">int</span>(age) &lt;= score_age_women_men[i][<span class="hljs-number">1</span>]) {
        CHD_score = score_age_women_men[i][<span class="hljs-number">3</span>];
        <span class="hljs-keyword">break</span>;
      }
    }
    <span class="hljs-comment">// get age index for cholesterol and smoker score</span>
    <span class="hljs-keyword">int</span> j;
    <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">9</span>; j += <span class="hljs-number">2</span>) {
      <span class="hljs-keyword">if</span>(<span class="hljs-keyword">int</span>(age) &gt;= score_age_women_men[j][<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-keyword">int</span>(age) &lt;= score_age_women_men[j+<span class="hljs-number">1</span>][<span class="hljs-number">1</span>]) {
        j = j/<span class="hljs-number">2</span>;
        <span class="hljs-keyword">break</span>;
      }
    }
    <span class="hljs-comment">// compute cholesterol and smoker score</span>
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++) {
      <span class="hljs-keyword">if</span>(<span class="hljs-keyword">int</span>(TC) &gt;= tot_cholesterol_women_men[i][<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-keyword">int</span>(TC) &lt;= tot_cholesterol_women_men[i][<span class="hljs-number">1</span>]) {
        <span class="hljs-keyword">if</span>(gender == <span class="hljs-keyword">false</span>) {
          CHD_score += tot_cholesterol_women_men[i][j+<span class="hljs-number">2</span>];
          <span class="hljs-keyword">if</span>(smoker == <span class="hljs-keyword">true</span>) CHD_score += smoker_women_men[j][<span class="hljs-number">0</span>];
        }
        <span class="hljs-keyword">if</span>(gender == <span class="hljs-keyword">true</span>) {
          CHD_score += tot_cholesterol_women_men[i][j+<span class="hljs-number">7</span>];
          <span class="hljs-keyword">if</span>(smoker == <span class="hljs-keyword">true</span>) CHD_score += smoker_women_men[j][<span class="hljs-number">1</span>];
        }
        <span class="hljs-keyword">break</span>; 
      }
    }
    <span class="hljs-comment">// compute HDL cholesterol score</span>
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) {
      <span class="hljs-keyword">if</span>(<span class="hljs-keyword">int</span>(HDLC) &gt;= HDL_cholesterol_women_men[i][<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-keyword">int</span>(HDLC) &lt;= HDL_cholesterol_women_men[i][<span class="hljs-number">1</span>]) {
        CHD_score += HDL_cholesterol_women_men[i][<span class="hljs-number">2</span>];
        <span class="hljs-keyword">break</span>;
      }
    }
    <span class="hljs-comment">// compute blood pressure score</span>
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++) {
      <span class="hljs-keyword">if</span>(<span class="hljs-keyword">int</span>(SBP) &gt;= blood_pressure_women_men[i][<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-keyword">int</span>(SBP) &lt;= blood_pressure_women_men[i][<span class="hljs-number">1</span>]) {
        <span class="hljs-keyword">if</span>(gender == <span class="hljs-keyword">false</span>) {
          <span class="hljs-keyword">if</span>(medication == <span class="hljs-keyword">false</span>) CHD_score += blood_pressure_women_men[i][<span class="hljs-number">2</span>];
          <span class="hljs-keyword">if</span>(medication == <span class="hljs-keyword">true</span>) CHD_score += blood_pressure_women_men[i][<span class="hljs-number">3</span>];
        }
        <span class="hljs-keyword">if</span>(gender == <span class="hljs-keyword">true</span>) {
          <span class="hljs-keyword">if</span>(medication == <span class="hljs-keyword">false</span>) CHD_score += blood_pressure_women_men[i][<span class="hljs-number">4</span>];
          <span class="hljs-keyword">if</span>(medication == <span class="hljs-keyword">true</span>) CHD_score += blood_pressure_women_men[i][<span class="hljs-number">5</span>];
        }
      }
    }
    <span class="hljs-comment">// compute 10 year CHD risk</span>
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">14</span>; i++) {
      <span class="hljs-keyword">if</span>(gender == <span class="hljs-keyword">false</span>) {
        <span class="hljs-keyword">if</span>(CHD_score &gt;= CHD_risk_score[i][<span class="hljs-number">0</span>] &amp;&amp; CHD_score &lt;= CHD_risk_score[i][<span class="hljs-number">1</span>]) {
          <span class="hljs-keyword">if</span>(i == <span class="hljs-number">0</span>) Serial.print(<span class="hljs-string">"&lt; "</span>);
          <span class="hljs-keyword">if</span>(i == <span class="hljs-number">13</span>) Serial.print(<span class="hljs-string">"&gt; "</span>);
          Serial.print(CHD_risk_score[i][<span class="hljs-number">4</span>]);
          <span class="hljs-keyword">break</span>;
        }
      }
      <span class="hljs-keyword">if</span>(gender == <span class="hljs-keyword">true</span>) {
        <span class="hljs-keyword">if</span>(CHD_score &gt;= CHD_risk_score[i][<span class="hljs-number">2</span>] &amp;&amp; CHD_score &lt;= CHD_risk_score[i][<span class="hljs-number">3</span>]) {
          <span class="hljs-keyword">if</span>(i == <span class="hljs-number">0</span>) Serial.print(<span class="hljs-string">"&lt; "</span>);
          <span class="hljs-keyword">if</span>(i == <span class="hljs-number">13</span>) Serial.print(<span class="hljs-string">"&gt; "</span>);
          Serial.print(CHD_risk_score[i][<span class="hljs-number">5</span>]);
          <span class="hljs-keyword">break</span>;
        }
      }
    }
    Serial.println(<span class="hljs-string">" of 100 PEOPLE WITH THIS LEVEL OF RISK WILL HAVE A HEART ATTACK IN THE NEXT 10 YEARS"</span>);
    Serial.println(<span class="hljs-string">""</span>);
  }
}

<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">user_input</span><span class="hljs-params">()</span> </span>{
  commandbuffer_index = <span class="hljs-number">0</span>;
  <span class="hljs-keyword">if</span>(Serial.available()){
     delay(<span class="hljs-number">100</span>);
     <span class="hljs-keyword">while</span>(Serial.available() &amp;&amp; commandbuffer_index &lt; <span class="hljs-number">9</span>) {
        commandbuffer[commandbuffer_index++] = Serial.read();
     }
     commandbuffer[commandbuffer_index++] = <span class="hljs-string">'\0'</span>;
  }
  <span class="hljs-keyword">if</span>(commandbuffer_index &gt; <span class="hljs-number">0</span>) {
    Serial.print(<span class="hljs-string">"Your answer: "</span>);
    Serial.println((<span class="hljs-keyword">char</span>*)commandbuffer);
  }
}
<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">user_input_to_int</span><span class="hljs-params">()</span> </span>{
  <span class="hljs-keyword">return</span> atoi(commandbuffer);
}
<span class="hljs-function"><span class="hljs-keyword">float</span> <span class="hljs-title">user_input_to_float</span><span class="hljs-params">()</span> </span>{
  <span class="hljs-keyword">return</span> atof(commandbuffer);
}
<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">clear_buffer</span><span class="hljs-params">()</span> </span>{
  <span class="hljs-built_in">memset</span>(commandbuffer, <span class="hljs-number">0</span>, <span class="hljs-built_in">strlen</span>(commandbuffer));
}</pre><br><iframe style="width: 500px; height: 281px;" src="//www.youtube.com/embed/5HC9HiicCWA" allowfullscreen="" frameborder="0" height="281" width="500"></iframe></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4693/log/17311-blood-type-calculator">Blood type calculator</a></h2>
                            <small class="authorship">4 months ago  &bull;
                                <a class="gray-link" href="/project/4693/log/17311#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17311"><p><strong></strong>Do you know your blood type and Rh factor? I always forget mine. Somewhere I should have a vaccination record, but where? I forget as well, where I put it.<br>Is there a way to evaluate my blood type and Rh factor without a blood test? If you know the blood types and Rh factors of your parents, you can at least limit the blood type and Rh factor you may have, using following algorithm and you can compute the highest probability, because blood types and Rh factors are not equally distributed.</p><p>I started with a <a href="http://www.dnacenter.com/images/blood-type-chart.jpg">ABO blood type</a> and <a href="http://rhesusnegativebloodgroup.files.wordpress.com/2012/12/photo.jpg?w=593&amp;h=351">Rh factor</a> look-up table, transformed the tables into 2-dimensional char arrays and by studying the <a href="http://en.wikipedia.org/wiki/Blood_type_distribution_by_country">blood type distribution by country</a> and the <a href="http://en.wikipedia.org/wiki/Weighted_arithmetic_mean">weighted mean</a>, not only all possible blood types and Rh factors but also the ones with the maximum probability could be easily computed</p><pre class="hljs cpp"><span class="hljs-comment">// your input:</span>
String father_bloodtype = <span class="hljs-string">"AB"</span>;
String mother_bloodtype = <span class="hljs-string">"AB"</span>;
String father_RHtype = <span class="hljs-string">"-/-"</span>;
String mother_RHtype = <span class="hljs-string">"-/-"</span>;

<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setup</span><span class="hljs-params">()</span> </span>{
  Serial.begin(<span class="hljs-number">9600</span>);
  <span class="hljs-keyword">char</span>* bloodtypes[] = {<span class="hljs-string">"A"</span>, <span class="hljs-string">"B"</span>, <span class="hljs-string">"AB"</span>, <span class="hljs-string">"O"</span>};
  <span class="hljs-keyword">char</span>* RHtypes[] = {<span class="hljs-string">"+/+"</span>, <span class="hljs-string">"+/-"</span>, <span class="hljs-string">"-/-"</span>};
  <span class="hljs-keyword">char</span>* your_bloodtype[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] =
  {
    {<span class="hljs-string">"A, B"</span>,  <span class="hljs-string">"A, B, AB, O"</span>,  <span class="hljs-string">"A, B, AB"</span>, <span class="hljs-string">"A, O"</span>},
    {<span class="hljs-string">"A, B, AB, O"</span>,  <span class="hljs-string">"B, O"</span>,  <span class="hljs-string">"A, B, AB"</span>, <span class="hljs-string">"B, O"</span>},
    {<span class="hljs-string">"A, B, AB"</span>,  <span class="hljs-string">"A, B, AB"</span>,  <span class="hljs-string">"A, B, AB"</span>, <span class="hljs-string">"A, B"</span>},
    {<span class="hljs-string">"A, O"</span>,  <span class="hljs-string">"B, O"</span>,  <span class="hljs-string">"A, B"</span>, <span class="hljs-string">"O"</span>}
  };
  <span class="hljs-keyword">char</span>* your_bloodtype_prob[<span class="hljs-number">4</span>][<span class="hljs-number">4</span>] =
  {
    {<span class="hljs-string">"A"</span>,  <span class="hljs-string">"O"</span>,  <span class="hljs-string">"A"</span>, <span class="hljs-string">"O"</span>},
    {<span class="hljs-string">"O"</span>,  <span class="hljs-string">"O"</span>,  <span class="hljs-string">"A"</span>, <span class="hljs-string">"O"</span>},
    {<span class="hljs-string">"A"</span>,  <span class="hljs-string">"A"</span>,  <span class="hljs-string">"A"</span>, <span class="hljs-string">"A"</span>},
    {<span class="hljs-string">"O"</span>,  <span class="hljs-string">"O"</span>,  <span class="hljs-string">"A"</span>, <span class="hljs-string">"O"</span>}
  };
  <span class="hljs-keyword">char</span>* your_RHtype[<span class="hljs-number">3</span>][<span class="hljs-number">3</span>] =
  {
    {<span class="hljs-string">"+/+"</span>,  <span class="hljs-string">"+/+, -/-"</span>,  <span class="hljs-string">"+/-"</span>},
    {<span class="hljs-string">"+/+, -/-"</span>,  <span class="hljs-string">"+/+, +/-, -/-"</span>,  <span class="hljs-string">"+/-, -/-"</span>},
    {<span class="hljs-string">"+/-"</span>,  <span class="hljs-string">"+/-, -/-"</span>,  <span class="hljs-string">"-/-"</span>}
  };
  <span class="hljs-keyword">char</span>* your_RHtype_prob[<span class="hljs-number">3</span>][<span class="hljs-number">3</span>] =
  {
    {<span class="hljs-string">"+"</span>,  <span class="hljs-string">"+"</span>,  <span class="hljs-string">"+"</span>},
    {<span class="hljs-string">"+"</span>,  <span class="hljs-string">"+"</span>,  <span class="hljs-string">"+"</span>},
    {<span class="hljs-string">"+"</span>,  <span class="hljs-string">"+"</span>,  <span class="hljs-string">"-"</span>}
  };
  <span class="hljs-keyword">byte</span> father_row;
  <span class="hljs-keyword">byte</span> mother_col;
  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">byte</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i ++) {
    <span class="hljs-keyword">if</span>(father_bloodtype.compareTo(bloodtypes[i]) == <span class="hljs-number">0</span>) father_row = i;
    <span class="hljs-keyword">if</span>(mother_bloodtype.compareTo(bloodtypes[i]) == <span class="hljs-number">0</span>) mother_col = i;
  }
  Serial.print(<span class="hljs-string">"Possible blood types: "</span>);
  Serial.println(your_bloodtype[father_row][mother_col]);
  Serial.print(<span class="hljs-string">"Blood type with highest probability: "</span>);
  Serial.println(your_bloodtype_prob[father_row][mother_col]);
  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">byte</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">3</span>; i ++) {
    <span class="hljs-keyword">if</span>(father_RHtype.compareTo(RHtypes[i]) == <span class="hljs-number">0</span>) father_row = i;
    <span class="hljs-keyword">if</span>(mother_RHtype.compareTo(RHtypes[i]) == <span class="hljs-number">0</span>) mother_col = i;
  }
  Serial.print(<span class="hljs-string">"Possible Rh factors: "</span>);
  Serial.println(your_RHtype[father_row][mother_col]);
  Serial.print(<span class="hljs-string">"Rh factor with highest probability: "</span>);
  Serial.println(your_RHtype_prob[father_row][mother_col]);
}

<span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">loop</span><span class="hljs-params">()</span> </span>{
}</pre><p><strong><br></strong></p><iframe style="width: 500px; height: 281px;" src="//www.youtube.com/embed/fvVcPdikfik" allowfullscreen="" frameborder="0" height="281" width="500"></iframe></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4693/log/17538-lab-on-a-chip-design">Lab on a chip design</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/4693/log/17538#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17538"><p>As mentioned already under "Project details" I am planning to add a <a href="http://en.wikipedia.org/wiki/Lab-on-a-chip">Lab-on-a-chip</a> system as a peripheral device for the medical tricorder. It is basically a photometer/color sensor mounted beneath a translucent micro reaction chamber with two inlets for the reagents and one outlet for the waste. The volume of the reaction chamber is approx. 1.87 ml.</p><p>So far I have designed the 3-D printed parts and PCB and sent them off to the fab house. Below rendering shows how the LOC will look like.</p><p><img src="https://cdn.hackaday.io/images/5936841431058846755.jpg"></p><p>Schematics:</p><p><img src="https://cdn.hackaday.io/images/1607911431079518675.JPG"></p><p>I am using a <a href="http://www.adafruit.com/datasheets/TCS34725.pdf">TCS3472</a> color sensor. The mosfets Q2/Q3 (<a href="https://www.fairchildsemi.com/datasheets/BS/BSS138.pdf">BSS138</a>) building a logic level shifter for the 3.3V/5V I2C bus. R1 to R4 are the required pullup-resistors for the I2C bus. R6 is the pullup resistor for the gate of Q1, R5 is used as the series resistor for <a href="http://media.digikey.com/pdf/Data%20Sheets/Everlight%20PDFs/45-21_XK2C-BXXXXXXXXX_2T.pdf">LED1</a>. <a href="http://www.onsemi.com/pub_link/Collateral/MC33269-D.PDF">MC 33269D-3.3</a> is a low dropout, 800 mA positive voltage regulator. It requires an output capacitor of at least 10  μF for stability. As it is recommended I added an input capacitor with the same value as well. </p>Routed PCB:<p><img src="https://cdn.hackaday.io/images/2262591431079558755.jpg"></p><p>I will use the <a href="http://nptel.ac.in/courses/106108057/12"><em>k</em>-NN</a> (k-nearest neighbors) algorithm, one of the simplest of all machine learning algorithms, to classify the detected color and assign it to the concentration of the detected substance, e.g. glucose via <a href="http://en.wikipedia.org/wiki/Trinder_glucose_activity_test">Trinder glucose activity test</a>:</p><p><img alt="\color{White} \large \text {glucose} +O_{2}~ \underrightarrow{glucose~oxidase} ~\text{gluconic acid}+H_{2}O_{2}  " title="\color{White} \large \text {glucose} +O_{2}~ \underrightarrow{glucose~oxidase} ~\text{gluconic acid}+H_{2}O_{2}  " src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20%5Ctext%20%7Bglucose%7D%20%2BO_%7B2%7D~%20%5Cunderrightarrow%7Bglucose~oxidase%7D%20~%5Ctext%7Bgluconic%20acid%7D%2BH_%7B2%7DO_%7B2%7D%20%20"></p><p><img alt="\color{White} \large 2~H_{2}O_{2}+\text {phenol} +\text {4-aminophenazone } \underrightarrow{peroxidase} ~\text{quinoneimine dye}+4~H_{2}O  " title="\color{White} \large 2~H_{2}O_{2}+\text {phenol} +\text {4-aminophenazone } \underrightarrow{peroxidase} ~\text{quinoneimine dye}+4~H_{2}O  " src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%202~H_%7B2%7DO_%7B2%7D%2B%5Ctext%20%7Bphenol%7D%20%2B%5Ctext%20%7B4-aminophenazone%20%7D%20%5Cunderrightarrow%7Bperoxidase%7D%20~%5Ctext%7Bquinoneimine%20dye%7D%2B4~H_%7B2%7DO%20%20">As the training set of colors associated to the concentration of a certain substance will only contain one sample per color, <em>k</em> = 1. And as we have RGB values, we will work in a 3-dimensional Euclidean space. So all we have to do is to find the smallest <a href="http://en.wikipedia.org/wiki/Euclidean_distance">Euclidean distance</a> from the sample point to any of the training points. </p><p>In general, for an <em>n</em>-dimensional Euclidean space, the Euclidean distance between two points</p><p><img alt="\color{White} \large x= \big(x_{1},x_{2},...,x_{n}\big)" src="https://hackaday.io/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20x%3D%20%20%5Cbig%28x_%7B1%7D%2Cx_%7B2%7D%2C...%2Cx_%7Bn%7D%5Cbig%29">and</p><p><img alt="\color{White} \large y= \big(y_{1},y_{2},...,y_{n}\big)" src="https://hackaday.io/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20y%3D%20%20%5Cbig%28y_%7B1%7D%2Cy_%7B2%7D%2C...%2Cy_%7Bn%7D%5Cbig%29">is given by</p><img alt="\color{White} \large d \big(x,y\big)=\sqrt{\sum_{i=1}^{n} \big(x_{i}-y_{i}\big)^{2} }" src="https://hackaday.io/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20d%20%5Cbig%28x%2Cy%5Cbig%29%3D%5Csqrt%7B%5Csum_%7Bi%3D1%7D%5E%7Bn%7D%20%20%5Cbig%28x_%7Bi%7D-y_%7Bi%7D%5Cbig%29%5E%7B2%7D%20%7D"><p>Example pH. The triangle shaped-point is a new sample which needs to be classified. In this case the nearest neighbor is the point with the marker 'pH=7.5.</p><p><img src="https://cdn.hackaday.io/images/4027761431149354443.jpg"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4693/log/17733-loc-prototype">LOC prototype</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/4693/log/17733#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17733"><p>A simple Lab-on-a-chip prototype has been built from two microscope slides, a piece of 2 mm ABS sheet and three syringe needles (tip removed) to study the fluid mixing behavior.</p><p><img src="https://cdn.hackaday.io/images/2894711431409902303.JPG"></p><p><img src="https://cdn.hackaday.io/images/1165771431409922999.JPG"></p><p><img src="https://cdn.hackaday.io/images/9900431431409954095.JPG"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4693/log/17878-product-design">Product design</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/4693/log/17878#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-17878"><p>While I was waiting for parts to arrive [sigh], I put some thoughts into product design. </p><p><img src="https://cdn.hackaday.io/images/1833311431574287613.jpg"></p><p><img src="https://cdn.hackaday.io/images/1898561431574170736.jpg"></p><p><img src="https://cdn.hackaday.io/images/7807041431574412605.jpg"></p><p>Screws and stand-offs attached:</p><p><img src="https://cdn.hackaday.io/images/5307661431597488569.jpg"></p><p>Syringes attached to inject reagents into the Lab-on-a-chip:</p><p><img src="https://cdn.hackaday.io/images/3580161431597508171.jpg"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4693/log/18017-loc-build">LOC build</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/4693/log/18017#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-18017"><p>Microscope slides, 3-D printed parts and the finished test-tube-shaped micro reaction chamber. 2-component 5-minutes epoxy <span class="st">resin adhesive</span> has been used to glue the microscope slides and nipples in place:</p><p><img src="https://cdn.hackaday.io/images/7313221431759694359.JPG"></p>Leakage test (pass):<p><img src="https://cdn.hackaday.io/images/8744941431759749524.JPG"></p><p>Populated PCB:</p><p><img src="https://cdn.hackaday.io/images/9023441431996035714.JPG"></p><p>Reaction chamber attached:</p><p><img src="https://cdn.hackaday.io/images/7825911431996102612.JPG"></p><p>Testing the LoC:</p><p><img src="https://cdn.hackaday.io/images/2324621431996979163.JPG"></p><p>For the first experimental demonstration of the LoC I have used <a href="http://chemistry.about.com/od/acidsbase1/a/red-cabbage-ph-indicator.htm">red cabbage indicator</a>. The pH look-up table for the kNN algorithm below was obtained via <a href="http://colorcop.net/">Color Cop</a> and <a href="http://www.braukaiser.com/wiki/images/c/c0/Red_cabbage_pH_series.jpg">this</a> image, but  initial tests of the TCS34725 color sensor showed that it does not output a reliable RGB color model. I will probably use the raw red/green/blue/clear channel data and work in a 4-dimensional Euclidean space instead. Means also I need to obtain the look-up table for the kNN algorithm by an empirical approach. </p><p>pH measurement of urine for instance provides information about the acid-alkali balance in a patient and helps to identify substances that are present in the urine. Maybe other household chemicals or natural chemicals like <a href="http://en.wikipedia.org/wiki/Cyanidin">Cyanidin</a> for pH could be used to test urine for Leukocytes, Glucose (<a href="http://en.wikipedia.org/wiki/Benedict%27s_reagent">Benedict's reagent</a> ?) as a substitution for <a href="http://en.wikipedia.org/wiki/Urine_test_strip">urine test strips</a>.</p><table> <tbody><tr> <td> <p><strong>pH</strong></p> </td> <td> <p>1</p> </td> <td> <p>2</p> </td> <td> <p>3</p> </td> <td> <p>4</p> </td> <td> <p>5</p> </td> <td> <p>6</p> </td> <td> <p>7</p> </td> <td> <p>8</p> </td> <td> <p>9</p> </td> <td> <p>10</p> </td> <td> <p>11</p> </td> <td> <p>12</p> </td> </tr> <tr> <td> <p><strong>Color</strong></p> </td> <td>  <img src="https://cdn.hackaday.io/images/891201431771410865.jpg"></td> <td>  <img src="https://cdn.hackaday.io/images/6535571431771514276.jpg"></td> <td>  <img src="https://cdn.hackaday.io/images/464031431771586020.jpg"></td> <td>  <img src="https://cdn.hackaday.io/images/5797861431771669467.jpg"></td> <td>  <img src="https://cdn.hackaday.io/images/6031471431771718392.jpg"></td> <td>  <img src="https://cdn.hackaday.io/images/5260191431772074065.jpg"></td> <td>  <img src="https://cdn.hackaday.io/images/670281431772162492.jpg"></td> <td>  <img src="https://cdn.hackaday.io/images/2826091431772261986.jpg"></td> <td>  <img src="https://cdn.hackaday.io/images/4496021431772330742.jpg"></td> <td>  <img src="https://cdn.hackaday.io/images/2115491431772401557.jpg"></td> <td>  <img src="https://cdn.hackaday.io/images/8554711431772453622.jpg"></td> <td>  <img src="https://cdn.hackaday.io/images/9240701431772515739.jpg"></td> </tr> <tr> <td> <p><strong>R</strong></p> </td> <td> <p>239</p> </td> <td> <p>240</p> </td> <td> <p>240</p> </td> <td> <p>229</p> </td> <td> <p>213</p> </td> <td> <p>181</p> </td> <td> <p>107</p> </td> <td> <p>89</p> </td> <td> <p>70</p> </td> <td> <p>13</p> </td> <td> <p>2</p> </td> <td> <p>191</p> </td> </tr> <tr> <td> <p><strong>G</strong></p> </td> <td> <p>77</p> </td> <td> <p>76</p> </td> <td> <p>100</p> </td> <td> <p>124</p> </td> <td> <p>158</p> </td> <td> <p>142</p> </td> <td> <p>124</p> </td> <td> <p>129</p> </td> <td> <p>124</p> </td> <td> <p>125</p> </td> <td> <p>138</p> </td> <td> <p>216</p> </td> </tr> <tr> <td> <p><strong>B</strong></p> </td> <td> <p>52</p> </td> <td> <p>101</p> </td> <td> <p>163</p> </td> <td> <p>191</p> </td> <td> <p>213</p> </td> <td> <p>207</p> </td> <td> <p>196</p> </td> <td> <p>191</p> </td> <td> <p>184</p> </td> <td> <p>165</p> </td> <td> <p>134</p> </td> <td> <p>0</p> </td> </tr> </tbody></table><p>Neutral red cabbage indicator (2 ml):<br></p><p><img src="https://cdn.hackaday.io/images/2212601431778487595.JPG"></p><p>Acetic acid 5% v/v (1 ml) added:</p><p><img src="https://cdn.hackaday.io/images/4597461431778988988.JPG"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4693/log/18282-spectrophotometer">Spectrophotometer</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/4693/log/18282#discussion-list">
                                    2 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-18282"><p>I should have thought about the <a href="http://chemwiki.ucdavis.edu/Physical_Chemistry/Spectroscopy/Electronic_Spectroscopy/Electronic_Spectroscopy_Basics/The_Beer-Lambert_Law">Beer-Lambert Law</a> earlier!</p><p><img alt="\color{White} \large A_{\lambda}=\lg \frac{I_{0}}{I_{1}}=  \varepsilon_{\lambda} \times c \times l" title="\color{White} \large A_{\lambda}=\lg \frac{I_{0}}{I_{1}}=  \varepsilon_{\lambda} \times c \times l" src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20A_%7B%5Clambda%7D%3D%5Clg%20%5Cfrac%7BI_%7B0%7D%7D%7BI_%7B1%7D%7D%3D%20%20%5Cvarepsilon_%7B%5Clambda%7D%20%5Ctimes%20c%20%5Ctimes%20l">where</p><ul><li><em>A</em>: Absorbance or optical density <em>OD</em> of the wave length <span class="st">&#x3BB;</span></li><li><i>I</i>_<em>0</em>: Intensity of light that is incident on the sample [W&#xB7;m^(&#x2212;2<span class="redactor-invisible-space">)]</span></li><li><i>I</i>_<em>1</em>: Intensity of light that is  transmitted by the sample [W&#xB7;m^(&#x2212;2)<span class="redactor-invisible-space">]</span></li><li><em>&#x3B5;</em>: Molar extinction coefficient<span class="redactor-invisible-space"> of the wave length <span class="st">&#x3BB; [L&#xB7;mol^(&#x2013;1)&#xB7;cm^(&#x2013;1)]</span></span></li><li><span class="redactor-invisible-space"><i><em>c</em></i>: Concentration [mol/L<span class="redactor-invisible-space">]</span></span></li><li><span class="redactor-invisible-space"><em>l</em>: Length of the light path through<span class="redactor-invisible-space"> the sample, usually 1 cm</span></span></li></ul><p>Spectrophotometers are commonly used to measure the concentration of a solution from its light absorbing properties. Some other examples of how they are used include:</p><ul><li>Water quality -  Turbidity, 
chlorine content, pH, water hardness, phosphate content etc</li><li>Microbial<span class="redactor-invisible-space"> population growth - Turbidity of a microbial culture over time</span></li><li><span class="redactor-invisible-space">Enzyme kinetics<span class="redactor-invisible-space"> - Activity of an enzyme over time</span></span></li></ul><p>For RGB spectrophotometry we can use a RGB LED and the <a href="http://www.mouser.com/catalog/specsheets/TCS3200-E11.pdf">TCS3200</a> color sensor, <span class="st">which output is a square wave (50% duty cycle) with frequency directly proportional to <em></em>light intensity<em></em></span>. </p><p>Proposed design, directly mountable on a PCB (complete copper fill without traces on both layers of the board in the area of the cuvette bottom to avoid exposure to light through the PCB): </p><p><img src="https://cdn.hackaday.io/images/6940631432218706377.jpg"></p><p>As initially mentioned one use of the spectrophotometer is to determinate microbial population growth. How we do that? Let&apos;s start with a exponential bacteria growth model. Let donate the increase in cells numbers <em>&#x394;N</em> per time interval &#x394;<em>t</em>, then this ratio is proportional to the actual number of cells <em>N</em>. If for example a population of 10000 cells produces 1000 new cells per hour, a 3 times bigger population of the same microorganism will produce 3000 new cells per hour.</p><p><img alt="\color{White} \large (1)~ \frac{\Delta N}{\Delta t}    \sim N" title="\color{White} \large (1)~ \frac{\Delta N}{\Delta t}    \sim N" src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20(1)~%20%5Cfrac%7B%5CDelta%20N%7D%7B%5CDelta%20t%7D%20%20%20%20%5Csim%20N">Written as a differential:</p><p><img alt="\color{White} \large (2)~\frac{dN}{dt} \sim N" title="\color{White} \large (2)~\frac{dN}{dt} \sim N" src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20(2)~%5Cfrac%7BdN%7D%7Bdt%7D%20%5Csim%20N">Using a proportionality factor &#x3BC; &lt; 0, which is called specific growth rate, yields to the first-order ordinary differential equation:</p><p><img alt="\color{White} \large (3)~\frac{dN}{dt} = \mu \times N " title="\color{White} \large (3)~\frac{dN}{dt} = \mu \times N " src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20(3)~%5Cfrac%7BdN%7D%7Bdt%7D%20%3D%20%5Cmu%20%5Ctimes%20N%20">Separating the variables</p><p><img alt="\color{White} \large (4)~\frac{dN}{N} = \mu \times dt" title="\color{White} \large (4)~\frac{dN}{N} = \mu \times dt" src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20(4)~%5Cfrac%7BdN%7D%7BN%7D%20%3D%20%5Cmu%20%5Ctimes%20dt">Integrating both sides</p><p><img alt="\color{White} \large (5)~  \int  \frac{1}{N}~dN = \int \mu~dt" title="\color{White} \large (5)~  \int  \frac{1}{N}~dN = \int \mu~dt" src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20(5)~%20%20%5Cint%20%20%5Cfrac%7B1%7D%7BN%7D~dN%20%3D%20%5Cint%20%5Cmu~dt"><img alt="\color{White} \large (6)~\ln(N) = \mu \times t + C" title="\color{White} \large (6)~\ln(N) = \mu \times t + C" src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20(6)~%5Cln(N)%20%3D%20%5Cmu%20%5Ctimes%20t%20%2B%20C">Determining the integration constant <em>C</em> using the initial condition <em>t</em> = 0:</p><p><img alt="\color{White} \large (7)~ \ln(N_{0}) = \mu \times 0 + C = C" title="\color{White} \large (7)~ \ln(N_{0}) = \mu \times 0 + C = C" src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20(7)~%20%5Cln(N_%7B0%7D)%20%3D%20%5Cmu%20%5Ctimes%200%20%2B%20C%20%3D%20C">Substituting <em>C</em> in equation (6):</p><p><img alt="\color{White} \large (8)~ \ln(N) =  \mu  \times t +  \ln(N_{0})" title="\color{White} \large (8)~ \ln(N) =  \mu  \times t +  \ln(N_{0})" src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20(8)~%20%5Cln(N)%20%3D%20%20%5Cmu%20%20%5Ctimes%20t%20%2B%20%20%5Cln(N_%7B0%7D)">Solving for <em>N</em>:</p><p><img alt="\color{White} \large (9)~N = N_{0} \times e^{\mu  \times t}" title="\color{White} \large (9)~N = N_{0} \times e^{\mu  \times t}" src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20(9)~N%20%3D%20N_%7B0%7D%20%5Ctimes%20e%5E%7B%5Cmu%20%20%5Ctimes%20t%7D">Let donate the generation time <em>tg</em>, where exactly </p><p><img alt="\color{White} \large N = 2 \times N_{0}" title="\color{White} \large N = 2 \times N_{0}" src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20N%20%3D%202%20%5Ctimes%20N_%7B0%7D"></p><p>the equation (8) yields</p><p><img alt="\color{White} \large (10)~ t_{g} = \frac{\ln(2)}{\mu}" title="\color{White} \large (10)~ t_{g} = \frac{\ln(2)}{\mu}" src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20(10)~%20t_%7Bg%7D%20%3D%20%5Cfrac%7B%5Cln(2)%7D%7B%5Cmu%7D"></p><p>Now, the optical density or in this case more correctly the turbidity is directly proportional to the cell density. However, the proportionality between the optical density <em>OD</em> and the cell density exists only for <em>OD</em> &#x2264; 0.4.</p><p>The cell density [cells/mL or cells/L]  is given by</p><p><img alt="\color{White} \large (11)~cell~density =  \frac{N_{sample}}{V_{sample}} =  \frac{N}{V}" title="\color{White} \large (11)~cell~density =  \frac{N_{sample}}{V_{sample}} =  \frac{N}{V}" src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20(11)~cell~density%20%3D%20%20%5Cfrac%7BN_%7Bsample%7D%7D%7BV_%7Bsample%7D%7D%20%3D%20%20%5Cfrac%7BN%7D%7BV%7D">where <em>N_sample</em> is a proportion of the total cell number <em>N</em> and <em>V_sample</em> a proportion of the total culture volume <em>V</em>.</p><p>Hence, equation (9) can be written as</p><p><img alt="\color{White} \large (12)~\frac{N}{V} =  \frac{N_{0}}{V} \times e^{\mu  \times t} =  \frac{N_{0_{sample}}}{V_{sample}} \times e^{\mu  \times t}" title="\color{White} \large (12)~\frac{N}{V} =  \frac{N_{0}}{V} \times e^{\mu  \times t} =  \frac{N_{0_{sample}}}{V_{sample}} \times e^{\mu  \times t}" src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20(12)~%5Cfrac%7BN%7D%7BV%7D%20%3D%20%20%5Cfrac%7BN_%7B0%7D%7D%7BV%7D%20%5Ctimes%20e%5E%7B%5Cmu%20%20%5Ctimes%20t%7D%20%3D%20%20%5Cfrac%7BN_%7B0_%7Bsample%7D%7D%7D%7BV_%7Bsample%7D%7D%20%5Ctimes%20e%5E%7B%5Cmu%20%20%5Ctimes%20t%7D">Using a proportionality factor <em>a</em> equation (11) yields</p><p><img alt="\color{White} \large (13)~ \frac{N_{sample}}{V_{sample}} = a \times OD" title="\color{White} \large (13)~ \frac{N_{sample}}{V_{sample}} = a \times OD" src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20(13)~%20%5Cfrac%7BN_%7Bsample%7D%7D%7BV_%7Bsample%7D%7D%20%3D%20a%20%5Ctimes%20OD">Once the proportionality factor <em>a</em> is determined, we can calculate the cell density from any measured OD.</p><p>If we just want to calculate the specific growth rate &#x3BC; of the bacterium, we don&apos;t need a proportionality factor at all. Let donate <em>OD_0</em> as the optical density at t = 0, then</p><p><img alt="\color{White} \large (14)~OD=OD_{0}  \times e^{\mu \times t}" title="\color{White} \large (14)~OD=OD_{0}  \times e^{\mu \times t}" src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20(14)~OD%3DOD_%7B0%7D%20%20%5Ctimes%20e%5E%7B%5Cmu%20%5Ctimes%20t%7D">Solving for &#x3BC;:<br></p><p><img alt="\color{White} \large (15)~  \mu= \frac{\ln \big(\frac{OD}{OD_{0}}\big)}{t}" title="\color{White} \large (15)~  \mu= \frac{\ln \big(\frac{OD}{OD_{0}}\big)}{t}" src="/api/latex?tex=%5Ccolor%7BWhite%7D%20%5Clarge%20(15)~%20%20%5Cmu%3D%20%5Cfrac%7B%5Cln%20%5Cbig(%5Cfrac%7BOD%7D%7BOD_%7B0%7D%7D%5Cbig)%7D%7Bt%7D"><br></p></div>
                            </div>
                        </li>
                    
                </ul>

                
                <div class="pagination">
                    
                    
                    <a href="?page=2" class="grey-gold-button next-button show">Next</a>
                    
                </div>
                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'twU5FM6D-95HkE1nEcb_MaUnlebAzJawM2VY';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>