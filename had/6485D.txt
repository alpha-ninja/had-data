<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en"> <!--<![endif]-->
<head>
    <title>Details &bull; Unconventional Instrument Ochestra &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
        <script type="text/javascript">
        function getCommentIdFromUrl() {
            if(window.location.hash) {
                var hash = window.location.hash.substring(1);
                var commentId = parseInt(hash.replace('j-discussion-', ''));
                if (commentId) {
                    return commentId;
                }
            }
            return null;
        }

        var commentId = getCommentIdFromUrl();
        if (commentId) {
            var url = window.location.href;
            if (url.indexOf('?') > -1) {
                url = url.substring(0, url.indexOf('?'));
            }
            if (url.indexOf('#') > -1) {
                url = url.substring(0, url.indexOf('#'));
            }
            url += '/discussion-' + commentId;
            window.location.href = url;
        }
    </script>
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body>

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fpost%2F20103">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    

        <div class="headline">
            <div class="container">
                

                    

                    <h2>Project Details</h2>
                    <p class="description-title">
                        For <a href="/project/6485">Unconventional Instrument Ochestra</a>
                    </p>
                    <p class="description-summary">using hardware like floppy drives and 3D printers together to play any MIDI file</p>
                    <div class="description-metainfo">
                        <span>created by
                            <a href="/hacker/12614-laurensweyn" title="Visit Profile">
                                laurens.weyn
                            </a>
                            <span>&bull;</span>
                            2 months ago
                        </span>
                    </div>

                

            </div>
        </div>

        <div class="container post-content">
            <h1>Videos:</h1><p>These videos show the system in action, complete with the visualisation generated by the control software.</p><p>Note, these were all recorded before I obtained a second floppy drive. Hopefully I get a song with 2 floppy drives ready soon.</p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/PWzrRVfUxuk" frameborder="0" allowfullscreen=""></iframe><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/cpinqQk3S-Q" frameborder="0" allowfullscreen=""></iframe><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/2YS7sGJyHYs" frameborder="0" allowfullscreen=""></iframe><p>More videos can be found in this playlist: <a href="https://www.youtube.com/playlist?list=PLVN9s9mCy-V2a_03OcOd3xxcG50dWm-ed">https://www.youtube.com/playlist?list=PLVN9s9mCy-V2a_03OcOd3xxcG50dWm-ed</a></p><p>I plan to record more soon!</p><p>Click "read more" for details on how it works.</p><p><br></p><h1>Main control software:</h1><p>All instruments are controlled via a central Java program. This program was by far what took the most effort in this project, as it has to parse MIDI files, make adjustments through an interface, and send instructions to the various instruments to play their parts while providing a synthesia-style music visualisation in real time. There are many features in place to make use of it's limited number of instruments to make the song sound as good as possible.</p><p>The interface, as shown in the picture, lets the user load up a MIDI file and view it. On the top left, each MIDI track/channel can be mapped to an instrument (for example only HDD A) or group of instruments (for example any floppy drive). Multiple tracks/channels can be mapped to instruments or groups, and the software will manage this according to a priority system, explained a bit later.</p><p>A slight problem with this orchestra is that each instrument can only play 1 note at a time, with the exception of the 3D printer which can play 3 simultaneously (one per axis). Most MIDI files will have more than one note playing at once per channel, like when playing chords, so the software provides ways to cut down the amount of notes. Options like "latest" will, when given new notes to play, sacrifice the oldest note being "held" to play the latest one instead. "max 2" will play the current highest and lowest note, "max 1" will play the center note of any set of notes that need to be played, and "max 3" is a combination of max 1 and 2.</p><p>When assigning multiple notes to a single instrument, you may also hit the limit of notes for that instrument. To prevent the song from sounding bad, there is also a priority system. channels with a "high" priority are important notes, usually the main melody, that must be played, while "medium" and "low" can be left out if it isn't possible to play them.</p><p>While mapping and editing the song, the "regen" button can be pressed to see what the song would looks like with the currently selected changes and what notes would be left out, so you can make sure the important parts of the song are still there. And of course, you can also play the song from the interface.</p><h1>3D printer control:</h1><p>Before I started this project, there were scripts like MIDI2CNC that converted MIDI files to instructions 3D printers could use to play music. However, there was one major flaw with that system: "stop" is literally not in a 3D printer's dictionary, or at least, "stop for X milliseconds" or similar.</p><p>This meant that whenever there was a part in the song where there were no notes played, it would just flat out skip to when the next note was to be played. This made the song sound bad, and syncing it up with other instruments impossible.</p><p>The solution was to make my control software act as the 3D printer control software as well. It runs in "ping pong" mode, only giving instructions once it's done (because we don't want to rush ahead in the song). When a pause happens, or rather when the printer doesn't need to be sent any notes, the control program simply refuses to give the printer the next command, forcing the printer to stay still and do nothing until it's meant to play the note.</p><p>Notes are of course played by making the printer move to positions at certain speeds in such a way that in order to move there at that speed, the printer's stepper motors would each need to step at a specific frequency. The frequency of each axis is set to match the frequency of the notes it needs to play, and you have music. The floppy drives work on a similar principle, but a lot simpler.</p><h1>Floppy and percussion control:</h1><p>The printer has a little control board that accepts commands from the PC and will take care of moving the steppers, which I then exploit to make music. Unfortunately, controlling the floppy and HDDs is not as simple. Of course I can't wire them to my PCs motherboard and control it like that, no sane OS would let me control the speed, and definitely not let me slam the write head into the side of the drive! That's what my little control board is for.</p><p>I used a Fubarino which I won in an earlier Hackaday contest. It accepts commands through Serial and takes care of running the floppy drives at a certain frequencies so the controller program doesn't need to micromanage the drives.</p><p>Floppy drives are incredibly easy to control. Only 3 control pins are really needed to move the drive: enable (which turns on the light), direction (which controls which way the head will move), and step (which moves the stepper 1 step on a pulse). The Fubarino simply steps the drives when needed, occasionally reversing the direction when it reaches the end. The only modification done to the drives was the removal of the top metal plate, to allow for better sound.</p><p>HDDs as percussion aren't as easy to control, as they have a complicated controller that again, would never allow me to slam the read head into the side of the drive to make a drum-like sound. So I just tore those off, and replaced all that complicated control logic with a single transistor driving the coil that moves the head, and mounted it on a breadboard.</p><h1>Fubarino protocol:</h1><p>The Fubarino accepts commands from the main control program over Serial. The protocol was designed to be very fast and low-latency, with percussion instruments taking only 1 byte and changing the note on a floppy drive taking up to 4 bytes. I could post the details of the protocol, but it's nothing too interesting.</p><p>The control software also tries to lessen the amount of commands it needs to send for floppies by checking if there aren't already floppy drives playing the necessary notes based off of what it has already transmitted, and lets those drives continue playing those notes, changing as little floppy drives as possible for faster response time.</p>
        </div>

        

        

    

    <div class="j-modal-confirmation modal-background"></div>
<div class="j-modal-confirmation modal-content-holder">
    <p class="align-center" id="modal-message"></p>
    <p class="align-center"><a class="medium-button gold-gold-button delete-project-button" id="modal-yes" href="">Yes, delete it</a> <a class="medium-button grey-gold-button cancel-button" id="modal-cancel">Cancel</a> </p>
</div>
    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'phTNAoID-7Wg_W-MTRq51x6PdaYWSUHFNaUQ';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_post&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    
    
    
    

    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbpIGEWjpnPaaIvcAHwzCnxb%2FHLKGUM1bvoOeG5HC0xFU9LJ%2B910rZ72abfN8vxNDn41XRsK%2BvNLzydIft0iwmMulI7CjfWKAELKuUfOMCuUWjmKstkIZy4LyUZZqGjubUq7baOpUEVdpT0W01PyzlwivRvc7EDpLluqPEa2JX%2FBw%3D%3D-0.48.6.js"></script>

</body>
</html>