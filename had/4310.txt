<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en"> <!--<![endif]-->
<head>
    <title>reactive led gems : make the music pop &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">

    


        <meta name="description" content="show control from an led instrument. bring the audience into the performance experience. play highly reactive and mode setting patterns">
        <link rel="canonical" href="http://hackaday.io/project/4310-reactive-led-gems-make-the-music-pop" />



    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
        <script type="text/javascript">
        function getCommentIdFromUrl() {
            if(window.location.hash) {
                var hash = window.location.hash.substring(1);
                var commentId = parseInt(hash.replace('j-discussion-', ''));
                if (commentId) {
                    return commentId;
                }
            }
            return null;
        }

        var commentId = getCommentIdFromUrl();
        if (commentId) {
            var url = window.location.href;
            if (url.indexOf('?') > -1) {
                url = url.substring(0, url.indexOf('?'));
            }
            if (url.indexOf('#') > -1) {
                url = url.substring(0, url.indexOf('#'));
            }
            url += '/discussion-' + commentId;
            window.location.href = url;
        }
    </script>
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>

    <!-- Twitter Card data -->
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:site" content="@hackadayio">
    <meta name="twitter:title" content="reactive led gems : make the music pop">
    
        <meta name="twitter:description" content="this device hosts a multitude of replaceable piezo drum trigger sensors.

with each hit a midi event is triggered for the sound and then an osc message for the lighting control.

the trick is keep the latency down, making it solid enough to drag on and off stage, and make it look awesome!

To keep the latency down and make tons of patterns we decided to generate all the led patterns on a Freescale based Teensy 3.1 and as close to the gems as possible. this way our message payloads are minimal and fast.

these midi events ultimately have to go into ableton live to generate the drum hits and music. this is a great use of ableton because so often ableton sets are so locked to the quantization that they feel a bit robotic of fake. quantization is where each note or sound has been programmed to happen exactly  on the beats. with this type of live play setup drummers can play a little behind or ahead of the beat to really ramp up the energy or soften the mood.

">
    
    
        <meta name="twitter:image" content="https://cdn.hackaday.io/images/resize/600x600/6400311435351201519.jpg">
    

    <!-- Open Graph data -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content="reactive led gems : make the music pop">
    <meta property="og:url" content="http://hackaday.io/project/4310-reactive-led-gems-make-the-music-pop">
    
        <meta property="og:description" content="this device hosts a multitude of replaceable piezo drum trigger sensors.

with each hit a midi event is triggered for the sound and then an osc message for the lighting control.

the trick is keep the latency down, making it solid enough to drag on and off stage, and make it look awesome!

To keep the latency down and make tons of patterns we decided to generate all the led patterns on a Freescale based Teensy 3.1 and as close to the gems as possible. this way our message payloads are minimal and fast.

these midi events ultimately have to go into ableton live to generate the drum hits and music. this is a great use of ableton because so often ableton sets are so locked to the quantization that they feel a bit robotic of fake. quantization is where each note or sound has been programmed to happen exactly  on the beats. with this type of live play setup drummers can play a little behind or ahead of the beat to really ramp up the energy or soften the mood.

">
    
    
        <meta property="og:image" content="https://cdn.hackaday.io/images/resize/600x600/6400311435351201519.jpg">
    

    <script>
        var HIO = {};
    </script>

</head>
<body class="project-detail ">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F4310-reactive-led-gems-make-the-music-pop">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    

    
        <div class="page-basic-info-static guest-message-signup">
            
                <h2>Does this project spark your interest?</h2>
                <p class="page-basic-info-text">Become a member to follow this project and don't miss any updates</p>

            

            <div class="signup-holder">
                <form method="POST" action="/signup">
                    <input type="hidden" name="_csrf" value="Ezp1lCHs-6hoj-jeNjvjdUivHiGjKz3_VaRs" />
                    <input type="text" class="input-field input-email" placeholder="Your email address"  name="email"  /><input type="password" class="input-field input-password" placeholder="Password"  name="password" /><button class="black-gold-button signup" type="submit">Become a member</button>
                    <input class="input-field" placeholder="Invitation Code" required name="invitation_code" value="5Ad0ix2-b96J" type="hidden" />
                </form>
            </div>

        </div>
    


    

    <div class="header-photo" >
        <div class="overlay"></div>
    </div>

    <div class="headline">
        <div class="container">
            

            <h2><a href="/project/4310-reactive-led-gems-make-the-music-pop">reactive led gems : make the music pop</a></h2>
            <p class="description">show control from an led instrument. bring the audience into the performance experience. play highly reactive and mode setting patterns</p>

            

            
                <div class="author">
                    <a href="/hacker/130">
                        <img src="https://cdn.hackaday.io/images/resize/100x100/3690481435352967139.jpg" />
                        
                            <div class="author-details">
                                <div class="author-name">mpinner</div>
                            </div>
                        
                    </a>
                </div>
            
        </div>
    </div>

    <div class="container">
        <div class="content-left">

            
                <ul class="submissions-icons">
                    
                        
                            <li>
                                <a href="/submissions/prize2015/list" class="submission-icon submission-icon-5">
                                    The 2015 Hackaday Prize
                                </a>
                            </li>
                        
                        
                            <script>
                                HIO.forPrize = true;
                            </script>
                        
                    
                </ul>
            

            
                <a href="/project/4310/gallery#999fb57c0e82fc125ab246b2d71e4aea" id="project-image" class="image-holder" style="background-image: url(https://cdn.hackaday.io/images/resize/600x600/6400311435351201519.jpg)" data-image="https://cdn.hackaday.io/images/resize/600x600/6400311435351201519.jpg">
                </a>
            

            <div class="thumbs-holder">
                
                        <a href="/project/4310/gallery#999fb57c0e82fc125ab246b2d71e4aea" class="image-holder thumb" style="background-image: url(https://cdn.hackaday.io/images/resize/600x600/6400311435351201519.jpg)" data-image="https://cdn.hackaday.io/images/resize/600x600/6400311435351201519.jpg">
                    </a>
                
                        <a href="/project/4310/gallery#811b76dcab06cad4409eec6685ca3a61" class="image-holder thumb" style="background-image: url(https://cdn.hackaday.io/images/resize/600x600/5837661435351397241.jpg)" data-image="https://cdn.hackaday.io/images/resize/600x600/5837661435351397241.jpg">
                    </a>
                
                        <a href="/project/4310/gallery#4e13bb9e7bccc9ecfa8a143319f49284" class="image-holder thumb thumb-last" style="background-image: url(https://cdn.hackaday.io/images/resize/600x600/1068771424766163253.jpg)" data-image="https://cdn.hackaday.io/images/resize/600x600/1068771424766163253.jpg">
                    </a>
                
                        <a href="/project/4310/gallery#9ca4a05a8dd46cb05e0b7e3d2486dc65" class="image-holder thumb" style="background-image: url(https://cdn.hackaday.io/images/resize/600x600/5904511435351272310.jpg)" data-image="https://cdn.hackaday.io/images/resize/600x600/5904511435351272310.jpg">
                    </a>
                
                        <a href="/project/4310/gallery#8f70d51a05da148dc108d1beb83092dd" class="image-holder thumb" style="background-image: url(https://cdn.hackaday.io/images/resize/600x600/1265921435351216236.jpg)" data-image="https://cdn.hackaday.io/images/resize/600x600/1265921435351216236.jpg">
                    </a>
                
                        <a href="/project/4310/gallery#875b091152a3f98aa6f7964c2ecd06d4" class="image-holder thumb thumb-last" style="background-image: url(https://cdn.hackaday.io/images/resize/600x600/4048741435351486717.jpg)" data-image="https://cdn.hackaday.io/images/resize/600x600/4048741435351486717.jpg">
                    </a>
                
            </div>

            
                <div class="view-gallery-holder">
                    <a href="/project/4310/gallery">
                        <div class="view-gallery grey-gold-button very-small-button">View Gallery</div>
                    </a>
                </div>
            

            

            

            

            

                <div class="project-following-container ">
                    <a href="javascript:void(0)" data-href="/project/4310/event/unfollow" class="gold-gold-button unfollow text-changing-button" data-before="<span class='icon-checkmark-gray'>Following</span>" data-after="Unfollow?"><span class="icon-checkmark-gray">Following</span></a>
                    <a href="javascript:void(0)" data-href="/project/4310/event/follow" class="gold-gold-button follow">Follow project</a>
                </div>
                
                

                <div id="similars">
                    <div class="similars-header">
                        Similar projects worth following
                        <a href="javascript:void(0)" class="submissions-close"></a>
                    </div>
                </div>

                
                    <div class="project-skulling-container ">
                        <a href="javascript:void(0)" data-href="/project/4310/event/unskull" class="gold-gold-button unskulled text-changing-button" data-before="<span class='icon-skull'>You</span>" data-after="Unskull?"><span class="icon-skull">You</span></a>
                        <a href="javascript:void(0)" data-href="/project/4310/event/skull" class="gold-gold-button skulled"><span class="icon-skull">Give a</span></a>
                    </div>
                

            

            
            

            <div class="section section-project-stats">
                
                    <span class="icon-view-count" title="View Count">312</span>
                
                <a>
                    <span class="icon-comment-with-hover oi-font-color-grey" title="Comments" id="comment_count">3</span>
                </a>
                
                    <a href="/hackers/all/project/4310/following">
                
                    <span class="icon-view oi-font-color-grey" title="Followers" id="follower_count">22</span>
                
                    </a>
                

                
                    
                        <a href="/hackers/all/project/4310/likers">
                    
                            <span class="icon-skull oi-font-color-grey" title="Skulls" id="like_count">5</span>
                    
                        </a>
                    
                
            </div>

            
                <div class="section section-team">
                    <h5>
                        
                            Team
                        
                    </h5>

                    <ul>
                        
                            
                                <li>
                                    <img src="https://cdn.hackaday.io/images/resize/100x100/3690481435352967139.jpg" class="team-photo"/>
                                    <a class="team-link" href="/hacker/130-mpinner">mpinner</a>

                                    

                                    
                                </li>
                            
                        
                    </ul>

                    <div class="error-message hide" id="team-error"><p></p></div>

                    
                    <input type="hidden" name="HADPrizeSubmission" value="true"/>
                        
                            <a href="javascript:void(0)"
                               
                                    class="login-button"
                               
                            >Request to join this project</a>
                        
                    

                </div>
            

            

            
                <div class="section section-links">
                    <ul class="links-list">
                        
                            <li class="links-item">
                                <a href="https://github.com/mpinner/PurityRingGems" target="_blank" class="icon-github">Code</a>
                            </li>
                        
                            <li class="links-item">
                                <a href="https://vine.co/v/O2IBOXLBHxW" target="_blank" class="icon-other">assembly</a>
                            </li>
                        
                            <li class="links-item">
                                <a href="https://vine.co/v/O2IpYd7vtLA" target="_blank" class="icon-other">lighting tests</a>
                            </li>
                        
                    </ul>
                </div>
            


            
                
                    <div class="section section-tags">
                        
                            <div class="special-tags">
                                <a href="/projects/tag/hardware" class="tag tag-hardware">hardware</a>
                            </div>
                        
                            <div class="special-tags">
                                <a href="/projects/tag/ongoing%20project" class="tag tag-ongoing">ongoing project</a>
                            </div>
                        
                        
                            <a href="/projects/tag/LEDS" class="tag">LEDS</a>
                        
                            <a href="/projects/tag/led" class="tag">led</a>
                        
                            <a href="/projects/tag/osc" class="tag">osc</a>
                        
                            <a href="/projects/tag/midi" class="tag">midi</a>
                        
                            <a href="/projects/tag/controller" class="tag">controller</a>
                        
                            <a href="/projects/tag/wireless" class="tag">wireless</a>
                        
                            <a href="/projects/tag/xbee" class="tag">xbee</a>
                        
                            <a href="/projects/tag/fsr" class="tag">fsr</a>
                        
                            <a href="/projects/tag/LiPo" class="tag">LiPo</a>
                        
                            <a href="/projects/tag/Freescale" class="tag">Freescale</a>
                        
                            <a href="/projects/tag/fio" class="tag">fio</a>
                        
                            <a href="/projects/tag/2015HackadayPrize" class="tag">2015HackadayPrize</a>
                        
                    </div>
                
            

            <div class="section section-share">
                <h5>
                    
                        Enjoy this project?
                    
                </h5>
                
                <a href="https://twitter.com/intent/tweet?url=http://hackaday.io/project/4310-reactive-led-gems-make-the-music-pop&text=reactive%20led%20gems%20%3A%20make%20the%20music%20pop by mpinner&related=hackadayio&via=hackadayio" target="_blank" class="icon-twitter icon-twitter-notext gray-link">Share on twitter</a> &nbsp; <a href="https://www.facebook.com/sharer/sharer.php?u=http://hackaday.io/project/4310-reactive-led-gems-make-the-music-pop" target="_blank" class="icon-facebook icon-facebook-notext gray-link">Share on Facebook</a> &nbsp; <a href="https://plus.google.com/share?url=http://hackaday.io/project/4310-reactive-led-gems-make-the-music-pop&h1=en-US" target="_blank" class="icon-google icon-google-notext gray-link">Share on Google+</a>
            </div>

            
            
                <div class="section section-lists">
                    <h5>This project is in these lists</h5>
                    
                        <div class="section-lists list-items">
    <a href="/list/5845-2015-thp-freescale-parts">
        <div title="2015 THP: Freescale Parts" class="list-item-cover"
                
                    style="background-image: url('https://cdn.hackaday.io/images/resize/600x600/300271431802606965.jpg')"
                
                >
        </div>

        <div class="project-item-title">
            <h4>2015 THP: Freescale Parts</h4>
        </div>
    </a>
</div>

                    
                        <div class="section-lists list-items">
    <a href="/list/5428-freescale-parts">
        <div title="Freescale Parts" class="list-item-cover"
                
                    style="background-image: url('https://cdn.hackaday.io/images/resize/600x600/8346161429899257202.jpg')"
                
                >
        </div>

        <div class="project-item-title">
            <h4>Freescale Parts</h4>
        </div>
    </a>
</div>

                    
                    <a href="/lists/">Browse all lists »</a>
                </div>
            

            
                <div class="section section-submissions-lists">
                    <h5>This project is submitted for</h5>
                    <ul>
                        
                            <li><a href="/submissions/prize2015/list">The 2015 Hackaday Prize</a></li>
                        
                    </ul>
                </div>
            

            <div class="section section-project-time">
                <p class="project-time">
                    This project was
                        
                            created on 02/12/2015
                            
                                 and last updated 2 months ago.
                            
                        
                </p>
            </div>

            

        </div>

        <div class="content-right">

            
                <div class="section section-description">
                    <h5>Description</h5>
                    <div class="description">this device hosts a multitude of replaceable piezo drum trigger sensors.<br /><br />with each hit a midi event is triggered for the sound and then an osc message for the lighting control.<br /><br />the trick is keep the latency down, making it solid enough to drag on and off stage, and make it look awesome!<br /><br />To keep the latency down and make tons of patterns we decided to generate all the led patterns on a Freescale based Teensy 3.1 and as close to the gems as possible. this way our message payloads are minimal and fast.<br /><br />these midi events ultimately have to go into ableton live to generate the drum hits and music. this is a great use of ableton because so often ableton sets are so locked to the quantization that they feel a bit robotic of fake. quantization is where each note or sound has been programmed to happen exactly  on the beats. with this type of live play setup drummers can play a little behind or ahead of the beat to really ramp up the energy or soften the mood.<br /><br /></div>
                </div>
            

            
                <div class="section section-details">
                    <h5>
                        
                            Details
                        
                    </h5>
                    

                    
                        <div class="post-content details-content">
                            <p><p>BOM for Usb Gem Controller:</p><ul><li>8x piezo drum triggers </li><li>Freescale driven Teensy 3.1</li><li>octows2811 adapter</li><li>UV and Amber of leds and resistors (for status lights)</li><li><strong>cat 6 (25ft)</strong></li><li>barrel jack connectors male and female with 6ft of cable</li><li>midi drum module</li></ul><p>BOM for each Gem</p><ul><li>piezo drum triggers </li><li>~100 ws2811 leds 60/m</li><li>polycarbonate tubes</li><li>heatshrink</li><li>hotglue</li><li>ws2811 soldering board</li><li>barrel jack connectors male and female with 6ft of cable</li><li>1/4" audio mono extension cable 6ft</li><li>misc velcro</li><li>3/4 inch white acrylic</li></ul>
                                
                            </p>
                        </div>
                    
                    <div class="detail-btns">
                    
                            
                    
                    </div>
                </div>

            

            
                
                    <div class="section section-components">
                        <h5>
                            
                                Components
                            
                        </h5>
                        
                            <ul class="section-component-list">
                                
                                    
    <li class="component-51205">
        <span class="component-number">1</span>
        <span class="component-x">×</span>
        <span class="component-content">
            Freescale driven Teensy 3.1
            <span class="component-description"></span>
       </span>
    </li>

                                
                            </ul>
                        <p>
                            
                            
                        </p>
                    </div>
                
            

            
                <div class="section section-buildlogs">

                    <h5>Project logs</h5>
                    
                    <ul class="buillogs-list post-content details-content">
                    
                        <li>
                            <h2><a href="/project/4310/log/20041-shaders">Shaders</a></h2>
                            <small class="authorship">2 months ago  &bull;
                            <a class="gray-link" href="/project/4310/log/20041#discussion-list">
                                0 comments
                            </a>
                            </small>
                            <p><p><strong>Q : how do you control 1000s of leds with minimal delay?</strong></p><p><strong><br></strong></p><p><strong>A : no delay. </strong></p><p>from the beginning i knew this was going to be the central issues.  to ease development i choose to parse all the osc messages on the microcontroller.</p><p>this is a fairly novel approach. osc doesn't specifically rely on having a network, but everyone uses it over udp. my teensy looks like an osc device sorta.  i have to parse all the osc traffic on my teeny. this has to be the highest priority task and cannot be delayed. these usb / serial buffers will overrun quickly and i need the hits to be perfectly sync'd  (&lt;5ms) .</p><p>doing all this osc parsing in c is kind of maddening, but afforded me only having to manage the message formats in one place. (DRY: don't repeat yourself)</p><hr><p>ok, <strong>SHADERS</strong></p><p><strong><br></strong></p><p>their use wasn't strictly required. i have GPU. I probably wasn't even implemented correctly.  I use the term "Shader" in this case to explain the design pattern and division of responsibility.  i knew i'd need to add patterns fairly quickly and have lots of data driven configurability.</p><p>basically you can get a ton of different behavior by implementing this virtual method:</p><pre class="hljs cpp">  <span class="hljs-function"><span class="hljs-keyword">virtual</span> <span class="hljs-keyword">uint32_t</span> <span class="hljs-title">shade</span> <span class="hljs-params">(<span class="hljs-keyword">float</span> height, <span class="hljs-keyword">uint32_t</span> color, <span class="hljs-keyword">uint32_t</span> currentColor, <span class="hljs-keyword">float</span> remaining, <span class="hljs-keyword">uint32_t</span> secondaryColor)</span></span>;</pre><p>that is all. here is one of the more complex ones.</p><pre class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-keyword">uint32_t</span> <span class="hljs-title">shade</span> <span class="hljs-params">(<span class="hljs-keyword">float</span> height, <span class="hljs-keyword">uint32_t</span> color, <span class="hljs-keyword">uint32_t</span> currentColor, <span class="hljs-keyword">float</span> remaining, <span class="hljs-keyword">uint32_t</span> secondaryColor)</span> </span>{    <span class="hljs-keyword">if</span>(remaining &gt; <span class="hljs-number">0.85</span>) {      <span class="hljs-keyword">if</span>(<span class="hljs-number">2</span> &gt; random(<span class="hljs-number">100</span>)) {        <span class="hljs-keyword">return</span> color;      }    }     <span class="hljs-keyword">if</span>(remaining &gt; <span class="hljs-number">0.7</span>) {      <span class="hljs-keyword">if</span>(<span class="hljs-number">2</span> &gt; random(<span class="hljs-number">100</span>)) {        <span class="hljs-keyword">return</span> secondaryColor;      }    }      <span class="hljs-keyword">if</span>(<span class="hljs-number">5</span> &gt; random(<span class="hljs-number">100</span>)) {      <span class="hljs-keyword">return</span> colorByBrightness(<span class="hljs-number">0.9</span>, currentColor);    }    <span class="hljs-keyword">return</span> currentColor;  }  };</pre><p>right. not all that complex. check em all out here : <a href="https://github.com/mpinner/PurityRingGems/tree/master/Arduino/Gems_HitSync">https://github.com/mpinner/PurityRingGems/tree/master/Arduino/Gems_HitSync</a></p><p> the trick is in how you think about the <strong>context</strong> and task.</p><p>each led is essentially complete responsible for only itself and i know how to write simple code to control one led. </p><p>i provide myself a rich context for each led to live within. things like timing, colors, and position are all normalized from 0.0 - 1.0.  this makes writing code extremely predictable, easy, and <strong>inefficient</strong>.</p><hr><p><strong>I am doing so much floating point math. it is almost irresponsible and completely insane for what could be ALL integers </strong></p><p><strong><br></strong></p><p>ALMOST INSANE:</p><p> the only things that makes it ok:</p><p>  - having plenty of spare cycles on my Teensy's Freescale</p><p> - being able to accept a new OSC Message ANYTIME , even between calculations for neighboring pixels</p><p> - Measuring my effective frame rate to ensure it always looked GOOOOOOD . initially i was pushing 200fps. once i started adding more and more and more features and cross gem patterns, my frame rate dipped to just over 60fps.. sweet!</p><p>one might argue it looks even better this way because you are constantly calculating the most accurate colors. im not sure that's quite true, but you'll have to see it live.</p><p>a fun side effect was being able to bring in and compare previous pixel values to have feedback like effects. i didn't play with this nearly as much as i should have, but it is very apparent when you start using the touchosc interface to simulate hits very very fast.</p><p>well, i hope this helps</p><p>please review the code and comment as needed. learn what you can. no elitism please. i did this all under no sleep and serious duress.</p>
                                
                            </p>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4310/log/14541-octows2811">octows2811</a></h2>
                            <small class="authorship">6 months ago  &bull;
                            <a class="gray-link" href="/project/4310/log/14541#discussion-list">
                                0 comments
                            </a>
                            </small>
                            <p><p>midi and osc and octows2811... oh my.</p><p>there are sooooo many ways to get from a midi device to a teensy running octows2811, im boggled.</p><p>also, my target system runs ableton and windows;( so that doesn't make midi handling all that less complex</p><p>thus far my stack is</p><p>midi -&gt; ableton -&gt; live grabber -&gt; processing -&gt; oscuinoSerial -&gt; teensy serial</p><p>i might simplify this by compiling teensy as a midi device, but im really in love with the scripting language i've built upon OSC and the debug info i can get back...</p><p>more on this to follow..</p><p><img src="https://cdn.hackaday.io/images/8070441425064575553.jpg"></p><p><img src="https://cdn.hackaday.io/images/2395421425064601933.jpg"></p>
                                
                            </p>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4310/log/14442-next-step-output">next step... output</a></h2>
                            <small class="authorship">6 months ago  &bull;
                            <a class="gray-link" href="/project/4310/log/14442#discussion-list">
                                0 comments
                            </a>
                            </small>
                            <p><p>the next step is evolving... the output!</p><p><img src="https://cdn.hackaday.io/images/8242101424766099525.jpg"></p><p><img src="https://cdn.hackaday.io/images/3288071424766015438.png"></p><p><img src="https://cdn.hackaday.io/images/6935321424765979022.png"></p>
                                
                            </p>
                        </li>
                    
                    </ul>
                    <p class="log-btns">
                        
                        
                            <a href="/project/4310/logs" class="grey-gold-button medium-button show">
                            
                                View all 3 project logs
                            
                            </a>
                        
                    </p>
                </div>
            

            
                
            
            
            <div class="section section-discussions last">
        <h5 id="j-discussions-title" class="j-discussions-title">Discussions</h5>

    <form id="j-discussion-add-top" action="/discussions/add" name="add-comment" method="POST" class="skip-global-form j-discussion-add hide">
        <div class="textarea-holder">
            <textarea placeholder="Add your comment" name="comment" class="editable input-comment"></textarea>
        </div>
        <input type="hidden" name="categoryId" value="4310" />
        <input type="hidden" name="category" value="project" />
        <input type="hidden" name="_csrf" value="Ezp1lCHs-6hoj-jeNjvjdUivHiGjKz3_VaRs" />
        <input type="hidden" name="replyTo" value="0" />
        <input type="submit" class="grey-gold-button medium-button" value="Post comment" />
    </form>

    <div id="discussion-list">
        
<p>
    <div class="signup-holder textarea-holder">
        <textarea placeholder="Sign in or become a member to leave your comment" name="comment" class="editable input-comment"></textarea>
    </div>
    <a href="#" class="login-button grey-gold-button medium-button half show">Sign in/up to comment</a>
</p>
<div class="modal-content-holder login-modal" id="login-modal">
    <div class="submissions-close modal-cancel"></div>
    <div class="signup-holder">
        <h2>Become a member</h2>
        <p>In order to follow projects & hackers or give skulls
        <br />you need to create an account.</p>
        <form action="/signup" method="POST">
            <fieldset class="form-left">
                <input type="text" class="input-field" placeholder="Enter your email address" required name="email"  />
                <input type="password" class="input-field" placeholder="Pick a secure password" required name="password"  />
            </fieldset>
            <fieldset class="form-right">
              <button class="gold-gold-button signup" type="submit">Sign up</button>
          </fieldset>
          <input type="hidden" name="_csrf" value="Ezp1lCHs-6hoj-jeNjvjdUivHiGjKz3_VaRs" />
          <input class="input-field" placeholder="Invitation Code" required name="invitation_code" value="5Ad0ix2-b96J" type="hidden" />
        </form>
        <a id="login-modal-signin" href="/signin">Already a member?</a>
    </div>
</div>





    
    

    <div id="j-discussion-18930" data-level="1" class="discussions-item" style="margin-left: 0px;">
        <div class="discussions-item-image">

            <a href="/hacker/130"><img src="https://cdn.hackaday.io/images/resize/100x100/3690481435352967139.jpg" alt=""></a>


            
        </div>
        <div class="discussions-item-body">
            <small class="authorship">

                <a href="/hacker/130">mpinner</a>

                wrote <a class="gray-link" href="/project/4310-reactive-led-gems-make-the-music-pop/discussion-18930">6 months ago</a>

                <span id="comment-points-holder-18930" class="">
                    &bull; <span id="comment-points-18930">
                             1 point
                    </span>
                </span>

            </small>
            <div>
                <div id="comment-18930-content">
                    <p>10mm pink. found em randomly at @crashspacela</p>
                </div>
                <p id="comment-18930-editor" class="hide"></p>
            </div>
            <p>
                <span class="delete-options" id="actions-18930">
                    
                    
                </span>
                <span class="delete-confirm hide"><span class="delete-q">Are you sure?</span> <a href="#" class="delete-yes"><small>[yes]</small></a> / <a href="#" class="delete-no"><small>[no]</small></a></span>
            </p>
        </div>
    </div>

    

    
    

    <div id="j-discussion-18293" data-level="1" class="discussions-item" style="margin-left: 0px;">
        <div class="discussions-item-image">

            <a href="/hacker/3459"><img src="https://cdn.hackaday.io/images/resize/100x100/9294361423226559372.jpg" alt=""></a>


            
        </div>
        <div class="discussions-item-body">
            <small class="authorship">

                <a href="/hacker/3459">davedarko</a>

                wrote <a class="gray-link" href="/project/4310-reactive-led-gems-make-the-music-pop/discussion-18293">6 months ago</a>

                <span id="comment-points-holder-18293" class="hide">
                    &bull; <span id="comment-points-18293">
                              point
                    </span>
                </span>

            </small>
            <div>
                <div id="comment-18293-content">
                    <p>I want to see this in action :) It's a beautiful case! what's the color of the leds, they look purple-ish?</p>
                </div>
                <p id="comment-18293-editor" class="hide"></p>
            </div>
            <p>
                <span class="delete-options" id="actions-18293">
                    
                    
                </span>
                <span class="delete-confirm hide"><span class="delete-q">Are you sure?</span> <a href="#" class="delete-yes"><small>[yes]</small></a> / <a href="#" class="delete-no"><small>[no]</small></a></span>
            </p>
        </div>
    </div>

    

    
    

    <div id="j-discussion-29189" data-level="2" class="discussions-item" style="margin-left: 25px;">
        <div class="discussions-item-image">

            <a href="/hacker/130"><img src="https://cdn.hackaday.io/images/resize/100x100/3690481435352967139.jpg" alt=""></a>


            
        </div>
        <div class="discussions-item-body">
            <small class="authorship">

                <a href="/hacker/130">mpinner</a>

                wrote <a class="gray-link" href="/project/4310-reactive-led-gems-make-the-music-pop/discussion-29189">2 months ago</a>

                <span id="comment-points-holder-29189" class="hide">
                    &bull; <span id="comment-points-29189">
                              point
                    </span>
                </span>

            </small>
            <div>
                <div id="comment-29189-content">
                    <p>you can see em in action at any of their tour stops : &nbsp;<a href="http://purityringthing.com/">http://purityringthing.com/</a></p><p>or here on conan :&nbsp;<iframe width="500" height="281" src="//www.youtube.com/embed/FcuKW9ZmyJA" frameborder="0" allowfullscreen=""></iframe></p><p>or maybe this video does a nice job :&nbsp;</p><p><iframe width="500" height="281" src="//www.youtube.com/embed/MR4W3AwaKts" frameborder="0" allowfullscreen=""></iframe></p>
                </div>
                <p id="comment-29189-editor" class="hide"></p>
            </div>
            <p>
                <span class="delete-options" id="actions-29189">
                    
                    
                </span>
                <span class="delete-confirm hide"><span class="delete-q">Are you sure?</span> <a href="#" class="delete-yes"><small>[yes]</small></a> / <a href="#" class="delete-no"><small>[no]</small></a></span>
            </p>
        </div>
    </div>

    




<script type="text/javascript">

    var pageIndex = 0;


</script>
    </div>

    

</div>



        </div>

    </div>

    
        <div class="container">
            <div class="section-recommendations">
                <h2>Similar projects</h2>
                
                    

<div class="project-item   ">

    

    <a href="/project/4329-wifi-power-mapping" class="item-link">
        <div title="Wifi power mapping by CNLohr" class="project-item-cover"
                
             style="background-image:url(https://cdn.hackaday.io/images/resize/600x600/5469411423886330217.jpg)"
                
                >

        </div>

        
                <div class="project-item-stats">
                    
                    
                        <span class="icon-view-count" title="View Count">20.4k</span>
                    
                    <span class="icon-comment-with-hover" title="Comments">12</span>
                    <span class="icon-view" title="Followers">148</span>
                    
                        <span class="icon-skull" title="Skulls">57</span>
                    
                </div>
         

        <div class="project-item-title ">
            Using an ESP8266 to look at wifi signals in great detail.
        </div>
    </a>
    <div class="project-item-headline">
        <span class="project-owner hide">Project Owner</span>
        <span class="project-owner hide">Contributor</span>
        <h3><a href="/project/4329-wifi-power-mapping" title="Wifi power mapping">Wifi power mapping</a></h3>
        <p>by <a href="/hacker/50811">CNLohr</a></p>
    </div>
</div>
                
                    

<div class="project-item m-last-child  ">

    

    <a href="/project/89-octows2811-led-library" class="item-link">
        <div title="OctoWS2811 LED Library by Paul Stoffregen" class="project-item-cover"
                
             style="background-image:url(https://cdn.hackaday.io/images/resize/600x600/6962481392563861974.jpg)"
                
                >

        </div>

        
                <div class="project-item-stats">
                    
                    
                        <span class="icon-view-count" title="View Count">1k</span>
                    
                    <span class="icon-comment-with-hover" title="Comments">1</span>
                    <span class="icon-view" title="Followers">52</span>
                    
                        <span class="icon-skull" title="Skulls">7</span>
                    
                </div>
         

        <div class="project-item-title ">
            Arduino library for driving hundreds to thousands of WS2811, WS2812 or INK1002 addressable RGB LEDs.
        </div>
    </a>
    <div class="project-item-headline">
        <span class="project-owner hide">Project Owner</span>
        <span class="project-owner hide">Contributor</span>
        <h3><a href="/project/89-octows2811-led-library" title="OctoWS2811 LED Library">OctoWS2811 LED Library</a></h3>
        <p>by <a href="/hacker/228">Paul Stoffregen</a></p>
    </div>
</div>
                
                    

<div class="project-item  b-last-child ">

    

    <a href="/project/5913-64x32-rgb-led-matrix-bare-metal-tetris" class="item-link">
        <div title="64x32 RGB LED Matrix Bare Metal Tetris by tehaxor69" class="project-item-cover"
                
             style="background-image:url(https://cdn.hackaday.io/images/resize/600x600/1827231432221903835.JPG)"
                
                >

        </div>

        
                <div class="project-item-stats">
                    
                    
                        <span class="icon-view-count" title="View Count">211</span>
                    
                    <span class="icon-comment-with-hover" title="Comments">0</span>
                    <span class="icon-view" title="Followers">10</span>
                    
                        <span class="icon-skull" title="Skulls">4</span>
                    
                </div>
         

        <div class="project-item-title ">
            A bare metal Tetris game on a 64x32 RGB LED matrix, run by a Raspberry Pi 2 Model B.
        </div>
    </a>
    <div class="project-item-headline">
        <span class="project-owner hide">Project Owner</span>
        <span class="project-owner hide">Contributor</span>
        <h3><a href="/project/5913-64x32-rgb-led-matrix-bare-metal-tetris" title="64x32 RGB LED Matrix Bare Metal Tetris">64x32 RGB LED Matrix Bare Metal Tetris</a></h3>
        <p>by <a href="/hacker/3962">tehaxor69</a></p>
    </div>
</div>
                
            </div>

        </div>
    

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'Ezp1lCHs-6hoj-jeNjvjdUivHiGjKz3_VaRs';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_project&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />
    <div class="j-modal-confirmation modal-background"></div>
<div class="j-modal-confirmation modal-content-holder">
    <p class="align-center" id="modal-message"></p>
    <p class="align-center"><a class="medium-button gold-gold-button delete-project-button" id="modal-yes" href="">Yes, delete it</a> <a class="medium-button grey-gold-button cancel-button" id="modal-cancel">Cancel</a> </p>
</div>

    
    
    
    
    
    
    
    
    
    

    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evYhvPcTNHjcVmLti9HxMVov4N%2FG0Vb08G3dKHr8dVQWzXej5t18RehizqZ8wIVJ7qCSmA5v7VaFjCQENYTT0gaQoyhjrODHsQk5JUVvz7t44Dtk%2B11xxmipO4Y%2B9cBwn1IdfK1bYjGht%2Bf1yWZu2SwuQOo6kGY9xwArhHVwpedkUh5kLaSLkPbgFU2aMPMYlr%2FkGi5SGh0159v8zUCbh%2Fx4qqGgiq8xue1QDxwAtojDbMufEMnPeES%2BXUvICUCqPFVF9PsrubQsdtbQAJZsDggl-0.48.6.js"></script>

    <style>
        .mediumInsert-buttons {
            display: none !important;
        }
    </style>

    <div id="submission-popup-back"></div>
    <div id="submission-popup"></div>

    <div id="modal-report-back" class="modal-background"></div>
    <div id="modal-report" class="modal-content-holder container">
        <a href="javascript:void(0);" class="modal-close"></a>
        <form action="/report/project" class="j-modal-form">
            <h2>Report project as inappropriate</h2>

            <p class="intro-text">
                You are about to report the project "<b>reactive led gems : make the music pop</b>", please tell us the reason.
            </p>

            <textarea name="comment" class="j-report-comment" placeholder="Why do you report the project as inappropriate"></textarea>

            <input type="hidden" name="_csrf" value="Ezp1lCHs-6hoj-jeNjvjdUivHiGjKz3_VaRs" />
            <input type="hidden" name="projectId" value="4310" />
            <div class="modal-footer">
                <input type="submit" value="Report" class="gold-gold-button"/>
            </div>
            <div class='j-modal-form-message'></div>
        </form>
        <div class='j-modal-message hide'></div>
    </div>



    <div id="modal-contributor-apply-back" class="modal-background"></div>
    <div id="modal-contributor-apply" class="modal-content-holder container">
        <a href="javascript:void(0);" class="modal-close"></a>
        <form id="contributor-apply-form">
            <h2>Send message</h2>

            <textarea name="message" class="j-report-comment">
Hello,

I really like your project and I think I have skills to help you.
            </textarea>
            <p class="application-success">Your application has been submitted.</p>
            <input type="hidden" name="_csrf" value="Ezp1lCHs-6hoj-jeNjvjdUivHiGjKz3_VaRs" />
            <input type="hidden" name="projectId" value="4310" />

            <div class="modal-footer">
                <input type="submit" value="Send" class="gold-gold-button"/>
            </div>
        </form>

    </div>


    <div id="modal-contributor-remove-back" class="modal-background"></div>
    <div id="modal-contributor-remove" class="modal-content-holder container">
        <a href="javascript:void(0);" class="modal-close"></a>
        <form id="contributor-remove-form">
            <h2>Remove Contributor</h2>
            <p>
                Are you sure you want to remove yourself as a contributor for this project?
            </p>
            <p>Project owner will be notified upon removal.</p>
            <input type="hidden" name="_csrf" value="Ezp1lCHs-6hoj-jeNjvjdUivHiGjKz3_VaRs" />
            <input type="hidden" name="projectId" value="4310" />
            <input type="hidden" name="remove_contributor_id" id="remove_contributor_id"/>

            <div class="modal-footer">
                <input type="submit" value="Remove" class="gold-gold-button"/>
                <input value="Nevermind" class="gold-gold-button"/>
            </div>
        </form>
    </div>


    <script>
        HIO.projectId = 4310;
    </script>

  </body>
</html>
