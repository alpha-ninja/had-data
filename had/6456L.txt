<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; ESP8266 DIN 8-Channel Wifi Relay Controller &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F6456%2Flogs">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/6456-esp8266-din-8-channel-wifi-relay-controller">ESP8266 DIN 8-Channel Wifi Relay Controller</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">8 channels of 10A 250V relays controlled over Wifi with an ESP8266 module at the core. Built in RS232-TTL level shifter for external devices</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/77200-david-ogilvy" title="Visit Profile">David Ogilvy</a><span>&bull;</span>
                
                2 months ago<span>&bull;</span><a href="/project/6456#discussion-list" title="See Comments">11 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/6456-esp8266-din-8-channel-wifi-relay-controller">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/6456/logs/sort/newest">Newest</option>
                    <option value="/project/6456/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/6456/log/20015-limited-gpio-hardly">Limited GPIO? Hardly. </a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/6456/log/20015#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20015"><p>The first step when beginning this project was dealing with the limited IO pins on the ESP8266 modules. The ESP-07 and ESP-12 modules break out all of the useful pins. A number of pins needs to be pulled high or low during power on so it boots off the SPI flash memory (or bootloader). </p><p>GPIO0 - 10k pullup for boot mode - Bootload/Program button pulls this to ground on powerup/reset to enable update over serial. Doubles as a i2c clock pin</p><p>GPIO2 - 10k pullup for boot mode - also doubles as i2c data pin<br></p><p>If you gotta pull the pins up for boot select, might as well put anything needing a pullup on those pins ;) i2c is broken out to a header on this for future use</p><p>GPIO4 - 10k pullup - user switch</p><p>GPIO5 - user LED output</p><p>GPIO12/13/14/15 - hardware SPI pins for Data In/Out, Clock, and Chip Select</p><p>Note: GPIO15 has to be pulled low for both SPI flash/Serial boot modes. A 10k pulldown is fine for this as it is only the SPI clock line. </p><p>GPIO16 - unconnected by default - footprint for resistor connection to reset for sleep mode reset (not needed for this project).</p><p>Microchips MCP23S08 provides 8 GPIO pins over the SPI bus. Up to 4 of these can be connected to the same bus with a common chip select line. Each chip can be set to one of 4 addresses. So a total of 32 GPIOs is possible. Even better, the bigger brother MCP23S17 provides 16 GPIOs and can have up to 8 devices on one SPI bus (128 GPIOs!). </p><p>Some driver code for the MCP23Sxx chips is available on my Github - including support for multiple devices per SPI bus: <a href="https://github.com/MetalPhreak">https://github.com/MetalPhreak</a></p><p>So in summary, you can have 2 on-module GPIOs, (software) i2c and SPI with no issues. GPIO expanders provide plenty of addition IOs as required. The 2 on-module GPIOs can be used with the Microchip's interupt-on-change output pin to provide equivalent functionality to on-module GPIOs. Using the hardware SPI module for this is much better than the i2c versions, as you can buffer the data in the SPI module (which sends it at 10MHz), while you continue to do work with the main cpu (@80MHz). Software i2c ties up the whole device while it sends at sub 1MHz speeds.<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6456/log/20017-some-videos-of-an-assembled-board">Some videos of an assembled board...</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/6456/log/20017#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20017"><p>Just sending simple 2 byte packets over a TCP socket for testing.</p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/bYWmRU5XIWA" frameborder="0" allowfullscreen=""></iframe><p>And just to see how many updates it can do over Wifi for kicks... Good thing these Omron relays are rated for millions of operations :)</p><iframe style="width: 500px; height: 281px;" width="500" height="281" src="//www.youtube.com/embed/y9DlE2H5v3U" frameborder="0" allowfullscreen=""></iframe></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6456/log/20461-front-panel-overlay-and-http-server">Front Panel Overlay and HTTP Server</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/6456/log/20461#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20461"><p>I've been looking at options to put some kind of front panel overlay on the DIN rail enclosure. The best option I've seen so far that doesn't cost huge amounts of money is die-cut vinyl stickers. Looking at a service like stickeryou.com or stickerapp.com</p><p>Front panel dimensions and LED pipe/button locations have already been marked out in DXF format and converted to SVG for editing. Just need to dust off my photoshop skills and get something done...</p><p>In the meantime, I've been playing around with sprite-tm's esphttpd web-server code which works quite well. The actual code to control the relays on this via a web-interface are going to be quite simple. The challenge will be writing the html/css/js/ajax stuff to make it pretty. </p><p><span></span><br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6456/log/20466-webserver-works">Webserver Works</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/6456/log/20466#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20466"><p>Got the web interface up and running. No live status of the relays shown on the page yet, but remote turning on/off works perfectly :)</p><p><img src="https://cdn.hackaday.io/images/8412611436099557340.png"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6456/log/20472-live">LIVE</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/6456/log/20472#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20472"><p>ESP8266 Server: Link Removed</p><p>UStream: <a href="http://www.ustream.tv/channel/metalphreak">http://www.ustream.tv/channel/metalphreak</a> (stream lags by about 15 seconds...)</p><p>Will stay up for the next 24hrs or until something breaks.</p><p>EDIT: Live site is now offline :) Thanks for playing.</p><p><span></span><br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6456/log/20511-internet-success">Internet Success</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/6456/log/20511#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20511"><p>Apart from the webserver crashing overnight, it seems like the live control test went well :) Thanks to those who tried it out! Ustream on my tablet stops streaming after 3 hrs so I have to keep restarting it (if you see the stream dead, try again later). </p><p><iframe width="500" height="281" src="//www.youtube.com/embed/mqp8_ROAIJY" frameborder="0" allowfullscreen=""></iframe></p></div>
                            </div>
                        </li>
                    
                </ul>

                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'uG8mpfvg-Nh9WXb-IqafElNoA0CYX-6s-Sew';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>