<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en"> <!--<![endif]-->
<head>
    <title>Details &bull; Python Powered Scientific Instrumentation tool &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
        <script type="text/javascript">
        function getCommentIdFromUrl() {
            if(window.location.hash) {
                var hash = window.location.hash.substring(1);
                var commentId = parseInt(hash.replace('j-discussion-', ''));
                if (commentId) {
                    return commentId;
                }
            }
            return null;
        }

        var commentId = getCommentIdFromUrl();
        if (commentId) {
            var url = window.location.href;
            if (url.indexOf('?') > -1) {
                url = url.substring(0, url.indexOf('?'));
            }
            if (url.indexOf('#') > -1) {
                url = url.substring(0, url.indexOf('#'));
            }
            url += '/discussion-' + commentId;
            window.location.href = url;
        }
    </script>
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body>

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fpost%2F18486">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    

        <div class="headline">
            <div class="container">
                

                    

                    <h2>Project Details</h2>
                    <p class="description-title">
                        For <a href="/project/5971">Python Powered Scientific Instrumentation tool</a>
                    </p>
                    <p class="description-summary">A multi purpose lab tool accessible by simple Python functions, and capable of studying a wide range of physical phenomena.</p>
                    <div class="description-metainfo">
                        <span>created by
                            <a href="/hacker/35701-jithin" title="Visit Profile">
                                Jithin
                            </a>
                            <span>&bull;</span>
                            3 months ago
                        </span>
                    </div>

                

            </div>
        </div>

        <div class="container post-content">
            <p><strong>Quarterfinal Video</strong></p><iframe style="width: 500px; height: 281px;" src="//www.youtube.com/embed/ErKtk99-7zY" allowfullscreen="" frameborder="0" height="281" width="500"></iframe><strong>Project logs!</strong>
<p><a target="_blank" href="https://hackaday.io/project/5971-python-powered-scientific-instrumentation-tool/log/19731-non-contact-short-range-position-sensing">Non contact, Short range position sensing. 10um resolution</a></p><p><a target="_blank" href="https://hackaday.io/project/5971-python-powered-scientific-instrumentation-tool/log/19652-amplitude-modulation-with-an-analog-multiplier">Amplitude modulation with AD633</a><br><a href="https://hackaday.io/project/5971-python-powered-scientific-instrumentation-tool/log/19731-non-contact-short-range-position-sensing"></a></p><p><a target="_blank" href="https://hackaday.io/project/5971-python-powered-scientific-instrumentation-tool/log/19637-calibrating-the-calibrator">Calibrating with a 24-bit ADC and a Keithley 2100 multimeter</a></p><p><a target="_blank" href="https://hackaday.io/project/5971-python-powered-scientific-instrumentation-tool/log/19516-add-ons-high-resolution-adcs">Developing a 24-bit ADC, 18-Bit DAC add-on</a></p><p><a target="_blank" href="https://hackaday.io/project/5971-python-powered-scientific-instrumentation-tool/log/19005-wireless-nodes">Wireless Node A</a>   .  <a target="_blank" href="https://hackaday.io/project/6490/log/20189-nrf24l01-based-wireless-nodes">Wireless Node new</a></p><p><a target="_blank" href="https://hackaday.io/project/5971-python-powered-scientific-instrumentation-tool/log/18765-incorporating-commonly-available-sensors-into-the-framework">Plug and play arduino sensors for science experiments</a></p><p><a target="_blank" href="https://hackaday.io/project/5971-python-powered-scientific-instrumentation-tool/log/18594-laser-cutting-enclosures">Designing Laser cut enclosures</a><br></p><p><a href="https://hackaday.io/project/5971-python-powered-scientific-instrumentation-tool/log/18592-prototype-5">Prototype #5</a></p><p><a href="https://hackaday.io/project/5971-python-powered-scientific-instrumentation-tool/log/18528-bandpass-filter-characterization">Bandpass filter bode plots</a></p><p><a href="https://hackaday.io/project/5971-python-powered-scientific-instrumentation-tool/log/18527-prototype-4">Prototype #4 - 555 timers, IR sensors, wavegens.</a></p><p><a href="https://hackaday.io/project/5971-python-powered-scientific-instrumentation-tool/log/18524-prototypes-23">Prototype #3</a><br></p><p><a href="https://hackaday.io/project/5971-python-powered-scientific-instrumentation-tool/log/18523-prototype-1">The very first board!</a><br></p><p>Here are a few short clips of some of the experiments carried out using this tool</p><p>A)  Measuring the forward threshold voltage of a diode, and studying the effect of temperature on the band gap.  </p><p style="margin-left: 20px;">Several IV plots were obtained and plotted along a third axis as a 3D line plot.  The diode was heated somewhere in the middle of the acquisition ( notice the inflection point ), and this added thermal energy changes the band gap, causing the threshold voltage to drop.<br></p><iframe style="width: 500px; height: 281px;" src="//www.youtube.com/embed/p_Rs9FsDnsE" allowfullscreen="" frameborder="0" height="281" width="500"></iframe><p>B)  Characterizing an active band pass filter</p><p style="margin-left: 20px;">An op-amp based multiple-feedback band pass filter was made with values calculated from simulation tools available at <a href="http://sim.okawa-denshi.jp/en/OPtazyuLowkeisan.htm">http://sim.okawa-denshi.jp/en/OPtazyuLowkeisan.htm</a> . The transfer function was experimentally determined using the device&apos;s waveform generator, oscilloscope, and curve fitting routines from scipy.</p><p style="margin-left: 20px;">*The PIC1572 based PWM waveform generators have since been replaced with a high resolution DDS, the AD9833.<br></p><iframe style="width: 500px; height: 281px;" src="//www.youtube.com/embed/5rthqWznCMI" allowfullscreen="" frameborder="0" height="281" width="500"></iframe><p>C)  Supporting a variety of SPI/I2C/UART protocols allows accomodating a variety of sensors in a plug and play fashion. A wide range of modules such as accelerometers, gyros, doppler radars, weighing sensors etc have been tested.</p><p>D)  Inexpensive wireless nodes with unique addresses can be used to implement mesh networks for data collection. The wireless nodes are configured to use 3 byte addresses, and this leaves plenty of room for multiple sensing points/parameters.</p><iframe style="width: 500px; height: 281px;" src="//www.youtube.com/embed/41Gy8BoNF8k" allowfullscreen="" frameborder="0" height="281" width="500"></iframe><p style="margin-left: 20px;">The following is a demo with the MPU-6050( accelerometer +  gyro + temperature sensor) used in the above video, except here the data transmitted back is being used to orient a 3D object in real time. IC temperature decides the object shading gradient.</p><iframe style="width: 500px; height: 281px;" src="//www.youtube.com/embed/L9gwAeMBL6I" allowfullscreen="" frameborder="0" height="281" width="500"></iframe><p>The third prototype was presented at <a href="http://Scipy.in" target="_blank">http://Scipy.in</a>, a conference on scientific python held at IIT Bombay.  The abstract can be found <a href="https://scipy.in/2014/static/uploads/jithinbp/attachment/abs.pdf">Here</a></p><p><img src="https://cdn.hackaday.io/images/7351541435299943688.png"></p><p><br></p><p><img src="https://cdn.hackaday.io/images/3762991435299954241.png"></p><p><a href="https://scipy.in/2014/static/uploads/jithinbp/attachment/abs.pdf"></a></p><p><img src="https://cdn.hackaday.io/images/3189231435299965457.png"></p><p>Several changes have been made since.</p><p><strong><span></span>System Design : Refer to the Cover photo for flow chart</strong><br></p><p>Hardware:<br></p><p>The following is a list of currently implemented features</p><ul><li>Four Channel Oscilloscope<ul><li>10-bit resolution. 1Mohm impedance. 1MSPS sampling. Selectable level triggering.</li><li>Up to 10K samples</li><li>Up to 14 different selectable inputs with various input ranges and amplifications</li><li>CH1-CH4 . +/- 16.5V down to +/-500mV .( read via 1x-32x Programmable gain amplifiers) . AC coupling available.</li><li>CH5-CH9 (0-3.3V . Up to 32x analog gain) . High impedance input of 1e13 ohms(taken from datasheet. Circuit layout may alter this value )</li><li>IN1 - Connected to Charge Time measurement Unit</li><li>5V usb supply monitoring</li><li>+9V supply output monitoring</li><li>Programmable constant current source output monitoring</li><li>Interrupt driven acquisition. Frees up device CPU for accepting additional commands and processing them based on when the oscilloscope permits. Unless the scope is running at maximum capture speed, additional measurements and control tasks can be executed. The LCR circuit response experiment is an example that uses this</li></ul></li><li> 12-bit voltage measurement with 16 sample averaging on all the above channels. Waveform capture with up to 400KSPS.</li><li>Four Channel Logic Analyzer<ul><li>Selectable inputs ID1,ID2,ID3,ID4, and CH4( internal comparator)</li><li>32-bit counters for 2-channel acquisition ( up to 67 seconds between each level change at maximum resolution. 16-bit counters for four channel acquisition (up to 1mS delay between each level change before overflow occurs during maximum resolution. Clock can be scaled down to increase this delay to 250mS</li><li>Edges to be recorded can be selected for each input. [ Falling edges, rising edges, all edges etc.]</li><li>Edge triggering via any of the inputs as well as analog input CH4 via a configurable internal comparator</li><li> Driven entirely by DMA. This essentially means that the device is free to accept other commands once the Logic Analyzer has been started. It runs in the background, independent of the CPU.</li></ul></li><li>2 x 28-bit phase correlated Sine/Triangular Waveform generators with bipolar outputs<br>
<ul><li>Based on AD9833 DDS . Allows Sine/Triangular outputs</li><li>Default input Clock of 8MHz results in about 0.03Hz resolution from 0MHz-1MHz. The Input clock can be reduced further in order to achieve higher resolution (1MHz =&gt; 0.004Hz resolution ).</li><li>12-bit control over phase difference between each</li><li>Two frequency registers per wavegen. The DDS can be instructed to switch between these two for applications such as Frequency Shift Keying(FSK).</li><li>Amplitude control via an external potentiometer (0-+/-3.3V)</li></ul></li><li>4 x Digital outputs which can also be configured as PWM outputs with phase and duty cycle control. Can also be used to control up to four servo motors.</li><li>Frequency Counter Up to 64MHz</li><li>3 x 12-bit Programmable Voltage sources with ranges 0-3.3V, +/-3.3V, +/-5V.</li><li>1 x 12-bit Programmable Constant Current source up to 3.3mA</li><li>Capacitance meter from a few PicoFarads (Using the CTMU [Constant Current Charging] ) , up to a few microFarads via constant voltage charging.</li><li>Inductance meter that uses a tank circuit with a 1nF capacitor to generate a corresponding frequency which is then measured by the frequency counter to calculate the inductance. A solenoid with a movable core can be used as a high precision position sensor here  ( resolutions &lt; 10 microns ) .</li><li>Serial Peripheral Interface (SPI)<ul><li>Full software control over frequency ( Up to 32Mhz ), and modes</li><li>8-bit / 16-bit write</li><li>2-Dedicated chip selects. Four more can be leveraged using the digital outputs</li><li>Tested with a variety of add-on boards and sensors such as MCP6S21(PGA), AD9833 (waveform generator) , NRF24L01+ ( 2MbPS digital radio with up to 5-BYTE address, auto-acknowledge and 32 byte payloads. Wireless Add-ons planned ) etc</li></ul></li><li>Inter Integrated Circuit (I2C) port<ul><li> Configurable clock frequency</li><li>Port scan </li><li>Tested with a variety of sensors such as MPU6050(accel+gyro+temp sensor), HMC5883L(magnetometer), BMP80 (Altimeter), MCP4728(12-bit DAC), SSD1306(128x64 OLED).</li></ul></li><li>Provision for ESP-12 WiFi on the circuit board .  This requires reprogramming the ESP8266, as well as disconnecting the MCP2200 USB-Serial convertor. Addditional 5V power supply must be provided either from a bench top, or a USB charger.</li><li>24-bit RGB status indicator LED with daisy chain output for driving additional WS2812 units</li><li>500mA polymer fuse to protect USB ports</li><li>High stability Voltage reference.</li><li>+/- 9V outputs for powering bipolar devices</li><li>TP4056 lithium ion charging IC</li><li>PCB pads for directly connecting the device with a raspberry pi either via its UART output, or by dedicating one of its four USB ports</li><li></li><li>The Firmware includes hardcoded functions to interface with the following sensors/hardware that can be connnected to the expansion slots<ul><li>HX711 24-bit weighing sensor - It has two fully differential channels with 32x,64x,128x Programmable gain amplifiers.</li><li>NRF24L01+ 2,4GHz radio - Capable of sending packets at speeds up to 2MbPS, with 5 byte addressing, and automatic error correction and acknowledge.  This will be instrumental in implementing wireless sensor networks</li><li>AM2302 Humidity + Temperature sensor</li><li>TCD1304 - Linear optical array with 1348 pixels, and customizable integration times</li><li>HCSR04 distance sensor</li></ul></li></ul><p>Software:</p><ul><li>Python Library. A rough draft of the Programmer&apos;s manual can be found at  <a href="http://pythonhosted.org/LabtoolSuite/interface.html">http://pythonhosted.org/LabtoolSuite/interface.html</a></li><li>Qt based GUIs for oscilloscope, logic analyzer, peripheral control, data streaming etc are part of the package.</li><li>Several GUI are being developed towards setting up a standard set of experiments for beginners.</li><li>Framework for quickly setting up dedicated GUIs . </li><li>Python takes care of third order calibration, curve-fitting, and other complex data analysis </li></ul><p><strong>What doesn&apos;t work</strong>:<br>WiFi support!   It has only been vaguely tested with a crude oscilloscope webapp made with jquery.flot , but has not been developed with the latest SDK.<br><br><strong></strong></p><p><br><strong></strong></p><p><strong>Licenses</strong><br>Python - GNU GPL compatible</p><p>Python-qt4 - GPL ( As long as everything built on top of it is also open-source )</p><p>PyQtGraph - MIT licence</p><p>iPython - BSD License</p><p>All Python based apps and software designed for this project : GPL-v3</p><p>Schematics - GPL-v3</p><p>Firmware - Closed Source Until further notice.<br><br><br><br><br></p>
        </div>

        

        

    

    <div class="j-modal-confirmation modal-background"></div>
<div class="j-modal-confirmation modal-content-holder">
    <p class="align-center" id="modal-message"></p>
    <p class="align-center"><a class="medium-button gold-gold-button delete-project-button" id="modal-yes" href="">Yes, delete it</a> <a class="medium-button grey-gold-button cancel-button" id="modal-cancel">Cancel</a> </p>
</div>
    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'hcMAZCGm-8JS-WReptVOfn7tyZHbh9ShYwi0';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_post&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    
    
    
    

    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbpIGEWjpnPaaIvcAHwzCnxb%2FHLKGUM1bvoOeG5HC0xFU9LJ%2B910rZ72abfN8vxNDn41XRsK%2BvNLzydIft0iwmMulI7CjfWKAELKuUfOMCuUWjmKstkIZy4LyUZZqGjubUq7baOpUEVdpT0W01PyzlwivRvc7EDpLluqPEa2JX%2FBw%3D%3D-0.48.6.js"></script>

</body>
</html>