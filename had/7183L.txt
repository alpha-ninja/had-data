<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; LPS Mini &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F7183%2Flogs">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/7183-lps-mini">LPS Mini</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">Indoor navigation system with small form factor. </p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/86385-gran-nordahl" title="Visit Profile">GÃ¶ran Nordahl</a><span>&bull;</span>
                
                5 days ago<span>&bull;</span><a href="/project/7183#discussion-list" title="See Comments">8 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/7183-lps-mini">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/7183/logs/sort/newest">Newest</option>
                    <option value="/project/7183/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/7183/log/22876-proof-of-concept">Proof of concept</a></h2>
                            <small class="authorship">3 days ago  &bull;
                                <a class="gray-link" href="/project/7183/log/22876#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22876"><p>Even though the data sheet may promise a device that will take you to the moon while simultaneously making tea and sing all of your favourite songs, it is always a good idea with real life tests. EVK1000 from Decawave (<a href="http://www.decawave.com/products/evk1000-evaluation-kit">http://www.decawave.com/products/evk1000-evaluation-kit</a>) was bought, put in a nice little box with a LiPo battery and with a cute green 3D-printed protective helmet for the antenna. Off we went into real life (i.e. outside our lab). We got back with big smiles! We had been to the moon and back, listened to our favourite songs while drinking tea!<span class="redactor-invisible-space"><img src="https://cdn.hackaday.io/images/3891211439635048249.jpg"></span></p><p>Next step is making a prototype board of our own using DWM1000.</p><p><img src="https://cdn.hackaday.io/images/4303141439635339388.jpg"></p><p>The reason for using DWM1000 instead of making something based on the DW1000 chip itself, is that the end result will be easier for others to replicate. No need for impedance controlled layout if making a board of your own. Just make the correct footprint and solder DWM1000 in.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/7183/log/22881-quick-and-dirty-test-with-raspberry-pi">Quick and dirty test with Raspberry Pi</a></h2>
                            <small class="authorship">3 days ago  &bull;
                                <a class="gray-link" href="/project/7183/log/22881#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22881"><p>To quickly get started with DWM1000 we soldered them in directly to Raspberry Pi using thin wires. This is a bad idea for at least four reasons:</p><ul><li>No proper ground plane under DWM1000 affecting the antenna performance.</li><li>No proper decoupling.<span class="redactor-invisible-space"><br></span></li><li><span class="redactor-invisible-space">DWM1000 is not very fond of the 5V logic levels in use by Raspberry Pi (but this we didn&apos;t know back then).</span></li><li><span class="redactor-invisible-space">Raspberry Pi do not handle interrupts very well, so we had to poll the interrupt pin --&gt; slow performance.</span></li></ul><p><span></span></p><p><img src="https://cdn.hackaday.io/images/7198341439644238549.jpg"></p><p><img src="https://cdn.hackaday.io/images/8792561439644279742.jpg"></p><p><img src="https://cdn.hackaday.io/images/8280711439650385317.JPG"></p>The result was a very unstable setup, but good enough to get us acquainted with DWM1000. It was also the first time we could setup a moving tag (on a robot vacuum cleaner) and several anchors to do triangulation</div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/7183/log/22891-first-prototype">First prototype</a></h2>
                            <small class="authorship">3 days ago  &bull;
                                <a class="gray-link" href="/project/7183/log/22891#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22891"><p>Our need is a navigation aid for mobile robots. It does not hurt if the design is so simple that others can use it without much effort. Making an Arduino compatible board was thus the obvious choice. The first attempt was more of a shield though, just to get us going. It was also a perfect excuse to try out a little cute CNC router to make PCB prototypes.</p><p><img src="https://cdn.hackaday.io/images/3201791439649271671.jpeg"></p><p><img src="https://cdn.hackaday.io/images/4927541439649377487.jpeg"></p><p><img src="https://cdn.hackaday.io/images/5068081439649415575.JPG"></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/7183/log/22893-arduino-lib-initial-long-term-tests">Arduino lib + initial long term tests</a></h2>
                            <small class="authorship">3 days ago  &bull;
                                <a class="gray-link" href="/project/7183/log/22893#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22893"><p>The development boards from Decawave use a STM32F105 ARM Cortex M3 processor. The supplied source code use floating point math and other fancy things not easily performed by a small 8 bit MCU (in our case: ATmega328P). In order to squeeze it all in we had to rewrite large portions of the code and make some simplifications, but without compromising performance. Now we got an Arduino lib to be used with our little board! There is still room for optimisation, but it is good enough for now. It will be released when it has been tidied up a bit. We are currently implementing the wisdom of Donald Knuth: &quot;Premature optimization is the root of all evil&quot;<span class="redactor-invisible-space"> :-)</span></p><p>With our first set of stable hardware prototypes it has been possible to perform long term tests without the problem of hardware crashes. Our tag asks around among all anchors it can see and reports the measured values to an external MCU (e.g. Raspberry Pi), where localisation is done. Our board is thus to be considered a navigation sensor, not a stand-alone navigator.</p><p><img src="https://cdn.hackaday.io/images/8811401439651822458.JPG"></p><br></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/7183/log/22901-radiobeacon">RadioBeacon</a></h2>
                            <small class="authorship">3 days ago  &bull;
                                <a class="gray-link" href="/project/7183/log/22901#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22901"><p>The main problem in all projects: determine a project name. The first prototype PCB did not have  a silkscreen, so no one could notice the lack of a proper name. Now it was time for a factory made PCB. Its silkscreen layer in our CAD program was screaming for describing texts in general and a project name in particula<span class="redactor-invisible-space">r</span>. After some thought we came up with RadioBeacon. Its schematic, assembly drawing a<span class="redactor-invisible-space">nd BOM can be found here: <a href="http://www.loligo.se/navigation/RadioBeacon_150308.pdf">http://www.loligo.se/navigation/RadioBeacon_150308.pdf</a></span></p><p>PCB Animation: <a href="http://www.loligo.se/navigation/RadioBeacon_150308.WMV">http://www.loligo.se/navigation/RadioBeacon_150308.WMV</a></p><p><span class="redactor-invisible-space">RadioBeacon v1.0 is not much more than an Arduino Na<span class="redactor-invisible-space">no clone with the a<span class="redactor-invisible-space">ddition of DWM1000 and a DIP switch for a<span class="redactor-invisible-space">ddress setting and configuration. In order to save va<span class="redactor-invisible-space">lua<span class="redactor-invisible-space"></span></span></span></span></span></span>ble I/O pins the DIP switch is arra<span class="redactor-invisible-space">nged in two nibbles to be <span class="redactor-invisible-space">rea<span class="redactor-invisible-space">d out a<span class="redactor-invisible-space">s two a<span class="redactor-invisible-space">na<span class="redactor-invisible-space">log volta<span class="redactor-invisible-space">ges, saving 6 digital I/O.</span></span></span></span></span></span></span></p><p><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><img src="https://cdn.hackaday.io/images/2464301439655548693.jpg"><span class="redactor-invisible-space">This is how the hand assembled RadioBeacon v1.0 boards turned out:<br></span></span></span></span></span></span></span></span></p><p><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><img src="https://cdn.hackaday.io/images/231351439655661023.jpg"><span class="redactor-invisible-space"><img src="https://cdn.hackaday.io/images/8923331439655775550.jpg"><span class="redactor-invisible-space"><img src="https://cdn.hackaday.io/images/1647381439655807708.jpg"></span></span></span></span></span></span></span></span></span></span></p><p><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space">After running them for a while we noticed that DWM1000 got warmer than expected. That is how we figured out it does not like 5V I/O... (we misinterpreted the data sheets a bit). Nonetheless, RadioBeacon 1.0 worked well and provided us with many important lessons.</span></span></span></span></span></span></span></span></span></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/7183/log/22903-lps">LPS</a></h2>
                            <small class="authorship">3 days ago  &bull;
                                <a class="gray-link" href="/project/7183/log/22903#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22903"><p>After some thought the project name RadioBeacon was dumped for Local Positioning System - LPS. Lessons learned with RadioBeacon v1.0 was implemented in LPS v1.1:<br></p><ul><li>No PCB under the DWM1000 antenna.</li><li>Need for a slightly wider PCB to get better antenna performance.</li><li>Need for level shift between the 5V I/O in use by ATmega328P and the 3.3V preferred by DWM1000.</li><li>Added an accelerometer to enable deep sleep modes for tags not being in motion to save power.</li></ul><p>The updated schematic, assembly drawing and BOM:</p><p><a rel="nofollow" target="_blank" href="http://www.loligo.se/navigation/LPS_v1.1_150409.pdf">http://www.loligo.se/navigation/LPS_v1.1_150409.pdf</a></p><p>PCB animation:<br><a rel="nofollow" target="_blank" href="http://www.loligo.se/navigation/LPS_v1.1.WMV">http://www.loligo.se/navigation/LPS_v1.1.WMV</a></p><p><span></span></p><p><img src="https://cdn.hackaday.io/images/1724631439656989041.jpg"></p><p><img src="https://cdn.hackaday.io/images/9473041439657045869.jpg"></p><p><img src="https://cdn.hackaday.io/images/7194781439657136250.jpg"></p><br><br></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/7183/log/22905-analog-dip-nibble-values">Analog DIP nibble values</a></h2>
                            <small class="authorship">3 days ago  &bull;
                                <a class="gray-link" href="/project/7183/log/22905#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22905"><p>Good old Ohm&apos;s law is still valid! This is how the analog DIP nibble values turned out in reality (ADC readings taken from six boards):</p><p><img src="https://cdn.hackaday.io/images/5918411439657726855.png"></p><p>Very consistent and not far from the values predicted by theory :-)</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/7183/log/22923-thermal-drift-crosstalk-and-other-problems">Thermal drift, crosstalk and other problems</a></h2>
                            <small class="authorship">2 days ago  &bull;
                                <a class="gray-link" href="/project/7183/log/22923#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22923"><p>We have had our prototype boards up and running since February 2015. During this time we have noticed a few problems, or let us call them features:</p><ul><li>Thermal drift: DWM1000 does not have a TCXO. Depending on surrounding temperature and update rate (i.e. self heating due to radio usage), the measured distance can drift 3-5 cm before thermal equilibrium has been reached. This process can be as slow as half an hour or more.</li><li>Crosstalk: This is a problem purely due to our own way of handling multiple tags. If tags get out of sync they will cause crosstalk with a random measurement error as result. Our initial remedy was taking a median value from several measurements and hope for the best. After introducing strict time alternation between tags the problem disappeared.<span class="redactor-invisible-space"><br></span></li><li><span class="redactor-invisible-space">Reflections: DWM1000 can not be mounted in contact with a wall. The reflection will be so close to the desired LOS-signal that DWM1000 can not distinguish between the two. Reported distance will thus randomly jump between two distinct values.<span class="redactor-invisible-space"><br></span></span></li><li>Bootloader: If using optiboot everything is just fine. In other cases we have encountered problems with the watchdog not barking properly.</li></ul></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/7183/log/22935-radiobeacon-v10-lps-v11-lps-mini-v10">RadioBeacon v1.0 --&gt; LPS v1.1 --&gt; LPS Mini v1.0</a></h2>
                            <small class="authorship">2 days ago  &bull;
                                <a class="gray-link" href="/project/7183/log/22935#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22935"><p>By stripping down LPS v1.1 to a minimum, adding more advanced sensors (accelerometer, gyro, magnetometer and altimeter instead of just an accelerometer) and a LiPo charger, LPS Mini was born! It is hard making a much smaller board without compromising antenna performance. A nice little feature is that the entire board fits in a board edge connector making it possible to access all the I/O present on LPS v1.1 and ordinary Arduino Nano!</p><p>Schematic, assembly drawing and BOM:</p><p><a href="http://www.loligo.se/navigation/LPS_mini_v1.0_150423.pdf">http://www.loligo.se/navigation/LPS_mini_v1.0_150423.pdf</a></p><p>PCB animation:</p><p><a href="http://www.loligo.se/navigation/LPS_mini_v1.0.WMV">http://www.loligo.se/navigation/LPS_mini_v1.0.WMV</a></p><p>Step by step transformation from LPS to LPS Mini:</p><p><a href="http://www.loligo.se/LPS_mini/">http://www.loligo.se/LPS_mini/</a></p><p>The two pictures below depict the development steps from RadioBeacon v1.0 via LPS v1.1 to LPS Mini v1.0:</p><p><img src="https://cdn.hackaday.io/images/4588151439674390386.jpg"></p><p><img src="https://cdn.hackaday.io/images/6944201439674416127.jpg"></p>With help of the sensors in LPS Mini, inertial navigation can be done to improve performance. But again, the processing power of ATmega328P is not enough to do that job all by itself. Data must be sent either via UART/I2C or radio (piggyback data on measurement data packages) to an external CPU to do triangulation etc. In our case we use Raspberry Pi for all superior tasks and it works very well! An added benefit is the ability to do firmware upgrades from Raspberry Pi using the LPS boot loader.<span></span><p>LPS and LPS Mini are compatible. LPS boards can use LPS Mini as anchor/tag and the other way around. Except a different set of sensors the main difference is that LPS use 5V I/O level and runs at 16 MHz, while LPS Mini got 3.3V I/O and runs at 8 MHz.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/7183/log/22937-lps-mini-adaptor">LPS Mini Adaptor</a></h2>
                            <small class="authorship">2 days ago  &bull;
                                <a class="gray-link" href="/project/7183/log/22937#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22937"><p>We have made an adaptor for LPS Mini to give very easy access to all I/O, UART, ISP and power pins. The adaptor act as a bridge between TE Connectivity 5650712-1 (holds LPS Mini) and the standard Arduino Nano footprint. In most cases the adaptor is of no use except during test and debug. If all I/O is needed on a permanent basis, LPS might be a better choice than LPS Mini. The UART connector mates with FTDI USB TTL Serial Cable TTL-232R-3V3. The ISP connector mates with the standard AVR ISP 6-pin header.<span class="redactor-invisible-space"></span></p><p><img src="https://cdn.hackaday.io/images/2226181439675529952.jpg"></p></div>
                            </div>
                        </li>
                    
                </ul>

                
                <div class="pagination">
                    
                    
                    <a href="?page=2" class="grey-gold-button next-button show">Next</a>
                    
                </div>
                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'GzcLM57k--J-AKPNIFZt0zoyeyd1UekMi3Tw';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>