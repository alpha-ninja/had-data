<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en"> <!--<![endif]-->
<head>
    <title>Details &bull; Dual Channel Battery Charger/Analyzer &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
        <script type="text/javascript">
        function getCommentIdFromUrl() {
            if(window.location.hash) {
                var hash = window.location.hash.substring(1);
                var commentId = parseInt(hash.replace('j-discussion-', ''));
                if (commentId) {
                    return commentId;
                }
            }
            return null;
        }

        var commentId = getCommentIdFromUrl();
        if (commentId) {
            var url = window.location.href;
            if (url.indexOf('?') > -1) {
                url = url.substring(0, url.indexOf('?'));
            }
            if (url.indexOf('#') > -1) {
                url = url.substring(0, url.indexOf('#'));
            }
            url += '/discussion-' + commentId;
            window.location.href = url;
        }
    </script>
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body>

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fpost%2F15785">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    

        <div class="headline">
            <div class="container">
                

                    

                    <h2>Project Details</h2>
                    <p class="description-title">
                        For <a href="/project/4993">Dual Channel Battery Charger/Analyzer</a>
                    </p>
                    <p class="description-summary">This is an efficient dual channel battery charger/analyzer for maintaining rechargeable batteries with programmable parameters and logging.</p>
                    <div class="description-metainfo">
                        <span>created by
                            <a href="/hacker/10708-kc-lee" title="Visit Profile">
                                K.C. Lee
                            </a>
                            <span>&bull;</span>
                            5 months ago
                        </span>
                    </div>

                

            </div>
        </div>

        <div class="container post-content">
            <h2>What is it?</h2><p>It is a battery charger/analyzer.  It is not going to save the world from an alien invasion or cure cancer or something equally noble. It&apos;ll let you charge, maintain, and test the discharge characteristics of rechargeable batteries.  It is a nice tool for re-purposing or evaluating cheap batteries of unknown capacity/performance as . It helps to save you money in the long run by not throw away otherwise usable batteries.</p><p>Whenever the topic of electronic load is brought up on HaD articles,  testing batteries come up quite often as one of the main applications.<br></p><h2>What does it do that similar design doesn&apos;t?</h2><p>What set this charger design different are:<br></p><ul><li>Flexible power source - two independent buck/boost converters allow higher/lower than input voltage. So you could be charging  batteries from USB, vehicle power or green power source such as unregulated power from small solar power panel/wind power etc.</li><li>High switching frequency beyond traditional uC PWM type of design can offer. This allows for the use of much smaller components and also reduces input/output ripple current.</li><li>During discharge mode, the switch mode converter works to draw power away from the battery.  The power can be diverted to external use. e.g. charging a Super capacitor bank, light. etc.  </li><li>Scalable design for additional channels and/or higher power.</li></ul><h2>Functional Blocks</h2><p>The following is the block diagram.  This is essentially a programmable power supply during charging and an electronic load during discharging.  The firmware also implements the charging/discharging algorithms for the supported battery types and display/communicate with the Window<span class="redactor-invisible-space"> PC charger software.</span></p><p><img src="https://cdn.hackaday.io/images/4539631428205407058.png"></p><h2>Charging Mode</h2><p>In charging mode, the input power is routed into a <a href="http://en.wikipedia.org/wiki/Single-ended_primary-inductor_converter">SEPIC converter</a> and the output is used to charge the battery.  The input voltage can be higher/lower than the output and the output is DC blocked.  The voltage/current is monitor by the microcontroller and controlled by means of PWM duty cycle.  The microcontroller uses a charge algorithm that is tailored for the battery chemistry and capacity.  The parameters for a supported battery type can be edited and saved by the end user on a computer.</p><h2>Discharge Mode</h2><p><strong></strong>In the discharging mode, the input power is routed from the battery via the converter into an external load. By monitoring the voltage, current over time, the battery capacity and characteristics can be analyzed. The discharge is also controlled by user defined parameters.</p><p>The same changing circuit can be used for discharging by simply rearranging the input and output.  The external load can be a large battery, a super capacitor bank etc or a simple resistive load.   The two channels can share the same load output. The discharge can work all the way down to below 1 volt as  SEPIC converters boost the battery voltage up. </p><p>By keeping the dissipation outside the unit, I have reduced the cooling requirements. This also improves on the accuracy due to components temperature coefficients. There are commercial RC Battery Analyzer designs  that use a MOSFET as a resistive load which limits their discharge capacity.</p><p>The microcontroller has native USB hardware and raw data can be streamed to a PC for logging/plotting purposes.  The unit can operate in a stand alone mode or connected to PC.  There is bidirectional communication between the unit and the PC, so unit can be controlled from either side. (See <a href="https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/20749-you-are-only-human-human-interface">here</a>)</p><h2>PWM</h2><p>This is the part that is done very differently than most microcontroller based chargers.  I use <a href="http://homepages.which.net/~paul.hills/Circuits/PwmGenerators/PwmGenerators.html">Analog PWM</a> for the SEPIC converters in my design.  This is why the SEPIC operates at 200kHz instead of the much lower tens of kHz that most common digital PWM design seems to use.  This means the the components do not need to store a lot of energy until the next period arrives.  Smaller and cheaper (because less material) inductors/capacitors can be used and you&apos;ll also get smaller ripples.  </p><p>By lowering the peak ripple current, you lower the amount of I^2*R losses.  When the frequency is too high, the switching losses come into play.  In general, the lower few hundreds kHz is a good compromise between these two type of losses.  You can minimize the switching losses by using a MOSFET driver that can charge/discharging the MOSFET gate charges quickly thus minimizing the amount of time the MOSFET is spent in the linear region.  The MOSFET driver selection is covered in Microchip appnote: <a href="http://ww1.microchip.com/downloads/en/AppNotes/00799b.pdf">Matching MOSFET Drivers to MOSFETs (AN799)</a></p><p><span></span>Digital PWM is a poor imitation of Analog one. The Digital <a href="https://en.wikipedia.org/wiki/Pulse-width_modulation">PWM</a> peripheral on a microcontroller is essentially a counter (simulating the Triangular wave generator) with comparator registers (analog comparator) that are used to toggle output signals when the counter matches these set values values.  Because of the very limited in clock speed, there is a trade off between the PWM resolution and the PWM frequency.  When you increase one, you lose the other.  That is a fact of life for the digital counter dealing with discrete values.</p><p>For a high efficiency charger, both PWM resolution and frequency needs to be high at the same time.  To minimize the component sizes/cost and ripple current, high frequency PWM is needed.  With a low resolution, the PID loops ended up toggling between two PWM values (with large step in between) and introducing its own ripple over the time.  This is undesirable as it interferes with end of charge detection.</p><p><img src="http://homepages.which.net/~paul.hills/Circuits/PwmGenerators/Figure15.gif">The waveform doesn&apos;t need to be a triangular wave.  As long as the reference waveform has a linear slope, it is fine.  I used a <a href="https://en.wikipedia.org/wiki/Sawtooth_wave">Saw tooth waveform</a> generator.  On the prototype, this was implemented on a 555 timer with a constant current source for charging the capacitor to generate a linear ramp.  I have changed the circuit to <a href="https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/18116-sawtooth-generator">a comparator design</a> for cost reduction.</p><p>The math for the charging of a <a href="https://en.wikipedia.org/wiki/Capacitance">capacitor</a>:</p><p>Q=C*V.   So i*dt = C*dV for small delta t.</p><p>This can be expressed as dV/dt = i/C.  If you keep i constant with a constant current source, you get a voltage waveform with a constant slope i.e. a ramp.</p><p>Above a certain threshold level, the capacitor is discharged and the ramp is reset again. On a digital PWM, the counter value get reset when it reach TOP or overflow.  Both of these forms a saw tooth waveform. </p><p>The DC level control signal can be from a DAC or rather ironically from a PWM.  I used the latter as  digital PWM is common among low cost microcontroller.  Since the charger do not need to change the duty cycle rapidly, a high resolution (with low frequency) digital PWM is okay. The analog sawtooth waveform has infinite resolution. The PWM resolution is only limited by the DC signal for setting the output duty cycle.<span class="redactor-invisible-space"> The Analog PWM frequency is set independently by the sawtooth generator and thus not limited by the digital PWM resolution. This is how I have achieved both in my design.</span></p><p> The digital PWM is filter by <a href="https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/16159-pwm-part-1">low pass filter</a> and used as a DC reference signal for the comparator.  The low pass filter is below the PWM frequency and to remove switching frequency content.  I have improved on the settling time of the low pass filter by increasing the the order of the filter to allow for faster updates.</p><h2>Li Battery Charging (CC/CV)</h2><p>The following picture shows the different phrases of charging a Li type battery.  Reference:  TI&apos;s BQ24050 Battery Charger IC<span class="redactor-invisible-space">  <a href="http://www.ti.com/lit/ds/symlink/bq24050.pdf">Datasheet</a></span></p><p><img src="https://cdn.hackaday.io/images/7384091438537794995.png"></p><p><span></span>The following shows the charge parameter for a LiFePO battery.  These parameter can be edited and save as a charge profile.<br></p><p><img src="https://cdn.hackaday.io/images/2699211436484344317.jpg"></p><p><strong>Precharge</strong></p><p>When a Li battery has been over discharged, a small charge current is used for reviving it.  See <a href="http://batteryuniversity.com/learn/article/bu_502a_over_discharging_lithium_ion">here</a> for more info on the issues. <br>The Precharge parameter sets the upper threshold voltage that the battery must reach before it is allowed to charge normally and the current for charging.  <br></p><p><strong>Charge</strong><br>There are two steps involved for a standard charge cycle</p><p style="margin-left: 20px;"><strong>Constant Current</strong><br>The battery is charged with a constant current until it reaches the established voltage threshold.<br><strong>Constant Voltage</strong><br>Once that voltage threshold has been reached, it switches over to the constant voltage mode.  When the current drops below a threshold (say 5%)  of the charge current, then the charging cycle has been completed.<br><span class="redactor-invisible-space"></span></p><p><strong>Top up</strong><br>The top up phases has been added to keep battery near full charge while it sits idle at the charger.  This is not recommended for long term as it would affect battery life.  For Li type of battery, keeping it at full charge can be stressful for the battery, so I only try to top up the battery only when its voltage drops below a threshold.<span class="redactor-invisible-space"></span></p><h2>Lead Acid Battery Charging (CC/CV)</h2><p>A Lead Acid battery can be charged using the same algorithm.  It just needs a different different set of parameters for the different thresholds.</p><p>The algorithm that I have implemented for the Li type is know is referred as a &quot;Two-Step Current Algorithm&quot; in TI&apos;s <a href="http://www.ti.com/product/bq2031?keyMatch=bq2031&amp;tisearch=Search-EN-Everything">bq2431 Switch-mode Lead-Acid Battery Charger</a> </p><p><img src="https://cdn.hackaday.io/images/3897081438541080000.png"></p><p>Note: I have used their <a href="http://www.ti.com/product/uc2906?keyMatch=uc2906&amp;tisearch=Search-EN-Everything">UC2906 Linear Lead-Acid Battery Charger</a> in my UPS project for <a href="https://hackaday.io/project/5741-emergency-backup-power-and-wallwarts-eliminator/log/17728-battery-charger-part-1">charging lead acid battery</a> using a &quot;Two-Step Voltage Algorithm&quot;. The two algorithm only differs in constant current vs constant current mode in maintaining the charge.<br></p><h2>NiMH Battery Charging</h2><p>The traditional charge termination relies on dV detection and it requires monitoring the battery voltage for 1-5mV per cell while charging at 1/2C to 1C.  The combination of high current, low voltage change and a switch mode design make it difficult.  Version 2.0 of the design uses the ADC on the AVR which only has 10-bit resolution.  I used oversampling to increase the resolution, but that was not enough for detecting the small changes.  Further more the previous version of the design was limited to 750mA, so it cannot even reach the minimum 1/2C charging current for using the dV algorithm for high capacity NiMH AA battery.  </p><p>I have increased the current in the new design.  I have also upgraded the ADC to 12-bit resolution<span class="redactor-invisible-space"></span> by switching over to the more capable but cheaper SiLabs Universal Bee EFM8UB10 series.  In the rev. 2.1, I have managed to locate the capacitors very close to the uC.  This should improve the accuracy and noise immunity.  The capacitor placement on one of the voltage channels was found to be a cause of noisy reading.</p><p><img src="https://cdn.hackaday.io/images/5449121438544379395.png" width="453" height="477" style="width: 453px; height: 477px;"></p><p>Note: For sizing: Microcontroller is 5mmx5mm and the capacitors are 0603 parts.</p><p>The limited resolution (i.e. <a href="https://en.wikipedia.org/wiki/Effective_number_of_bits">Effective Number of Bits</a>) of this design might still not be enough to resolve the battery voltage.  There is an alternative but more complicated charging algorithm &quot;inflection termination method&quot; described at Paul Allen&apos;s UltraSmartCharger Forum <a href="http://www.ultrasmartcharger.com/phpBB3/viewtopic.php?f=3&amp;t=5">here</a>.  Basically it looks at the rate of change of the battery voltage (over time) and terminate when the rate starts to slow down.  The rate is calculated over time and does not require on minute voltage changes between sample. Filtering can be also applied to make it less sensitive to noisy data.</p><p><img src="http://www.ultrasmartcharger.com/images/TerminationMethods.png" width="673" height="393" style="width: 673px; height: 393px;"></p><p>I intend to examine it and see if I can make use of it.</p><hr><h2>Design Activities - Project Log TOC <br></h2><ul><li>Project history: <a href="https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/15788-history-lesson">https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/15788-history-lesson</a></li><li>Cost reduction/selection/redesigns<ul><li>Part 1: Microcontroller Selection<br><a href="https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/16087-nickle-dime-part-1">https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/16087-nickle-dime-part-1</a><span class="redactor-invisible-space"></span></li><li>Microcontroller development environment<br><a href="https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/17299-to-bee-or-not-to-bee">https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/17299-to-bee-or-not-to-bee</a></li><li><span class="redactor-invisible-space">Part 2: Current sensing - From opamps to plain resistors<br><a href="https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/16095-nickle-dime-part-2">https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/16095-nickle-dime-part-2</a><span class="redactor-invisible-space"><br></span></span></li><li><span class="redactor-invisible-space"><span class="redactor-invisible-space">Power components selection - MOSFET, MOSFET gate drivers, Inductor<br><a href="https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/16890-power-components-more-nickel-dime-time">https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/16890-power-components-more-nickel-dime-time</a><span class="redactor-invisible-space"></span></span></span></li><li><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space">Sawtooth wave generator design<br><a href="https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/18116-sawtooth-generator">https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/18116-sawtooth-generator</a><span class="redactor-invisible-space"><br></span></span></span></span></li><li><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space">Cheaper LCD not cheaper<br><a href="https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/21932-i-am-altering-the-deal-pray-i-dont-alter-it-any-further">https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/21932-i-am-altering-the-deal-pray-i-dont-alter-it-any-further</a><span class="redactor-invisible-space"><br></span></span></span></span></span></li></ul></li><li>PWM
<ul><li>Analog filter<br><a href="https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/16159-pwm-part-1">https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/16159-pwm-part-1</a></li></ul></li><li>Dummy Load
<ul><li>A cheap alternative to power resistors using MOSFET<br><a href="https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/21159-dummy-load-for-dummies">https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/21159-dummy-load-for-dummies</a></li></ul></li><li>Power supply for the control circuits
<ul><li>Quick prototype/testing<br><a href="https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/21302-we-need-bigger-inductors">https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/21302-we-need-bigger-inductors</a></li></ul></li><li>Layout
<ul><li>Power Circuits<br><a href="https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/16821-power-circuits-layout">https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/16821-power-circuits-layout</a></li><li>What is the limits of Chinese Proto PCB fab and home assembly?<br><a href="https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/17291-keeping-up-with-the-times-prototyping-with-qfn-and-bga">https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/17291-keeping-up-with-the-times-prototyping-with-qfn-and-bga</a><span class="redactor-invisible-space"><br></span></li><li><span class="redactor-invisible-space">PCB evolution and physical design<br><a href="https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/19303-a-tale-of-the-two-designs">https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/19303-a-tale-of-the-two-designs</a><span class="redactor-invisible-space"><br></span></span></li></ul><ul><li>PCB shipping/tracking<br><a href="https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/21663-where-is-waldo-pcb-status">https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/21663-where-is-waldo-pcb-status</a><span class="redactor-invisible-space"></span></li></ul></li><li>User Interface demo
<ul><li><a href="https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/20749-you-are-only-human-human-interface">https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/20749-you-are-only-human-human-interface</a><br>Short Video:<br><a href="https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/20749-you-are-only-human-human-interface">https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/20749-you-are-only-human-human-interface</a><span class="redactor-invisible-space"></span></li></ul></li><li>Misc:<ul><li>URL for getting a free PID/VID for USB:<br><a href="https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/16054-url-get-pid">https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/16054-url-get-pid</a></li></ul></li><li>Progress<br>
<ul><li>Rev 2.1 PCB Layout has been completed on 23rd July, PCB package has been sitting at customs since 4th Aug.  No sign that it will be release any time soon as the Vancouver customs are very slow and there are horror stories of 3 weeks or even longer.  I&apos;ll talk to the supplier when their expected shipping date ends if it still sit at customs to see if they would at least give me a partial refund of the shipping cost.  I have &quot;free shipping&quot; untracked package arriving in 3 weeks, so this is getting out of hand.<br><a href="https://hackaday.io/project/4993/log/21663-where-is-waldo-pcb-status">https://hackaday.io/project/4993/log/21663-where-is-waldo-pcb-status</a></li><li>Rev 2.0 firmware has been compiled on the SiLabs tools.  I have not tested it yet.  The starter board could be used as a test platform.  I have also made breakout PCB for this part previously as a board filer.  (Well worth the extra few hours for those.)</li><li>New SEPIC supply for the control circuit has been tested and new inductors have arrived.  The rest of the new designs have either been simulated with LTSpice or are value changes.<br><a href="https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/21302-we-need-bigger-inductors">https://hackaday.io/project/4993-dual-channel-battery-chargeranalyzer/log/21302-we-need-bigger-inductors</a></li></ul></li><li>Youtube video<br><iframe width="500" height="281" src="//www.youtube.com/embed/ZA3au007xHo" frameborder="0" allowfullscreen=""></iframe></li></ul><hr><h2>Licenses:</h2><ul><li>Hardware:
<ul><li>Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International</li><li>Please contact me for commercial licensing.  My Eagle CAD license does not permit commercial use.</li></ul></li><li>3D modelling:<ul><li>My models: Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International</li><li>Models from 3dcontentcentral: <a href="http://www.3dcontentcentral.net/3DContentCentral/Terms-of-use.aspx">http://www.3dcontentcentral.net/3DContentCentral/Terms-of-use.aspx</a></li><li><a href="http://www.3dcontentcentral.net/3DContentCentral/Terms-of-use.aspx"></a><span class="redactor-invisible-space">Models from EagleUp: <a href="https://eagleup.wordpress.com/f-a-q/">https://eagleup.wordpress.com/f-a-q/</a><span class="redactor-invisible-space"></span></span></li></ul></li><li>Firmware: <ul><li>My code: Mozilla Public License (very likely) </li><li>SiLabs Compiler/Environment generated code<br><a href="http://www.silabs.com/products/mcu/Pages/simplicity-studio.aspx">http://www.silabs.com/products/mcu/Pages/simplicity-studio.aspx</a></li><li>Being considered: Paul Allen&apos;s UltraSmartCharger NiMH &quot;inflection termination method&quot;.<ul><li>If I am porting code, it will be localized and a compatible license will be used. </li><li>If I code it from scratch base on description alone, then it falls under &quot;my code&quot;.</li></ul></li></ul></li></ul><ul><li>PC Host Software:<ul><li>My code: ???</li><li>Pelles C Compiler/Environment<span class="redactor-invisible-space"> generated code<br><a href="http://www.smorgasbordet.com/pellesc/">http://www.smorgasbordet.com/pellesc/</a><br></span></li><li><span class="redactor-invisible-space">libusb-win32<span class="redactor-invisible-space">: LGPL<span class="redactor-invisible-space"> Usage: linked as unmodified linked library. <br> <a href="http://sourceforge.net/p/libusb-win32/wiki/Home/">http://sourceforge.net/p/libusb-win32/wiki/Home/</a></span><br></span></span></li><li><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space">Being considered: </span></span></span><ul><li>Paul Allen&apos;s UltraSmartCharger Manager<span class="redactor-invisible-space">: License not stated.  It&apos;ll be used as is for monitoring only. <br></span><a href="http://www.ultrasmartcharger.com/phpBB3/viewtopic.php?f=3&amp;t=68">http://www.ultrasmartcharger.com/phpBB3/viewtopic.php?f=3&amp;t=68</a></li></ul></li></ul></li></ul><p><span class="redactor-invisible-space"></span></p>
        </div>

        

        

    

    <div class="j-modal-confirmation modal-background"></div>
<div class="j-modal-confirmation modal-content-holder">
    <p class="align-center" id="modal-message"></p>
    <p class="align-center"><a class="medium-button gold-gold-button delete-project-button" id="modal-yes" href="">Yes, delete it</a> <a class="medium-button grey-gold-button cancel-button" id="modal-cancel">Cancel</a> </p>
</div>
    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = '6SyZgxba-5WRwQSU_PRfYI9nRJYZvsn8VVYA';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_post&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    
    
    
    

    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbpIGEWjpnPaaIvcAHwzCnxb%2FHLKGUM1bvoOeG5HC0xFU9LJ%2B910rZ72abfN8vxNDn41XRsK%2BvNLzydIft0iwmMulI7CjfWKAELKuUfOMCuUWjmKstkIZy4LyUZZqGjubUq7baOpUEVdpT0W01PyzlwivRvc7EDpLluqPEa2JX%2FBw%3D%3D-0.48.6.js"></script>

</body>
</html>