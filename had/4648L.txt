<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; analog.io &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F4648%2Flogs">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/4648-analogio">analog.io</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">A full stack project dedicated to easily collecting, analyzing and sharing IoT sensor data.</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/46306-luke-beno" title="Visit Profile">Luke Beno</a><span>&bull;</span>
                
                5 months ago<span>&bull;</span><a href="/project/4648#discussion-list" title="See Comments">2 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/4648-analogio">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/4648/logs/sort/newest">Newest</option>
                    <option value="/project/4648/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/4648/log/23335-analogio-web-application">analog.io web application</a></h2>
                            <small class="authorship">16 hours ago  &bull;
                                <a class="gray-link" href="/project/4648/log/23335#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23335"><p>I&apos;m happy to say that the analog.io web application has been successfully deployed to our servers at Digital Ocean!  The site also uses ssl encryption for some added security.</p><p>The web application is developed using multiple web technologies, at the base Postgres is used as the database and a Ruby on Rails backend connects to this database.  When users are not logged into the site, all pages are served directly from rails however once you create an account and log in, a AngularJS fronted is run directly in the browser and makes JSON REST API called to the backend.</p><p>Using AngularJS has a lot of advantages, it really gives a responsive feel to the website and the framework takes care of many of the low level actions that an application requires.  Things like button listeners, messaging, data scoping, API management even rendering the HTML templates for the site.  This not only improves user experience but also reduces overhead on the server so that more people can be served by less hardware.</p><p>The basic functionality is that when the user logs in, they are greeted with this screen:</p><p><img src="https://cdn.hackaday.io/images/3829911439818609133.png"></p><p>Then if you have an existing data.sparkfun.com stream, you can import it into the tool by clicking &quot;Import Stream&quot; and then entering the public key from Sparkfun.  After clicking OK, analog.io will automatically.</p><p><img src="https://cdn.hackaday.io/images/2147091439819204346.png"></p><p>Besides importing streams, analog.io also allows you to look for other peoples data streams.    It is also location aware so it can show where various streams are located using google maps.  Here are are all of the streams created by analog.io users in the US:</p><p><img src="https://cdn.hackaday.io/images/3978271439819548773.png"></p><p>You may also search by category, for example, there are over 16 streams at analog.io that are currently measuring temperature:</p><p><img src="https://cdn.hackaday.io/images/8747211439819630985.png"></p><p>That should be enough for the first update but there are plenty more features as well.  Right now there are 308 people who have signed up for analog.io accounts and the number grows each day.  There is also data from 25 countries!</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4648/log/23339-measuring-the-temp-and-humidity-of-beehives">Measuring the Temp and Humidity of Beehives</a></h2>
                            <small class="authorship">15 hours ago  &bull;
                                <a class="gray-link" href="/project/4648/log/23339#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23339"><p>One of the main reasons that I started analog.io was because I had an interest in using internet connected sensors to measure various sensors inside of bee hives.  The first thing that I wanted to do was measure the Temperature and Humidity of a set of Bee Hives in Wisconsin over the winter.</p><p>There are quite a few challenges associated with this:</p><p><img src="https://cdn.hackaday.io/images/563101439820159202.png"></p><p>So for the first iteration, it was clear that I needed to create my own wireless temp &amp; humidity sensor and it also needed to get at least 260ft+ of range.  It also needed to survive the attenuation of the hive and house and be low enough power to survive the winter without charging or power.  Here&apos;s what I came up with:</p><p><img src="https://cdn.hackaday.io/images/482791439820369999.png"></p><p>(ignore the imp.guru logo, this was the name of the web application prior to me acquiring analog.io)</p><p><img src="https://cdn.hackaday.io/images/3274181439820436502.png"></p><p>So these were the sensors, I then needed something to connect these to the internet.  For this I created a 915MHz radio to WiFi bridge which I simply call &quot;The Hub&quot;.  It has a LNA/PA front end, then uses an Electric Imp to bridge the packets over to WiFi.  From there, I wrote some Electric Imp Agent code to upload the data to analog.io.</p><p><img src="https://cdn.hackaday.io/images/395571439820599181.png"></p><p>With all of the hardware setup, I did some range tests and found that I could get great range with the radios (about 300ft) but unfortunately as soon as they were installed into the hives, the attenuation was pretty bad, reducing my range to only 100 ft.  With winter closing in, I did this installation:</p><p><img src="https://cdn.hackaday.io/images/3644811439820783608.png"></p><p> So I&apos;m happy to say that this setup worked almost continuously for 5 month, and captured some pretty cool data:</p><p><img src="https://cdn.hackaday.io/images/6741611439820870735.png"></p><p>It is amazing to think that the temperature inside of a bee hive can be 77 deg F while the outdoor temp is negative 6!  It is also amazing to me that all of my hub hardware survived the bitter cold and is still running today.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4648/log/23345-measuring-the-weight-of-beehives">Measuring the Weight of Beehives</a></h2>
                            <small class="authorship">15 hours ago  &bull;
                                <a class="gray-link" href="/project/4648/log/23345#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23345"><p>Based on my work from last winter and other awesome work that the community has done.  Some if it even documented right here on hackaday.io, I decided to add weight measurement to my setup.  For now due to cost it only encompasses one hive but I already have plans to add more!</p><p>The build is pretty straight forwards, the first step is that I purchased <a href="http://www.amazon.com/Accuteck-Digital-Industry-Shipping-ACB440/dp/B00LPUZP1I/ref=sr_1_1?ie=UTF8&amp;qid=1439821240&amp;sr=8-1&amp;keywords=accuteck+440+lbs">this scale from Amazon</a>:</p><p><img src="https://cdn.hackaday.io/images/7680971439821286436.png"></p><p>Upon receiving the scale, I started running some experiments and naturally taking it apart, here is an internal photo:</p><p><img src="https://cdn.hackaday.io/images/9424341439821470235.png"></p><p>There&apos;s really not much to it, just some strain gauges and wires.  What I liked about this one is that it had some very nice readout electronics that were external to the scale so I could simply cut the wire, add a connector and swap out my custom electronics with the &quot;gold standard&quot; any time that I wanted to.  This proved to be very useful during calibration.</p><p>For the strain gage ADC, I selected HX711, this is a very popular device because it is easy to use and really just works! </p><p><img src="https://cdn.hackaday.io/images/6878721439822593906.png"></p><p>Using nearly all of the same wireless hardware as I used for my Temp and Humidity project, I used the spare IO on the droplet to interface to the HX711.</p><p><img src="https://cdn.hackaday.io/images/3602131439822687369.png"></p><p>Because the size constraints on this device were less and power consumption of HX711 is higher, I decided to power it from two AA batteries.  You can also see the waterproof enclosure that I am using.</p><p>Luckily because this radio is outside of the hive, I can also now get full range WITHOUT the need to the AC extension cord and hub in the woods.  Now the hub can sit comfortably indoors.</p><p>Here&apos;s some pictures of the installation of the scale into the hive:</p><p><img src="https://cdn.hackaday.io/images/8325081439823013421.png"></p><p><img src="https://cdn.hackaday.io/images/892451439823045694.png"></p><img src="https://cdn.hackaday.io/images/4708171439823087765.png"><p>In the end, you really cant even tell that it is there!</p><p>So here&apos;s the data:</p><p><img src="https://cdn.hackaday.io/images/3919351439823181661.png"></p><p>What I find fascinating is that each day, you can see the volume of Bees who leave the hive to forage and then return in the evening.  This is a very periodic pattern and you can even see the days which it rained (because they stay in the hive).</p><p><img src="https://cdn.hackaday.io/images/493821439823325463.png"></p><p>Also, the two discontinuities of weight in the chart are due to adding and removing an additional &quot;Honey Super&quot; to the hive stack.</p><p>We were really thrilled to see the awesome nectar flow in the month of July, things have sort of settled down in the last few weeks but I&apos;m hopeful that there will be one more flow before the honey is harvested!</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4648/log/23355-a-new-sensor-platform">A New Sensor Platform!</a></h2>
                            <small class="authorship">14 hours ago  &bull;
                                <a class="gray-link" href="/project/4648/log/23355#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23355"><p>So I&apos;ve done some project logs about my 915MHz Droplet hardware and Hub.  They have really been solid pieces of hardware but I&apos;m always looking to improve.  There are a few things that I dislike about droplets that are preventing me from proliferating further:</p><p>1) Cost - they cost me about $25 to make, that is pretty cheap but if I could get the price down to $12.50 the I could make twice as many sensors and that is a big deal.</p><p>2) Requires a Hub.  The hub is cool but for getting people started, I wanted to create something where the hub was optional.  Ideally it would interface directly to someones smart phone....</p><p>3) Batteries - the 2450 battery is pretty neat, compact and powerful.  In testing, I got about 5months life out of it.  When it dies, a new one needs to be soldered into place.  I don&apos;t find this to be an issue for me but if I wanted to sell to others, it was apparent that it is not a feasible solution.  The CR2450 in small quantities is also expensive and drives some shipping issues (lithium cells).</p><p>So I set out to create a new low cost, easy to use sensor node and here it is:</p><p><img src="https://cdn.hackaday.io/images/8258931439824015604.png"></p><p>Like all of my boards, the design is <a href="https://upverter.com/imp-guru/d2074b6a9f0e5a9c/MSP430-Wireless-Node/">done in upverter</a> and I fab my prototypes at OSHpark.  I&apos;m using a on board PCB trace antenna (for cost reasons) and have selected the HopeRF RF75 Chip for a radio.  The primary reason for using this radio is that it is low cost but I wouldn&apos;t let that fool you, it is also an awesome chip for the price.  It is nearly equivalent to the venerable Nordic nRF24 chip and I&apos;ve run many tests and it is for sure over the air compatible.</p><p>The MCU is a MSP430G2553IRHB and I am using Energia as the programming IDE.  This is the Arduino clone that is compatible with TI processors.  Also I must say that this has been done with a lot of collaboration with the <a href="http://forum.43oh.com/topic/8750-new-msp430-wireless-sensor-node/">43oh.com forum</a> which is a really awesome group of people who I like to talk shop with.</p><p>For Battery, I&apos;ve chosen to use a AA form factor.  This is driven by a variety of reasons, mostly the fact that this is the most common battery in many households and can be purchased anywhere so I don&apos;t need to supply one myself.  It also has excellent capacity for long term life.</p><p>It does sound a little skewed but relatively speaking is large in physical size.  Anyway, only a single cell is used so there is also a NCP1400 boost converter integrated not he board to boost the battery voltage to 3.3V.  This also means that every last drop of power will be extracted from the battery due to the NCP1400&apos;s extremely low dropout voltage.</p><p>Here&apos;s an image of the first 6 prototypes:</p><p><img src="https://cdn.hackaday.io/images/9634961439824576207.png"></p><p>Sandwiched between the battery holder and the board is a 20pin connector that has 2 programming pins, 2 ground pins, 1 3v3 power pin and 15 GPIO.</p><p><img src="https://cdn.hackaday.io/images/1301931439824780153.png"></p><p>The pin out is designed to plug directly into a TI MSP430 Launchpad for easy programming. By adding two wire jumpers, you can even use the same Launchpad debug UART.</p><p><img src="https://cdn.hackaday.io/images/4556191439824884596.png"></p><p>I&apos;m also in the process or <a href="https://github.com/analog-io/analog_io_lib">writing a library for the board</a> which will be Energia (and Arduino) compatible.  The radio interface is inspired by the Enrf24 library by another 430h.com member.  It has a super easy API.  Here is an example of a barebones transmit code:</p><p><img src="https://cdn.hackaday.io/images/1189881439825157113.png"></p><p>It inherits the print class because everyone knows how to use that!  That sketch compiles into 4k of code...</p><p>So the one thing that I haven&apos;t talked about yet is how this hardware achieves my second goal of interfacing to a smart phone.  Usually BLE is used for this function but BLE is notoriously complicated and expensive for DIY because it requires expensive modules.</p><p>Well this hardware does support a limited about of BLE functionality!  It use the same trick that was discovered <a href="http://dmitry.gr/index.php?r=05.Projects&amp;proj=11.%20Bluetooth%20LE%20fakery">here</a> but abstracts away nearly all of that complexity and uses almost the same API:</p><p><img src="https://cdn.hackaday.io/images/7553501439825573714.png"></p><p>There are other calls as well but these are the easiest.  This will transmit a standard BLE advertisement with the text &quot;Hello World&quot;.</p><p>Right now there are some limitations most of which I don&apos;t think effect wireless sensor applications but are prohibitive against all of the things that one could do with a full BLE stack.</p><p>1) Only Transmit is supported right now (Device -&gt; Phone)</p><p>2) The Maximum payload of data is 14 bytes</p><p>Like I said, if my only intent is to transmit sensor data, 14 bytes is plenty!</p><p>I&apos;m also working on an iPhone app that will receive these Beacons and forward information to analog.io for storage and further processing.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4648/log/23608-measuring-water-consumption">Measuring Water Consumption</a></h2>
                            <small class="authorship">9 hours ago  &bull;
                                <a class="gray-link" href="/project/4648/log/23608#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23608"><p>Just a very quick note on a sensor that I have up and running in my home.  It was inspired by<a href="https://hackaday.io/project/1460-remote-water-consumption-display">John Schuch&apos;s Remote Water Consumption</a> project last year.  I&apos;m using his same concept with using the MAG3110 Digital compass to measure the spinning magnet in my homes water meter.  Here&apos;s a picture with some data.</p><p><img src="https://cdn.hackaday.io/images/7002641439844317403.png"></p><p>The basic operation of the device is that it measures the oscillating magnetic field inside the meter and counts the number of oscillations.  The through a calibration cycle I calculated the number of oscillations per gallon and that is how water consumption is measured.</p><p>The technique could be used to monitor for leaks or in general just to help home owners understand what activities that they are doing which drive water useage.</p></div>
                            </div>
                        </li>
                    
                </ul>

                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'GnIOcm7C-G3_ix7KiR2tqQWdpSDXeJhkZJlU';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>