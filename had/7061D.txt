<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en"> <!--<![endif]-->
<head>
    <title>Details &bull; Microchip&#39;s PICkit 2 as an Atmel STK500 programmer &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
        <script type="text/javascript">
        function getCommentIdFromUrl() {
            if(window.location.hash) {
                var hash = window.location.hash.substring(1);
                var commentId = parseInt(hash.replace('j-discussion-', ''));
                if (commentId) {
                    return commentId;
                }
            }
            return null;
        }

        var commentId = getCommentIdFromUrl();
        if (commentId) {
            var url = window.location.href;
            if (url.indexOf('?') > -1) {
                url = url.substring(0, url.indexOf('?'));
            }
            if (url.indexOf('#') > -1) {
                url = url.substring(0, url.indexOf('#'));
            }
            url += '/discussion-' + commentId;
            window.location.href = url;
        }
    </script>
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body>

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fpost%2F22029">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    

        <div class="headline">
            <div class="container">
                

                    

                    <h2>Project Details</h2>
                    <p class="description-title">
                        For <a href="/project/7061">Microchip&#39;s PICkit 2 as an Atmel STK500 programmer</a>
                    </p>
                    <p class="description-summary">PICkit can be used as a PIC Programmer, Serial to USB converter, Logic Probe, Logic Analyzer, but also as an AVR Programmer for Atmel MCUs</p>
                    <div class="description-metainfo">
                        <span>created by
                            <a href="/hacker/10287-rogeorge" title="Visit Profile">
                                RoGeorge
                            </a>
                            <span>&bull;</span>
                            17 days ago
                        </span>
                    </div>

                

            </div>
        </div>

        <div class="container post-content">
            <h1>How it works</h1><p><img src="https://cdn.hackaday.io/images/6932301438531154565.png"></p><p>In a normal data flow, when we have the physical STK500 programmer board, the microcontroller code (firmware) produced by the compiler is sent to STK500 <em>software</em>. The STK500 <em>software </em>will produce ISP commands for the STK500 <em>board</em>, and will transmit those commands through physical serial port COM1, to the STK500 <em>board</em>. Based on the received ISP commands, the STK500 <em>board </em>will produce the MISO/MOSI/CLK pulses required to program the Atmel microcontroller.</p><p>In order to use a PICkit instead of a STK500 <em>board</em>, we will hijack the ISP commands. We will trick the STK500 <em>software </em>to send the ISP commands to our <em>virtual </em>COM3 port instead of the <em>real </em>COM1 port.</p><p>From the virtual port COM3, the ISP commands will travel through a virtual cable inside of the <strong>com0com </strong>software, and will arrive to virtual COM4.</p><p>At the virtual COM4 we will connect another software, <strong>PK2AVRISP</strong>, which is in fact an ISP commands translator. PK2AVRISP will translate the STK500 ISP commands into PICkit commands. From here, the PICkit commands will travel through a real USB port, and the commands will arrive to PICkit 2.</p><p>PICkit will execute these translated commands into MOSI/MISO/CLK pulses necessary to program our Atmel microcontroller.</p><h1>Download software components</h1><ul><li>Go to <a href="http://sourceforge.net/projects/com0com/">http://sourceforge.net/projects/com0com/</a> and download &apos;com0com-3.0.0.0-i386-and-x64-unsigned.zip&apos;</li><li>Download PK2AVRISP.exe (by kcsoft) from <a href="http://www.mediafire.com/download/12jmtmynhgw/PK2AVRISP.zip">http://www.mediafire.com/download/12jmtmynhgw/PK2AVRISP.zip</a></li><li>Download free BASCOM-AVR from <a href="http://www.mcselec.com/index.php?option=com_docman&amp;task=doc_download&amp;gid=139">http://www.mcselec.com/index.php?option=com_docman&amp;task=doc_download&amp;gid=139</a></li></ul><h1>Install downloaded software</h1><h2>1. Install BASCOM-AVR<br></h2><p><strong>BASCOM-AVR</strong> is an IDE that allows to write programs in BASIC language and compile them for AVR microcontrollers like ATtiny13, ATmega8, MEGA328 (last two also used in Arduino boards) and other Atmel MCUs. BASCOM-AVR is a copyrighted commercial program created by <strong>MCS Electronics</strong><span class="redactor-invisible-space"> company. MCS Electronics<span class="redactor-invisible-space"> offer a free BASCOM-AVR Demo version for hobby, educational and noncommercial use.<span class="redactor-invisible-space"> This version is limited to less then 4K of compiled code. Usually, 4k is enough for noncommercial use. If you need more, you can buy the unlimited version.</span></span></span><br></p><p>Unzip downloaded file &apos;bcavrdmo.zip&apos;, then run &apos;setupdemo.exe&apos;. Follow the installer instructions</p><h2>2. Unzip PK2AVRISP.zip</h2><p><strong>PK2AVRISP</strong> is a program that will intercept the ISP programming commands destined to STK500 AVR programmer, and will translate them into commands for PICkit programmer. This way, we can later use an PICkit 2 programmer instead of a STK500 programmer. PK2AVRISP<span class="redactor-invisible-space"> is free (but not open), and it was written by <strong>kcsoft</strong>.</span><br></p><p>Just extract the &apos;PK2AVRISP.exe&apos; from the &apos;PK2AVRISP.zip&apos;, it does not need an installation.</p><h2>3. Install com0com</h2><p><strong>com0com</strong> is an open source software that can create pairs of virtual COM ports linked together, written by <strong>vfrolov</strong> (Vyacheslav Frolov). com0com will be used to redirect all ISP commands from the IDE to the PK2AVRISP.exe translator.</p><p>To install com0com is a little tricky, because the virtual COM ports drivers are not digitally signed for Windows. com0com can be used without problems with Windows XP, but for newest Windows flavors, like Windows 7, we need to disable the digital signature enforcement for drivers. The most easy way to do this is by restarting Windows and boot into disabled enforcement mode.</p><p>Restart your computer, and during the computer restart continuously pump the F8 key until you arrive to the following boot screen:</p><p><img src="http://oi62.tinypic.com/amxy0x.jpg"><br><span class="redactor-invisible-space">Using Up and Down keyboard arrows, highlight the entry &quot;Disable Driver Signature Enforcement&quot;, then press Enter to boot into disabled enforcement mode.<br></span></p><p style="background-color: #ff0000"><span class="redactor-invisible-space">This mode will stay active only until the next Windows restart. Please remember to boot into this mode each time you need to use com0com.</span></p><p><span class="redactor-invisible-space">Now we can start installing com0com:</span></p><ul><li>Unzip &apos;com0com-3.0.0.0-i386-and-x64-unsigned.zip&apos;</li><li>Right click on &apos;setup.exe&apos; and run it as Administrator<span class="redactor-invisible-space"><br></span></li><li><span class="redactor-invisible-space">At the step &apos;Select components to install:&apos;, uncheck the last two lines<span class="redactor-invisible-space">:<br>CNCA0 &lt;-&gt; CNCB0<span class="redactor-invisible-space"><br>COM# &lt;-&gt; COM#<span class="redactor-invisible-space"></span></span></span></span></li><li><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space">At the Windows Security warning dialogue, allow the drivers to install.<span class="redactor-invisible-space"></span></span></span></span></li></ul><h1>Software and Hardware Setup</h1><h2>1. Create the virtual COM paired ports</h2><ul><li>Click on Windows Start -&gt; All Programs -&gt; com0com -&gt; Setup Command Prompt</li><li>At the setup window type<span class="redactor-invisible-space"><br><em><strong>busynames com*</strong></em><span class="redactor-invisible-space"><em><strong></strong></em></span></span></li><li><span class="redactor-invisible-space"><span class="redactor-invisible-space">Choose 2 unused com ports numbers (2 numbers that were NOT listed by the &apos;busynames&apos;). I.e. for my computer, ports COM3 and COM4 were not listed by the &apos;busynames&apos; command, so I pick them to be the virtual paired ports. <strong>NOTE: avoid port numbers too big.</strong> Some programs can access only COM ports less then 10, other programs can access only ports COM1 to COM4.</span></span><ul><li>It is recommended to use ports in range COM1 to COM4.</li><li>If all of them are busy, this is usually because some unused drivers are keeping the names COM1...COM4 busy</li><li>To remove unused drivers, open a Command Prompt as Administrator, and type<ul><li><strong><em>SET DEVMGR_SHOW_NONPRESENT_DEVICES=1</em></strong><strong><em></em></strong></li><li><strong><em>devmgmt.msc</em></strong><span class="redactor-invisible-space"><strong><em></em></strong></span></li><li>The Device Manager GUI will open</li><li>In the Device Manager window check &apos;View -&gt; Show hidden devices&apos;</li><li>Now you should be able to see all unused drivers as grayed out</li><li>Right click on the grayed out device that you want to remove (i.e. COM3 and COM4) and click Uninstall</li></ul></li></ul></li><li>In the setup window already opened at the beginning, type:<br><em><strong>install PortName=COM3 PortName=COM4</strong></em><span class="redactor-invisible-space"><em><strong></strong></em></span></li></ul><p>By now, you should have a pair of virtual serial ports, COM3 and COM4, linked together with a virtual serial cable. To test them, open two terminals (e.g. two instances of PuTTY) and connect one to COM3 and the other to COM4. What you type in COM3 should be seen in COM4 and vice-versa. Connection speed and other handshake parameters of the serial communication doesn&apos;t matter for this two virtual ports. You can now close both terminals (both PuTTY instances), this was just to test that com0com was proper installed and setup.</p><p>There is also a GUI setup, you can start it from Start -&gt; All Programs -&gt; com0com -&gt; Setup. My setup is looking like this:</p><p><img src="https://cdn.hackaday.io/images/1705051438524006847.png"></p><h2>2. Setup BASCOM-AVR to use STK500 and virtual COM3</h2><ul><li>Open BASCOM from Start -&gt; All Programs -&gt; MCS Electronics -BASCOM-AVR -&gt; BASCOM-AVR</li><li>In BASCOM-AVR go to Options -&gt; Programmer choose &apos;STK500 native driver&apos;, &apos;COM3&apos;, timeout &apos;400&apos;, then click &apos;OK&apos;.</li></ul><p><img src="https://cdn.hackaday.io/images/224571438524544965.png"></p><h2>3. Setup PK2AVRISP.exe</h2><ul><li>Connect your PICkit 2 programmer to a USB port (no Microchip drivers necessary)</li><li>Double click on PK2AVRISP.exe. If the PICkit programmer was detected successfully by the translator, then in the PK2AVRISP window you should see &quot;PicKit2 found. FW version...&quot;</li><li>For the PK2AVRISP, set the serial port to COM4</li><li><strong>LEAVE THE PK2AVRISP.exe</strong><strong> WINDOW OPEN.</strong> If you close it, you close the translator.</li></ul><p><strong><img src="https://cdn.hackaday.io/images/4148641438525517498.png"></strong></p><p> You can minimize it, but <strong>DO NOT CLOSE PK2AVRISP.exe</strong></p><p><strong><br></strong></p><h2>4. Connect the PICkit 2 programmer to an Atmel microcontrolle</h2><p><img src="https://cdn.hackaday.io/images/831601438526874053.jpg"></p><p><img src="https://cdn.hackaday.io/images/1992601438526885484.jpg"></p><p><img src="https://cdn.hackaday.io/images/7796031438526893509.jpg"></p><p>Images from <strong>kcsoft</strong></p><p><strong><br></strong></p><h2>5. Program it</h2><p>Create a new BASCOM-AVR project and write a small Blink program (in this example I used ATtiny13 MCU):</p><p><img src="https://cdn.hackaday.io/images/5726431438527177813.png"></p><p>Press F7 to compile, then F4 to download the code into microcontroller. In the programmer window, identify your chip.</p><p><img src="https://cdn.hackaday.io/images/4430821438527436787.png"></p><p>Now, the ATtiny13 microcontroller was identified:</p><p><img src="https://cdn.hackaday.io/images/6684471438527505237.png"></p><p>Press &quot;Erase and program chip&quot;</p><p><img src="https://cdn.hackaday.io/images/52741438527581638.png"></p><p>If you powered your MCU from the PICkit, power your MCU by pressing VDD on button, in order to see the LEDs blinking.</p><p><img src="https://cdn.hackaday.io/images/9204451438527736566.png"></p><ul></ul>
        </div>

        

        

    

    <div class="j-modal-confirmation modal-background"></div>
<div class="j-modal-confirmation modal-content-holder">
    <p class="align-center" id="modal-message"></p>
    <p class="align-center"><a class="medium-button gold-gold-button delete-project-button" id="modal-yes" href="">Yes, delete it</a> <a class="medium-button grey-gold-button cancel-button" id="modal-cancel">Cancel</a> </p>
</div>
    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = '1HPKiOAh-WpUGeOXZ_2ka5CRnb4tCvB2ubQY';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_post&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    
    
    
    

    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbpIGEWjpnPaaIvcAHwzCnxb%2FHLKGUM1bvoOeG5HC0xFU9LJ%2B910rZ72abfN8vxNDn41XRsK%2BvNLzydIft0iwmMulI7CjfWKAELKuUfOMCuUWjmKstkIZy4LyUZZqGjubUq7baOpUEVdpT0W01PyzlwivRvc7EDpLluqPEa2JX%2FBw%3D%3D-0.48.6.js"></script>

</body>
</html>