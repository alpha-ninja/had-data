<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; Grigore - Robotics for everybody &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F6573%2Flogs">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/6573-grigore-robotics-for-everybody">Grigore - Robotics for everybody</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">Let everyone write and test code, on the same platform, by just having an intelligent line-following table.</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/64032-strofo" title="Visit Profile">strofo</a><span>&bull;</span>
                
                2 months ago<span>&bull;</span><a href="/project/6573#discussion-list" title="See Comments">0 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/6573-grigore-robotics-for-everybody">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/6573/logs/sort/newest">Newest</option>
                    <option value="/project/6573/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/6573/log/20291-first-step">First step</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/6573/log/20291#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20291"><p>First I mounted an Arduino on the Magician chassis and a breadboard. On the breadboard I added the L298 driver and wrote some code to drive the robot over the serial.</p><p>Next use RPi to control the Arduino to some desired position by tracking Grigore's position.<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6573/log/21384-first-detection-tests-powered-by-aforge">First detection tests, powered by AForge</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/6573/log/21384#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21384"><p>I love the <a href="http://www.aforgenet.com/aforge/framework/">AForge framework</a> from Andrew Kirillov so it made sense to use it because Microsoft just released the <a href="https://dev.windows.com/en-us/iot">Raspberry Pi support in Visual Studio C#</a>. </p><p>Right now I am still in doubt weather I will use Mono or .Net but is clear to me that I will use C# instead of Python. I can use some advices and feedback on this matter.</p><p>The  code just makes a difference filter between an original empty board image:</p><p><img src="https://cdn.hackaday.io/images/8771881437639480080.png"></p><p>and an image containing the robot (made using GIMP):</p><p><img src="https://cdn.hackaday.io/images/3091071437639528512.png"></p><p>and returns an image containing the resulted edges:</p><p><img src="https://cdn.hackaday.io/images/822361437639684868.png"></p><p>Code can be found here: <br><a href="https://github.com/strofos/grigore/tree/master/SOFTWARE%20-%20Board/Test01%20-%20Detection%20using%20AForge"></a></p><p><a href="https://github.com/strofos/grigore/tree/master/SOFTWARE%20-%20Board/Test01%20-%20Detection%20using%20AForge">https://github.com/strofos/grigore/tree/master/SOFTWARE - Board/Test01 - Detection using AForge</a></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6573/log/22204-detection-test-failed-in-windows-10-iot-due-to-missing-systemdrawing">Detection test failed in Windows 10 IoT due to missing System.Drawing</a></h2>
                            <small class="authorship">12 days ago  &bull;
                                <a class="gray-link" href="/project/6573/log/22204#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22204"><p>Unfortunately Windows 10 IoT is lacking the namespace System.Drawing so any code that uses Image or Bitmap objects will not compile. I was looking forward to have the project on Windows but, as Mono has this functionality, the next step is to reinstall Raspberrian + Mono and give it a try there. I also have to recompile the AForge code over Mono. </p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6573/log/22743-raspberian-picam-and-mono-instalation">Raspberian, PiCam and Mono instalation</a></h2>
                            <small class="authorship">4 days ago  &bull;
                                <a class="gray-link" href="/project/6573/log/22743#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22743"><p><strong>Install Raspberian</strong><br>First boot: resize to max size of SD card. Enable camera support<br>    Login: pi/raspberry<br>    <br><strong>Change super pass to &quot;pi&quot;</strong><strong></strong><br>    sudo passwd<br>    # introduce new password</p><p><strong>Enable  camera in RPi configuration</strong></p><p>Enable camera in condif<br>    raspi-config<br>    Enable camera ..<br>    <br></p><p><strong>Check camera configuration</strong></p><p>Login as super and take a snapshot: <a href="http://www.raspberrypi.org/documentation/usage/camera/raspicam/raspistill.md">http://www.raspberrypi.org/documentation/usage/camera/raspicam/raspistill.md</a><br>    DATE=$(date +&quot;%Y-%m-%d_%H%M&quot;)<br>    raspistill -vf -hf -o /home/pi/camera/$DATE.jpg</p><p><strong>Install mono</strong><br>    apt-get update<br>    apt-get install mono-runtime<br>    apt-get install mono-complete<br>    <br></p><p><strong>Check if is Mono was installed correctly</strong><strong></strong><br>Create a file named &quot;HelloWorld.cs&quot; and write the following code inside</p><p>#####<br>using System;<br> <br>public class HelloWorld<br>{<br>    public static void Main()<br>    {<br>        Console.WriteLine(&quot;Hello World!&quot;);<br>    }<br>}<br>#####<br>Compile and run it<br>    gmcs HelloWorld.cs<br>    mono HelloWorld.exe</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6573/log/23246-successful-image-detection-on-raspberian-mono">Successful image detection on Raspberian + Mono</a></h2>
                            <small class="authorship">a day ago  &bull;
                                <a class="gray-link" href="/project/6573/log/23246#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23246"><p>Here is the corresponding repository containing everything to make this project work:</p><p><a href="https://github.com/strofos/grigore/tree/master/SOFTWARE%20-%20Board/Test02%20-%20Detection%20using%20AForge%20Mono">https://github.com/strofos/grigore/tree/master/SOFTWARE - Board/Test02 - Detection using AForge Mono</a></p><p>After downloading it, we must compile it. Just navigate to the folder &quot;Test02 - Detection using AForge Mono<span class="redactor-invisible-space">&quot; and run the <span class="redactor-invisible-space">&quot;xbuild&quot;</span> command:</span></p><pre class="hljs makefile">root<span class="hljs-variable">@raspberrypi</span><span class="hljs-symbol">:/grigore/Test02</span> - <span class="hljs-constant">Detection</span> using <span class="hljs-constant">AForge</span> <span class="hljs-constant">Mono</span><span class="hljs-comment"># xbuild</span></pre><br><p>It will start compiling the hole solution, project by project:</p><p><img src="https://cdn.hackaday.io/images/7819401439790919971.png"></p>and notify you when it completes:<p><img src="https://cdn.hackaday.io/images/4364231439790992594.png"></p><p>Unfortunately I am not that familiar with Linux so I didn&apos;t set the lines to move the generated libraries. </p><p>So we have to manually move &quot;AForge.dll&quot;, &quot;AForge.xml<span class="redactor-invisible-space">&quot;, &quot;AForge.Imaging.dll&quot;, &quot;AForge.Imaging.xml&quot;, &quot;AForge.Math.dll&quot;, &quot;AForge.Math.xml&quot; to the &quot;<strong>GrigoreDetectionConsole\bin\Debug</strong>&quot; folder</span>. </p><p>Each library can be found in its project folder, inside <strong>[Project]\bin\Debug</strong></p><p>Now we can run this test:</p><pre class="hljs bash">root<span class="hljs-variable">@raspberrypi</span><span class="hljs-symbol">:/grigore/Test02</span> - <span class="hljs-constant">Detection</span> using <span class="hljs-constant">AForge</span> <span class="hljs-constant">Mono</span>/<span class="hljs-constant">GrigoreDetectionConsole</span>/bin/<span class="hljs-constant">Debug</span><span class="hljs-comment"># mono GrigoreDetectionConsole.exe</span></pre> and will get a response like this:<p><img src="https://cdn.hackaday.io/images/1402271439791473467.png"></p><p>As you can see the code runs, but the detected position is not quite what it should be. I will output the difference image and edges to debug it. </p><p>I also added a Windows project that does this in real time but unfortunately I can not run the X Server in remote, so I can&apos;t use it for the moment.</p><p>The detection duration is half a second, which is great for this project. <br></p><p>This was still a success, so soon I&apos;ll be starting to write the main code.<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/6573/log/23264-generated-image-vs-processed-image">Generated image vs Processed image</a></h2>
                            <small class="authorship">a day ago  &bull;
                                <a class="gray-link" href="/project/6573/log/23264#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-23264"><img src="https://cdn.hackaday.io/images/5288461439795602946.png"><p>On the left is the generated image, on the right the processed image. Everything looks ok! So there must be something wrong inside the edges processing algorithm.<br></p></div>
                            </div>
                        </li>
                    
                </ul>

                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'QtGusC11-bSJstrPaZG4JQ25yuHr6YCq4MPc';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>