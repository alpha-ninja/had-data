<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en"> <!--<![endif]-->
<head>
    <title>Details &bull; ANDY: A Multi-Purpose &#34;Humanoid&#34; Robot &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
        <script type="text/javascript">
        function getCommentIdFromUrl() {
            if(window.location.hash) {
                var hash = window.location.hash.substring(1);
                var commentId = parseInt(hash.replace('j-discussion-', ''));
                if (commentId) {
                    return commentId;
                }
            }
            return null;
        }

        var commentId = getCommentIdFromUrl();
        if (commentId) {
            var url = window.location.href;
            if (url.indexOf('?') > -1) {
                url = url.substring(0, url.indexOf('?'));
            }
            if (url.indexOf('#') > -1) {
                url = url.substring(0, url.indexOf('#'));
            }
            url += '/discussion-' + commentId;
            window.location.href = url;
        }
    </script>
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body>

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fpost%2F2707">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    

        <div class="headline">
            <div class="container">
                

                    

                    <h2>Project Details</h2>
                    <p class="description-title">
                        For <a href="/project/1205">ANDY: A Multi-Purpose &#34;Humanoid&#34; Robot</a>
                    </p>
                    <p class="description-summary">Meet Andy, a multi-purpose voice controlled humanoid robot built with a Raspberry Pi and a bunch of Servos, brackets, and other great stuff.</p>
                    <div class="description-metainfo">
                        <span>created by
                            <a href="/hacker/8262-tyler-spadgenske" title="Visit Profile">
                                Tyler Spadgenske
                            </a>
                            <span>&bull;</span>
                            a year ago
                        </span>
                    </div>

                

            </div>
        </div>

        <div class="container post-content">
            <strong>System Design</strong><p><img src="https://cdn.hackaday.io/images/7973141412014993659.png"></p><p>Andy has a SPST switch on his side that will power him on. When this switch is flipped, power from the lipo battery is converted to 5v and then sent to the Raspberry Pi and servos. The Raspberry Pi will start up and <a href="https://github.com/spadgenske/ANDY" target="_blank">Andy's software</a> will start. Andy is now operational. A more detailed overview of the hardware can be found in this project log. [link coming soon]</p><p>Once the Pi has booted up, you can start giving Andy commands. To give Andy a command, it is as simple as saying "Andy" waiting for the high pitched beep, and saying your command. If you give Andy the "shutdown" command, the Pi will log off and you can safely turn off the SPST switch. A more detailed overview of the software can be found <a href="http://hackaday.io/project/1205/log/4466">here</a>.</p><p>Andy can also be logged on over a network. If Andy is connected to the internet, you can log into Andy's client program and send him commands via text.</p><p>
</p><h2><strong>Commands</strong></h2><h2>Walk</h2><p>The first command is walk. After the walk command, you must tell Andy direction and distance. For example: "Walk forward 10 steps" will make Andy walk forward ten steps. If you leave out the "steps" he will still walk forward ten steps. If you leave out the 10, Andy will walk forward until you give the stop command. The same is for the backward command. i.e "walk backward 3 steps."</p><h2><a href="https://github.com/spadgenske/ANDY/wiki/Commands#turn"></a>Turn</h2><p>Another important command is the turn command. After getting Andy's attention by saying "Andy" and hearing a beep, you can use the turn command like this: "Turn right 180" Where 180 is the degrees Andy turns. Negative numbers also work. If you leave out the distance, Andy will move just 90 degrees. For example, if you give Andy this command "turn right" Andy will turn right 90 degrees.</p><h2><a href="https://github.com/spadgenske/ANDY/wiki/Commands#what"></a>What</h2><p>"What" is a basic command. Using the what command, you can ask Andy basic questions like "what is your name?" or "what time is it?" or even "what is 5+13x43?" "What" commands are pre-programmed so you can't just ask Andy anything. Here is a list of what commands:</p><ul><li>What is [MATH EQUATION]</li><li>What time is it</li><li>What day is it today</li><li>What is your name</li><li>What is your problem</li></ul><h2><a href="https://github.com/spadgenske/ANDY/wiki/Commands#take"></a>Take</h2><p>The "take" command is for the camera. There are two commands: "take picture", and "take video". Take picture will just take a snapshot right from the current view. With take video, it will start the video and record. All videos are saved under <code>/home/pi/ANDY/videos</code> and all pictures are saved under <code>/home/pi/ANDY/pictures</code></p><h2><a href="https://github.com/spadgenske/ANDY/wiki/Commands#tell"></a>Tell</h2><p>The "tell" command can only be used in two ways: "tell joke" or "tell riddle." After giving Andy one of these commands, he will pick a random joke (or riddle) and repeat it back to you.</p><h2>Shutdown<br><a href="https://github.com/spadgenske/ANDY/wiki/Commands#future-commands"></a></h2><p>The "shutdown" command is used to shut Andy down. If you said, "shutdown", Andy will shut down his software and hardware then safely shutdown the pi. This command will only shut down the pi, so to turn off the batteries you must flip the switch.</p><h2><a href="https://github.com/spadgenske/ANDY/wiki/Commands#meet"></a>Meet</h2><p>The "meet" command is a very complex command. It deals with the people table in Andy's database. It is used like this: "Andy". (beep) "meet Bob" Andy will then create a column for Bob and store his name. Then Andy will take a picture with the Pi Camera and store the file path in the Bob column. Now, whenever the Pi camera detects Bob and Social Mode is on, Andy will ask Bob a question and store the answer in his database.</p><h2>Who</h2><p>The "Who" command is used to get information from the "people" table in Andy's database. For example, if your command is "Who is Bob" then Andy will read off information about Bob. If Bob was never added to the database with the meet command, Andy will obviously not know who Bob is. </p><h2>Run*</h2><p>Sometimes it is impossible to get Andy to do what you want in one command. That's where the run command comes in. First, create a file with a list of the commands you wish Andy to execute like this: </p><pre>walk forward 10
turn right 90
walk backward 13 </pre><p>Save the file as test.txt in /home/pi/ANDY/sequences then tell Andy this command: "run sequence test." Andy will now run all three commands in one command.</p><h1><strong>Features</strong></h1><h2><strong></strong><strong>Speech Recognition</strong></h2><p>Andy uses Pocketsphinx for speech to text. Pocketsphinx has an easy to use API. There were other Speech to Text (STT) programs, but they either required internet connection the entire time or would not work with a Raspberry Pi. The downside to Pocketsphinx is that in order to recognize words correctly, you must create your own language model.</p><h2><strong>Database (MySQL)</strong></h2><p>Andy uses a MySQL database to store all the information he collects on objects, people, and places. There is a table for each noun. Under the objects table, Andy keeps the path to a picture of that object, a path to the script to run to pick up the object, and the name of the object. So when you tell Andy to "Pick up rock", Andy will search the object table for the rock, then run the script under the script path, Hopefully picking up the rock. To add new objects, you must manually enter them by logging in to Andy over a network. Andy stores places by taking pictures and storing them in a "places" table. Then, when Andy is given the command, "Where am I" he can compare the current view to all the pictures in the database and find out where he is. Places are also manually entered in. People, on the other hand, are not. They are entered by giving Andy the "meet" command. For example, if you say "Meet my friend Joe", Andy will take a picture of Joe and store it in the people table. Next time Andy sees Joe, Andy will ask him a question. Soon Andy will know much about Joe.</p><h2><strong>Bipedal Mechanism </strong></h2><p>Andy a metal bracket system I got off of ebay. The rest is just perfboard and other DIY stuff. Andy V3 will be 3D printed.</p><h2><strong>Networking</strong></h2><p>Sometimes, it is impossible to tell Andy to do something though speech. That's why I created a Command Line Interface (CLI) for him. After connecting the Raspberry Pi to the internet, you can login to Andy and send him commands from your PC. You can also view and edit his database.</p><h2><strong>Robot Communication*</strong></h2><p>A single robot cannot do everything, so Andy must communicate with other robots. With Bluetooth, Andy can talk to Lego Mindstorms NXT bricks and tell them what to do. Right now communication is possible, I just haven't completed it yet.</p><p><strong>*Feature/command not complete</strong></p>
        </div>

        

        

    

    <div class="j-modal-confirmation modal-background"></div>
<div class="j-modal-confirmation modal-content-holder">
    <p class="align-center" id="modal-message"></p>
    <p class="align-center"><a class="medium-button gold-gold-button delete-project-button" id="modal-yes" href="">Yes, delete it</a> <a class="medium-button grey-gold-button cancel-button" id="modal-cancel">Cancel</a> </p>
</div>
    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = '1OCdaWzF-pILqwwFiCDT0b8Dp2u8-hG1Cjgw';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_post&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    
    
    
    

    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbpIGEWjpnPaaIvcAHwzCnxb%2FHLKGUM1bvoOeG5HC0xFU9LJ%2B910rZ72abfN8vxNDn41XRsK%2BvNLzydIft0iwmMulI7CjfWKAELKuUfOMCuUWjmKstkIZy4LyUZZqGjubUq7baOpUEVdpT0W01PyzlwivRvc7EDpLluqPEa2JX%2FBw%3D%3D-0.48.6.js"></script>

</body>
</html>