<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; VPN Light Switch &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F5909%2Flogs">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/5909-vpn-light-switch">VPN Light Switch</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">A Wi-Fi based LED switch to check that your VPN is running on your router and control it.</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/16981-blecky" title="Visit Profile">Blecky</a><span>&bull;</span>
                
                3 months ago<span>&bull;</span><a href="/project/5909#discussion-list" title="See Comments">0 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/5909-vpn-light-switch">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/5909/logs/sort/newest">Newest</option>
                    <option value="/project/5909/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/5909/log/18288-system-state-machine">System State Machine</a></h2>
                            <small class="authorship">3 months ago  &bull;
                                <a class="gray-link" href="/project/5909/log/18288#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-18288"><p>Using an OpenVPN daemon (on a WRT based router for example) with the following added to the config file, you can monitor the VPN status and control it (once the service has started):</p><pre class="hljs bash"><span class="hljs-title">management</span> <span class="hljs-number">192.168.1.1</span> <span class="hljs-number">7505</span></pre><p><img src="https://cdn.hackaday.io/images/1424601432224471769.png"></p><p>If the service hasn't started, the LED will be red, indicating it needs to be started manually (via the router's web GUI for example). Once it is up and running however, it can <a href="https://openvpn.net/index.php/open-source/documentation/miscellaneous/79-management-interface.html">easily be controlled</a> via a telnet connection to port 7505.<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5909/log/22845-nodemcu-and-telnet-client">NodeMCU and &#34;Telnet&#34; Client</a></h2>
                            <small class="authorship">3 days ago  &bull;
                                <a class="gray-link" href="/project/5909/log/22845#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22845"><p>Here is a link to the NodeMCU firmware - <a href="https://github.com/nodemcu/nodemcu-firmware">https://github.com/nodemcu/nodemcu-firmware</a></p><p>You can build this with the ESP toolchain (instructions on building the toolchain <a href="http://www.esp8266.com/wiki/doku.php?id=toolchain">here</a>). You can also use the NodeMCU flasher which has prebuilt firmware included - <a href="https://github.com/nodemcu/nodemcu-flasher">https://github.com/nodemcu/nodemcu-flasher</a><br></p><p>To connect to a telnet session and send/receive, you can use the following using the <a href="http://www.nodemcu.com/docs/net-socket-module/">socket library</a>:</p><pre class="hljs vbscript">conn=net.createConnection(net.TCP, <span class="hljs-keyword">false</span>)
conn:on(<span class="hljs-string">&quot;receive&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">(sck, c)</span> <span class="hljs-title">print</span><span class="hljs-params">(c)</span> <span class="hljs-title">end</span> )
<span class="hljs-title">conn</span>:<span class="hljs-title">connect</span><span class="hljs-params">(<span class="hljs-number">7505</span>,<span class="hljs-string">&quot;192.168.1.1&quot;</span>)</span>
<span class="hljs-title">local</span> <span class="hljs-title">ok</span>, <span class="hljs-title">err</span> = <span class="hljs-title">conn</span>:<span class="hljs-title">send</span><span class="hljs-params">(<span class="hljs-string">&quot;state\n&quot;</span>)</span>
<span class="hljs-title">conn</span>:<span class="hljs-title">close</span><span class="hljs-params">()</span></span></pre><img src="https://cdn.hackaday.io/images/7681411439621731258.png"></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5909/log/22864-vpn-light-switch-lua-script">VPN Light Switch LUA Script</a></h2>
                            <small class="authorship">3 days ago  &bull;
                                <a class="gray-link" href="/project/5909/log/22864#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22864"><p>Here is some code to monitor the status of the VPN server. The RGB LEDs are common anode, with the anode connected to 3.3V (and a 100Ohm resistor on each leg connected to GPIO). The ESP module sinks the current:</p><pre class="hljs nginx"><span class="hljs-title">LED </span><span class="hljs-built_in">on</span> - gpio.write(<span class="hljs-number">3</span>, gpio.LOW)
LED <span class="hljs-built_in">off</span> - gpio.write(<span class="hljs-number">3</span>, gpio.HIGH)</pre>This is so the modules still boot without going into bootloader mode, while keeping the resistor values quite small (brighter LEDs).<p>Unfortunately because the ESP01 module only has two GPIOs, it is difficult to add both button and LED functionality at the same time. I will break these connections out later. But for the moment, the button is connected to GPIO 3 and the LED to GPIO 4.</p><p>The button is connected as follows:</p><pre>                         VCC                  
                        +-+-+                 
                          |                   
                          |                   
                        +-+-+                 
                        |   |                 
                        |10K|                 
                        |   |                 
                        +-+-+                 
                          |                   
                          |                   
           +-------+      |                   
GPIO ------+  100  +------+                   
           +-------+      |                   
                          +                   
                           \  Switch         &#x2009;
                            \                 
                          +                   
                          |                   
                        +---+                 
                         +-+                  
                          +                   
                         GND
</pre><p>The code:</p><pre class="hljs vbscript">function vpnconnect () 
  conn=net.createConnection(net.TCP, 0) 
  conn:on(&quot;receive&quot;, function(sck, c) 
    if string.find(c,&quot;CONNECTED&quot;) then 
      print(&quot;Connected&quot;) 
      state = 1 
	  <span class="hljs-comment">--gpio.write(3, gpio.HIGH)</span>
      gpio.write(4, gpio.LOW) 
    <span class="hljs-operator"><span class="hljs-keyword">end</span> 
    <span class="hljs-keyword">if</span> <span class="hljs-keyword">string</span>.find(c,<span class="hljs-string">&quot;RECONNECTING&quot;</span>) <span class="hljs-keyword">then</span> 
      print(<span class="hljs-string">&quot;Standby&quot;</span>) 
	  <span class="hljs-comment">--gpio.write(3, gpio.HIGH) </span>
	  gpio.<span class="hljs-keyword">write</span>(<span class="hljs-number">4</span>, gpio.HIGH)
      state = <span class="hljs-number">0</span> 
    <span class="hljs-keyword">end</span> 
    <span class="hljs-keyword">if</span> <span class="hljs-keyword">string</span>.find(c,<span class="hljs-string">&quot;AUTH&quot;</span>) <span class="hljs-keyword">then</span> 
      print(<span class="hljs-string">&quot;Auth&quot;</span>) 
      state = <span class="hljs-number">1</span> 
	  <span class="hljs-comment">--gpio.write(3, gpio.LOW) </span>
      gpio.<span class="hljs-keyword">write</span>(<span class="hljs-number">4</span>, gpio.LOW) 
    <span class="hljs-keyword">end</span> 
    <span class="hljs-keyword">end</span> 
  ) 
  conn:<span class="hljs-keyword">on</span>(<span class="hljs-string">&quot;disconnection&quot;</span>, <span class="hljs-keyword">function</span>(sck, c) 
    print(<span class="hljs-string">&quot;VPN Disabled&quot;</span>) 
	<span class="hljs-comment">--gpio.write(3, gpio.LOW) </span>
    gpio.<span class="hljs-keyword">write</span>(<span class="hljs-number">4</span>, gpio.HIGH) 
    connected = <span class="hljs-number">0</span> 
    <span class="hljs-keyword">end</span> 
  ) 
<span class="hljs-keyword">end</span> 

<span class="hljs-keyword">function</span> buttonpress (<span class="hljs-keyword">level</span>) 
  <span class="hljs-keyword">if</span> triggered == <span class="hljs-number">0</span> <span class="hljs-keyword">then</span> 
    <span class="hljs-keyword">if</span> <span class="hljs-keyword">level</span> == <span class="hljs-number">0</span> <span class="hljs-keyword">then</span> 
      <span class="hljs-keyword">if</span> connected == <span class="hljs-number">1</span> <span class="hljs-keyword">then</span> 
        triggered = <span class="hljs-number">1</span> 
        tmr.alarm(<span class="hljs-number">1</span>, <span class="hljs-number">200</span>, <span class="hljs-number">0</span>, <span class="hljs-keyword">function</span>() <span class="hljs-comment">--debounce delay </span>
          <span class="hljs-keyword">if</span> state == <span class="hljs-number">0</span> <span class="hljs-keyword">then</span> 
            conn:send(<span class="hljs-string">&quot;hold off\r\n hold release\r\n&quot;</span>) 
            state = <span class="hljs-number">1</span> 
          <span class="hljs-keyword">else</span> 
            conn:send(<span class="hljs-string">&quot;hold on\r\n signal SIGHUP\r\n&quot;</span>) 
            state = <span class="hljs-number">0</span> 
          <span class="hljs-keyword">end</span> 
          triggered = <span class="hljs-number">0</span> 
          <span class="hljs-keyword">end</span> 
        ) 
      <span class="hljs-keyword">end</span> 
    <span class="hljs-keyword">end</span> 
  <span class="hljs-keyword">end</span> 
<span class="hljs-keyword">end</span> 

<span class="hljs-comment">--Currently using GPIO3 as button, all LED references commented out</span>
<span class="hljs-comment">--gpio.mode(3, gpio.OUTPUT) </span>
gpio.<span class="hljs-keyword">mode</span>(<span class="hljs-number">3</span>,gpio.<span class="hljs-built_in">INT</span>) 
gpio.<span class="hljs-keyword">mode</span>(<span class="hljs-number">4</span>, gpio.<span class="hljs-keyword">OUTPUT</span>) 

connected = <span class="hljs-number">0</span> 
state = <span class="hljs-number">0</span> 
triggered = <span class="hljs-number">0</span> 
<span class="redactor-invisible-space">
gpio.trig(3, &quot;down&quot;, buttonpress)</span><span class="hljs-comment"></span>

tmr.alarm(<span class="hljs-number">0</span>, <span class="hljs-number">1000</span>, <span class="hljs-number">1</span>, <span class="hljs-keyword">function</span>() 
  <span class="hljs-keyword">if</span> connected == <span class="hljs-number">0</span> <span class="hljs-keyword">then</span> 
    vpnconnect() 
    conn:<span class="hljs-keyword">connect</span>(<span class="hljs-number">7505</span>,<span class="hljs-string">&quot;192.168.1.1&quot;</span>) 
    connected = <span class="hljs-number">1</span> 
  <span class="hljs-keyword">end</span> 
  <span class="hljs-keyword">if</span> connected == <span class="hljs-number">1</span> <span class="hljs-keyword">then</span> 
    conn:send(<span class="hljs-string">&quot;state\r\n&quot;</span>) 
  <span class="hljs-keyword">end</span> 
  <span class="hljs-keyword">end</span> 
) </span></pre><p>Note that when the VPN is in &quot;standby&quot;, the service is still running, it just changes the IP tables so the VPN is no longer used. The service daemon will report that it is still running.</p><p>You can use <a href="http://benlo.com/esp8266/">LuaLoader</a> to save the file to the ESP module so it runs on boot.<br></p><p>To stop it while testing just run:</p><pre class="hljs vbscript">tmr.<span class="hljs-keyword">stop</span>(<span class="hljs-number">0</span>)
conn:close() </pre></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/5909/log/22880-prototype-video">Prototype Video</a></h2>
                            <small class="authorship">3 days ago  &bull;
                                <a class="gray-link" href="/project/5909/log/22880#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-22880"><p><iframe style="width: 500px; height: 281px;" src="//www.youtube.com/embed/Kz4hVg6EwVk" allowfullscreen="" frameborder="0" height="281" width="500"></iframe></p><p>In this video I test the LED and button operation in two separate steps. This is testing the LUA code and is completely functional. </p><p>Unfortunately, as there are limited GPIO pins on the ESP01 module, when testing the buttons, I disable one of the LEDs.</p><p>Once I break out some more GPIO pins from the module, I will finalise the code to perform as per the state machine.</p></div>
                            </div>
                        </li>
                    
                </ul>

                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'ryrykNMU-ITcfadM6dCUjCQ8xKzi5CvyR1cc';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>