<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en"> <!--<![endif]-->
<head>
    <title>Details &bull; Earthquake Prediction With Seismic Noise Analysis &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
        <script type="text/javascript">
        function getCommentIdFromUrl() {
            if(window.location.hash) {
                var hash = window.location.hash.substring(1);
                var commentId = parseInt(hash.replace('j-discussion-', ''));
                if (commentId) {
                    return commentId;
                }
            }
            return null;
        }

        var commentId = getCommentIdFromUrl();
        if (commentId) {
            var url = window.location.href;
            if (url.indexOf('?') > -1) {
                url = url.substring(0, url.indexOf('?'));
            }
            if (url.indexOf('#') > -1) {
                url = url.substring(0, url.indexOf('#'));
            }
            url += '/discussion-' + commentId;
            window.location.href = url;
        }
    </script>
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body>

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fpost%2F22851">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    

        <div class="headline">
            <div class="container">
                

                    

                    <h2>Project Details</h2>
                    <p class="description-title">
                        For <a href="/project/7231">Earthquake Prediction With Seismic Noise Analysis</a>
                    </p>
                    <p class="description-summary">Seismic noise is measured in 3 dimensions, analysed with statistics and used to detect deviations from normal. Can we predict quakes?</p>
                    <div class="description-metainfo">
                        <span>created by
                            <a href="/hacker/41425-michael" title="Visit Profile">
                                michael
                            </a>
                            <span>&bull;</span>
                            4 days ago
                        </span>
                    </div>

                

            </div>
        </div>

        <div class="container post-content">
            <p>The project breaks down into three main parts.</p><p>1) Seismic sensor</p><p>Basically, I am reporting a new design for a device for the purpose of  responding to the low frequency baseline movements of the earth&apos;s crust. Seismic noise is present everywhere on earth. Some of it is local and some of it arrives from far away. Most useful sensitive seismometers utilize a mechanical moving element with a fixed  resonant frequency. Because noise by definition is a composite of a wide range of frequencies,  for our purposes this  device must not have any significant frequency biases. Mechanical designs therefore can&apos;t be used for this purpose. Piezoelectic seismic accelerometers  are practically frequency independent for seismic purposes and these &quot;geophones&quot; are commercially available, but they are usually insensitive and best used for strong man-made signals in geological exploration. However, piezoelectric pressure sensors still have the potential for high sensitivity. They have no moving parts or resonant frequencies in the seismic range, they have minimal frequency biases and are widely avaiable in the form of high quality microphone elements. Because of our need for frequency independent noise floor analysis, we  needed to design an ultrasensitive inertial piezo instument that pushes it&apos;s  seismic sensitivity to the very limit. </p><p>The design is fixed to a 10 pound walnut base on rubber feet. A sturdy central post supports three 3&quot; chromium steel balls weighing 4 pounds each, suspended and held in place by ceramic magnets. The balls press against the piezo sensors, which are themselves symmetrically arranged 120 degrees apart around the center post.  Each piezo element provides lateral  support to one 4 pound steel ball. Movement of the base and post in any vertical or horizontal direction accelerates the masses and changes the tensor force of the balls against their respective sensors. One of the sensors is aligned to true north as a direction reference. </p><p><img src="https://cdn.hackaday.io/images/1429911439683803548.JPG"></p><p>The base of the device is leveled with a bubble inclinometer. A glass bell jar provides  protection against short term temperature changes and air currents. The electonics are housed in an antique box in keeping with the overall appearance of the system and to &quot;preserve domestic tranquility&quot; with a key occupant of the test facility. The test site is a frame and brick home oriented North/South in a forested suburban location in a very seismically quiet region of Eastern Tennessee. An air conditioning compressor unit mounted on a concrete pad away from the house and an attic heating fan provide intermittent and reproducible sources of manmade seismic frequency noise for test purposes.</p><p><img src="https://cdn.hackaday.io/images/883601439682703987.JPG"></p><p>2) Integrating electronic charge amplifier</p><p>As the base of the device and its center post move vertically and laterally the balls are accelerated by the piezo crystal itself; the sensors then pump a charge (electrons) into or out of the amplifier  An  ultra-high impedance Texas Instruments TL082 JFET op amplifier integrates, time averages and translates this discrete charge to an output voltage which the Arduino digitally processes. There is an identical charge amplifier channel for each of the sensors. Piezo sensors can be considered to be only sources of electrical charge; they are  not primarily sources of sustainable voltage or  current. The amplifier&apos;s high impedance first stage integrates and converts charge to a voltage that can be further amplified and filtered.</p><p>The piezo sensor&apos;s charge output is a function of acceleration.The integral of acceleration is velocity and this (in millivolts) is the primary measurement output of the first stage of the instrument.   In other words, with a high impedance integrating amplifier the data&apos;s magnitude value is an average of how fast the center post of the device is moving as it vibrates, over the time interval that it is being averaged by the first stage.  A second stage frequency cutoff amplifier was added to allow sensitive response to frequencies below a  cutoff that corresponds to the very low frequencies of seismic signals. The cutoff frequency selected for our purpose was 15.4 Hz. Tests show the amplifier to be  quite useful down to the range of 0.01 Hz. The sensitivity of each sensor channel is independently adjustable, to allow for the calibration of minor differences between the sensors. After prototyping, a  circuit board was designed. It&apos;s CAD file was then sent for professional  custom manufacture in a circuit board shop (Pad2Pad). My surface mount soldering is not the best...</p><p><img src="https://cdn.hackaday.io/images/1267491439685521399.JPG"></p><p>Several breadboarded prototype circuits were functional, but the custom circuit board was found to be necessary  to provide the necessary amplifier linearity and electronic noise immunity. The power for the circuit is derived from the Arduino board itself to insure the absence of ground conflicts.  An external  commercial regulated power unit suplies power to the microcontroller board&apos;s own voltage regulator to doubly minimize the effect of line voltage fluctuations.  The charge amplifier design is, of course, released as open source as well. Please contact me if you wish to use this design, as I have a minor change  that I would suggest.</p><p>3) Data processing</p><p>Data acquisition and processing is provided by an Arduino Mega. The program is available at the dropbox location listed and also directly in the build details section of this project. The Arduino has a 10 bit analog to digital converter (because of averaging, this is plenty of resolution but 12 bits would be nicer!).  A SD card shield  and a real time clock (RTC) module were added. When the program starts up it makes assumptions about the actual sensor readings, then averages 1000 actual low-range sensor data readings to roughly calibrate itself to the &quot;zero signal&quot; output of each sensor. It does not report the data during the start-up phase. </p><p>Piezo sensors show small temperature  induced drifts. The program thereafter  self corrects the sensor baselines for instrument drift every thousand low-range data points. It ignores high amplitude readings (&gt;10 mV) for this re-zeroing process; it assumes that higher readings are a non-noise seismic signal instead of low-level noise. </p><p>The program calculates average integrated vector velocity magnitude (millivoltage units) and phase (this corresponds to direction of the velocity on the compass,  in radians from -pi(&quot;south&quot;) to +pi(&quot;south&quot;  again, where  zero = &quot;north&quot;)) and also in the vertical direction (pi/2 to -pi/2) relative to the horizontal plane where zero = horizontal. Each data point is averaged from from 40 A/D readings from each sensor (this number  is set by the &quot;numreadings&quot; variable)  and the actual readings are usually set at 1 msec or more apart. The software  first removes and stores the vertical component from the individual sensor outputs so that only the horizontal components are left. It does this by subtracting the average of all sensor readings from each sensor&apos;s own reading. This is done because the 3 sensor readings due to horizontal movement  must average to zero with this device geometry. This assumes  that all 3 sensors are calibrated to be equally sensitive and equally amplified. Trigonometric calculations are  used to get the X and Y cartesian coordinate values for the vector.</p><p><img src="https://cdn.hackaday.io/images/7181151439687205473.jpg"></p><p> Horizontal and vertical vector angles in radians are then calculated. These angles are internally called &quot;phase&quot; (horizontal direction angle, referenced to true north) and &quot;phase 3d&quot; (vertical elevation angle relative to horizontal). The vector noise amplitude can be thought of as the &quot;loudness&quot; of the seismic noise in the device&apos;s frequency passband and the directional angles as &quot;where it seems to be coming from&quot; in 3 dimensions.</p><p>The Matlab graph below shows the skewed horizontal amplitude (X and Y components only) of the seismic noise activity in the home over several hours at night with human (and canine) activity beginning in the morning.</p><p><img src="https://cdn.hackaday.io/images/2359821439687304904.jpg"></p><p>The following magnified graph from about an hour and a half of the night-time data shows the amount of hidden spatial data that is present in the seismic noise. In this case, the attic heater fan is responsible for the beautiful repeating pattern seen below. This pattern is not visible in the raw sensor data. The lines running down the center of the pattern result from the presence of hourly time reports in the data file and are not part of the actual data.</p><p><img src="https://cdn.hackaday.io/images/8462411439725416921.jpg"></p><p>On 02/28/2015 there was a magnitude 4.4 earthquake near  Eutaw, Alabama, which is approximately 350 miles to the southwest of the instrument in Knoxville. The data in the first diagram below shows the cartesian components and vector amplitude of the seismic signal from this event. The primary function of the device is <strong>not</strong> to act as a traditional seismometer for earthquake detection, but the next 2 graphs are included simply to demonstrate the sensitivity and highly unique features of the system.  The magnitude variable in this graph is the vector magnitude in millivolts, not traditional seismic magnitude.</p><p><img src="https://cdn.hackaday.io/images/3255511439688714264.jpg"></p><p>The next diagram shows the southwest direction of the first arriving longitudinal component of the seismic signal, followed by the slower but stronger transverse waves 90 degrees offset from the longitudinal waves, followed again by a slow return of the signal to the noise floor. On this polar graph, zero is north and 90 is west.</p><p><img src="https://cdn.hackaday.io/images/3306891439688764955.jpg"></p><p>The data is recorded to a comma delimited text file on the SD card. Averaged data points are recorded every 750 milliseconds, but this can be easily changed. The rate limiting process for data acquisition is the write time to the SD card using the SD library that is available for the Arduino. Timing considerations force the frequency of recorded readings downward to 750 msec and data measurement interval upward. A decent sized SD card can hold many years of this data. The program is stable as long as no power interruptions occur, in which case the program simply starts  again. The data file name is changed to the new date at midnight every day. The program also marks off the text file with a date and time stamp every hour on the hour. The number of milliseconds since program startup is recorded with each 750 msec data point, so any activity can be timed exactly back to the last of the hourly clock times recorded.  It can also report the raw sensor data, cartesian vector coordinates and correction factors if desired. The code for this exists but is inactive and &quot;commented out&quot;. It can be uncommented  if these data points are desired, but the SD card writing will take longer with more data to record and so the timing might have to be adjusted. </p><p>Library modules math.h (to do arctan and other trigonometry calculations), spi.h (for SD card), wire.h(to talk to clock in serial), sd.h (to run the SD card), rtclib.h (for real time clock) and string.h (for sd card filename gymnastics) libraries are required. Matlab is used to plot interesting data derived from the SD card, but the device itself requires no external connection to a computer. Earlier versions of the program allow for real-time monitoring of the data graph on an external laptop with graphing freeware. This is useful for calibration of the sensors.</p><p>The program keeps track of where the noise velocity vectors are pointed by assigning them to and counting each data vector in one of 200 &quot;bins&quot; that collectively make up a 2D probability matrix of the 3D noise vectors. Once populated with a large number of readings (such as 100,000 data points over 20.8 hours or 50,000 data points over 10.4 hours) this matrix accurately describes the spatial probability distribution of the seismic noise in its local geologic environment . The actual probability of any single measurement being assigned to any one bin in a 100,000 data point matrix would be 0.005 if the distribution is completely random, therefor each bin should have accumulated 500 vectors on average after the matrix is populated.</p><p>The following graph displays the location of the noise vectors over a 24 hour period. On the X axis, 0 is North and  both -pi and +pi are South. The Y axis ranges from straight up at pi/2 to straight down at -pi/2. The graph  illustrates that the actual seismic noise vibrations from the air conditioning compressor are entrained into a North/South mode in this North/South oriented frame and brick home. The air conditioner compressor was intermittently on when this data was collected.</p><p><img src="https://cdn.hackaday.io/images/5539351439936089956.jpg"></p><p>The Matlab contour plot below expresses the data from the probability matrix itself  3 days later. This time,  the Y axis reflects the bin number of the horizontal (North/South, East/West) vector component and the X axis reflects the bin number of the vertical vector component.<br></p><p><img src="https://cdn.hackaday.io/images/750701439686098056.jpg"></p><p><img src="https://cdn.hackaday.io/images/4346021439686619037.jpg"></p><p>The graphical plot above is simply another Matlab presentation of the probability matrix data from 100,000 points on a different day, showing the consistency of the house&apos;s seismic noise &quot;fingerprint&quot; when the compressor is active. Whereas the first graph is a 2D presentation, this presentation is 3D. <br></p><p>The following graph shows the distribution of the home&apos;s vibration vectors induced by the attic fan as opposed to the air conditioning compressor. The vectors are more constrained in the vertical plane and the North/South orientation is shifted slightly.</p><p><img src="https://cdn.hackaday.io/images/4749471439727633982.jpg"></p><p>I am trying to work with a  3D probability matrix that places each data point into one of 2000 bins based on spatial direction <strong>and</strong> velocity vector amplitude  in another version of this program. It would accumulate one million data points for 8.5 days before the matrix is finally populated. It is likely that I will have to go to another microcontroller platform for this, unless I can get the Arduino Mega to accept an array this large.   The reason for the more complex data matrix is that the 2D matrix distribution map is different for low amplitude noise vs. higher amplitude noise. In other words, there is yet more information to be had in the seismic noise spectrum.</p><p>The  2D probability matrix used in the current version is essentially like a Mercator map projection of the probability of any given vibration vector pointing from each 3D direction relative to the center of the seismometer. Theoretically, any persistent linear vibration will eventually populate 2 bins, one at each pole of the vibration; the bins will be 1 radian (180 degrees) apart in 3D space. Remember from geography class that mercator maps of the earth have distortions - the amount of &quot;area&quot; in each bin is therefore not constant. This is not a problem at all for what this table is used for but if one needs to do quantitative work with these probability tables, one would have to make minor modifications to this part of the code.</p><p>Once the probability matrix has been populated (and even as it is being populated) another real-time parameter (called probTotal) is calculated  as new data comes in. Each new data point is evaluated as to which bin it would belongs to and then the reference value from that bin is added to the reference value from the last 99 data points. If this probTotal value was divided by 5,000,000 (50,000 x100) it would be essentially a precise numerical assessment of how probable or &quot;normal&quot; the spatial distribution of the last 100  measurements (75 seconds) have been when compared with the 50,000 data point baseline. In practice it is not necessary to divide probTotal by 5,000,000 in order to save microprocessor time. </p><p>The following graph shows the noise output of one of the sensors over a period of over one hour in green, with the probTotal value in blue. The vertical lines are one hour apart. The presence of the intermittent air conditioning compressor component is completely lost in the green non-spatial raw sensor noise (millivolts * 1000 , for graph scaling), but it is dramatically evident in the probTotal data. <strong>This is the graph that best presents the take home message of this project up to this point.</strong> Namely, there can be a significant amount of  hidden spatial information in low frequency seismic noise. It  clearly documents and supports  the possible potential of this kind of statistical noise analysis to predict seismic activity, if new low level noise from an unusual location precedes the catastrophic slippage of local fault lines.</p><p><img src="https://cdn.hackaday.io/images/5054701439688092206.jpg"></p><p> If the baseline matrix table is completely random and structureless, this algorithm would not show any change because all the bins will be approximately equal - it will only show a change if the location&apos;s characteristic baseline noise is somehow structured by the local geology and then  there is a new source of spatially unique seismic noise.  The more complex the local area is, the more sensitive the instrument should be. It is known that local geology does  affect seismic wave conduction velocity, wave reflection  and arriving wave interactions, so every unique location will be expected to have its own nonrandom &quot;noise signature&quot;, as our test location indeed does. Our hypothesis that any new local noise source related to the initial onset of rock deformation prior to a major earthquake might stand out like a sore thumb from the background statistics.</p><p>A note - Lots of variables, more than needed, have been declared in this program. This is inefficient and is usually  bad programming, but here  it is actually for the purpose of making it easier for others to follow along and debug the flow of the work being done. I am hoping that this project will be picked up by others. The program is quite long, but I have made every effort to annotate the steps so that someone can come along behind me and  adapt it to their own use. I have freely used snippets from the Arduino code library. If I have otherwise unknowingly re-created someones&apos;s previous work, a) my apologies! and b) please let me know so that I can try to give priority and credit where credit is due. This underlying idea is open source, and the instrument, program and electronic designs are open source. If you can make money from this idea, all the more power to you.</p><p> Likewise - if anyone in the open source community improves on this work, a) thank you and b) please let me know.  Let&apos;s work together!  Earthquakes always seem to devastate the poorest of the poor. There have been many hundreds of thousands of deaths and millions maimed in the last century. <em><strong>The developed world has already forgotten the 300,000+ deaths in Haiti 5 years ago, the 655,000 deaths in China in 1976 and the 228,000 deaths in Sumatra in 2004. It is outrageous and inhuman for us to accept the prevailing attitude that this kind of misery and pain is unstoppable</strong>.</em> If meaningful earthquake prediction is going to happen at all, it&apos;s possible that it is going to come from this kind of previously untested seismic noise analysis.  This project&apos;s basic device has been proven for what it is, but it needs to be redesigned, ruggedized,  tested on bedrock in seismic zones, criticized,  standardized and packaged into an inexpensive device; it will require a team of committed people with different skills.<br></p><p>Summary:</p><p>A open source and working 3D noise vector seismic instrument has been designed, built and tested. It is ultra-sensitive, gives strong data in the noise floor and it clearly detects major signals not otherwise visible in the noise background of the test site. Unlike any previous seismometer, it&apos;s primary output is not it&apos;s vibration data but instead a statistical  value - probTotal-  that is an assessment of the spatial normalcy of the ambient noise in its own unique geological environment.  I  hope that eventually this kind of noise vector analysis could be done by a cluster network of communicating instruments surrounding urban locations near fault lines. Such a cluster might be able to triiangulate on and identify unusual local seismic noise in order to give short term warning for strong local seismic events. Such a warning would allow precious seconds or minutes for evacuation of buildings in populated areas. </p><p>Michael C. Doody MD PhD</p><p>michael@doody.org</p><p>Knoxville, Tennessee</p><p>8/16/2015</p>
        </div>

        

        

    

    <div class="j-modal-confirmation modal-background"></div>
<div class="j-modal-confirmation modal-content-holder">
    <p class="align-center" id="modal-message"></p>
    <p class="align-center"><a class="medium-button gold-gold-button delete-project-button" id="modal-yes" href="">Yes, delete it</a> <a class="medium-button grey-gold-button cancel-button" id="modal-cancel">Cancel</a> </p>
</div>
    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = '3oWbJnlg-KWq9X5mEWWkbKGr7BMoDX2toOjE';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_post&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    
    
    
    

    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbpIGEWjpnPaaIvcAHwzCnxb%2FHLKGUM1bvoOeG5HC0xFU9LJ%2B910rZ72abfN8vxNDn41XRsK%2BvNLzydIft0iwmMulI7CjfWKAELKuUfOMCuUWjmKstkIZy4LyUZZqGjubUq7baOpUEVdpT0W01PyzlwivRvc7EDpLluqPEa2JX%2FBw%3D%3D-0.48.6.js"></script>

</body>
</html>