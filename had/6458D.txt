<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en"> <!--<![endif]-->
<head>
    <title>Details &bull; The Humble Roots Project &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
        <script type="text/javascript">
        function getCommentIdFromUrl() {
            if(window.location.hash) {
                var hash = window.location.hash.substring(1);
                var commentId = parseInt(hash.replace('j-discussion-', ''));
                if (commentId) {
                    return commentId;
                }
            }
            return null;
        }

        var commentId = getCommentIdFromUrl();
        if (commentId) {
            var url = window.location.href;
            if (url.indexOf('?') > -1) {
                url = url.substring(0, url.indexOf('?'));
            }
            if (url.indexOf('#') > -1) {
                url = url.substring(0, url.indexOf('#'));
            }
            url += '/discussion-' + commentId;
            window.location.href = url;
        }
    </script>
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body>

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fpost%2F20242">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    

        <div class="headline">
            <div class="container">
                

                    

                    <h2>Project Details</h2>
                    <p class="description-title">
                        For <a href="/project/6458">The Humble Roots Project</a>
                    </p>
                    <p class="description-summary">Home Automation Applied To Medical Cannabis Cultivation</p>
                    <div class="description-metainfo">
                        <span>created by
                            <a href="/hacker/50083-fabien-royer" title="Visit Profile">
                                Fabien Royer
                            </a>
                            <span>&bull;</span>
                            2 months ago
                        </span>
                    </div>

                

            </div>
        </div>

        <div class="container post-content">
            <h1>Inspiration</h1><p>In 2013, the <i>Humble Roots Project</i> was born
out of a need to <a href="http://www.doh.wa.gov/ForPublicHealthandHealthcareProviders/HealthcareProfessionsandFacilities/MedicalMarijuanaCannabis">grow
medical cannabis indoors legally</a>, using sustainable, organic,
<a href="http://agr.wa.gov/FP/Pubs/docs/398-WSDACriteriaForPesticideUseOnMarijuana.pdf">pesticide-free</a>
cultivation methods capable of producing consistent yields, in both
quality and quantity.</p><p>Medical cannabis patients and caretakers who have
determined that investing in their own garden is financially sound
and healthy still face several challenges: <a href="http://www.seattletimes.com/seattle-news/for-pot-yield-of-growersrsquo-dreams-fickle-plants-need-constant-care/">cannabis
can be tricky to grow</a>, requires <a href="http://blogs.seattletimes.com/pot/2014/08/18/from-seed-to-sale-challenges-abound-for-licensed-pot-growers/">constant
care and a well-controlled climate</a> in order to thrive. 
</p><p>While commercial greenhouse automation controllers
are well-suited for this task, they're also expensive, proprietary,
closed source solutions. Small scale growers typically resort to
using 'low-tech' or 'no tech' solutions (i.e lights and irrigation on
timers, climate control using a basic thermostat and humidistat) at
the <a href="http://www.growweedeasy.com/7-step-remedy">risk of
losing entire crops</a>.</p><p>The <i>Humble Roots </i><i>Project </i>was built
to fill the gap between commercially available automation systems and
low-tech solutions. By automating the control of key processes, and
by following some basic best practices, the <i>Humble Roots Project</i>
empowers gardeners with the knowledge and the tools needed to reduce
certain classes of risks, to minimize manual labor and to conserve
precious resources, such as water and power.</p><p>To mitigate the steep learning curve associated
with cannabis cultivation, the <i>Humble Roots Project</i> aims to
provide recipes for growing different types of plants. A recipe is a
complete plan for managing the growth cycle of a plant from
seed/clone to harvest, including variables such as watering and
feeding schedules, lighting schedule, temperature and humidity
control, among others. The recipes are meant to educate and guide the
budding gardener, as well as allowing a master grower to experiment
with and fine-tune the quality and consistency of her yields.</p><h2>Indoor
	Growing Basics</h2><p>In order to understand the components of the
<i>Humble Roots </i><i>P</i><i>roject</i>, it is worth covering the
basic requirements for indoor growing, such as:</p><ul>
	<li>
	Garden Space and Equipment</li><li>
	Plants and Growing Medium</li><li>
	Control System</li></ul><h2>Garden
	Space</h2><p>An indoor garden should be a secure, insulated
space that keeps out moisture, heat and cold, pests and unfiltered
air. Here, the <i>Humble Roots Project </i>is
a 9' x 12' ft indoor garden space built inside of a
home car garage. The following diagram provides a simplified view of
the Humble Roots garden space as it is organized today. It will be
referenced when discussing the integration of the environment with
the devices, hardware and software used to control it. The space is
reconfigurable and uses parts commonly available on-line or from
local hardware stores and nurseries.</p><p>The elements that need to be considered when
setting up an indoor garden space are: thermal efficiency, lighting
efficiency, water treatment, water conservation and air quality
control.</p><p><img src="https://cdn.hackaday.io/images/701801435945207687.png"></p><h2>Thermal Efficiency<br></h2><p>When
designing an indoor garden, it is important to make sure the room has
high thermal efficiency. Thermal efficiency is important because it
has a direct impact on the resources dedicated to heating and cooling
the garden space.<br></p><p> For the <i>Humble Roots Project</i>, the garden
is located in a room elevated above ground to prevent the floor from
getting too cold during the winter months. The floor, the walls and
the ceiling are filled with <a href="http://energy.gov/energysaver/articles/tips-insulation">R21
insulation material</a>. The insulated material is sandwiched between
two plastic moisture barriers. The door is made of metal, can be
locked and seals tightly with its frame. Because the room is well insulated, it allows for
semi-passive cooling and saves a great deal of energy in the process
since an air conditioning unit is not required. Passive cooling relies on a temperature
differential between cool outside air and warm air inside of the
room. A fan draws cool air inside the room while exhausting warm air.</p><p>Running the system at night, when lights are on,
ensures that the temperature difference between the two zones is
adequate for passive cooling. It also makes operating the garden
cheaper since the cost of grid power drops dramatically during
off-peak hours.</p><p>Louvers automatically lift when air enters the
space and shut themselves off afterward, preventing light, air and
smells from leaking in or out of the garden. This makes the room
ideal for growing and curing cannabis after harvesting. We will see
later how software contributes to achieving a climate equilibrium and
further contributes to saving energy.</p><h2>Lighting Efficiency</h2><p>The
largest power consumer in an indoor garden is the lighting. For that
reason, it is important to ensure that it is as efficient as
possible: as much light as possible needs to be usable by the plants
while keeping the amount of heat produced by the light down to a
minimum.</p><p> The <i>Humble Roots Project</i> uses two LED
lamps, totaling 885 Watts, to illuminate the ~4.5' x 4.5' planted
area from above and from one side. The room is painted flat white,
from floor to ceiling, making for a very bright environment,
maximizing the lamps' output.</p><p> LED lights were chosen for their efficiency:
they're engineered to only emit light in the blue, red, IR and
Ultraviolet (A) parts of the spectrum, which plants thrive on. Nearly
all of the green portion of the spectrum is eliminated as it is
useless for photosynthesis and therefore, saves energy. These lamps
produce little heat, which makes passive cooling possible.</p><p> The power of the lamps is sufficient to penetrate
through canopy foliage and promotes heavier growth even in the lower
parts of the plants.</p><p>Finally, LED lamps do not require electronic
ballasts, further reducing heat, wiring complexity and potential
failure points. Efficiency and reduced part count both help offset
the higher cost of LED lamps compared to other lamp types.</p><h2>Water Treatment and Conservation</h2><p>Water
management in an indoor garden is often the most problematic aspect
that needs to be addressed: first, cannabis plants are particularly
sensitive to water quality. Second, managing water indoors can be a
labor intensive task if there's no infrastructure in place to ease
the process.</p><p> In the <i>Humble Roots </i><i>P</i><i>roject</i>,
a copper pipe brings cold city water into the garden space. Another
PVC pipe leading to the sewers is used to drain out the gray water
out of a sump. 
</p><p>City water quality varies greatly depending on
where you live but even good quality city water invariably contains
additives, such as Chlorine or <a href="http://en.wikipedia.org/wiki/Chloramine">Chloramine</a>
as well as other minerals that will negatively impact cannabis
plants. If left unfiltered, these minerals and metals can lead to
toxicity or deficiencies in the plants. Therefore, it is wise to
'scrub' city water with a carbon filter or a reverse-osmosis system
before using it in a cannabis garden.</p><p>There are efficiency trade-offs to be considered with different water
treatment methods: for instance, a reverse-osmosis system produces
some 'waste water' and carbon filters eventually need to be replaced.
</p><p> While Chlorine just evaporates when left to air
out for a few days, Chloramine takes much longer to dissipate and
that water can be problematic to store in the meantime and can add
unwanted humidity to the air.</p><p> Carbon filtering and reverse-osmosis have both
been used successfully as part of this project. The operation of the
reverse-osmosis system is controlled through a solenoid valve and an
ultrasonic distance sensor monitoring the water level in a holding
tank.</p><p> Assuming that water has been properly
conditioned, it still must be applied with care: too much water will
prevent the root system from accessing oxygen, stunting and
eventually killing the plant. Too little water and the plant will
starve, dry out and die too. Accurately tracking and maintaining an
optimal moisture level in the growing medium is not only beneficial
to the plants, it is also beneficial to our drought-stricken
environment: by using smart irrigation techniques, one can grow a
very healthy patch of plants with less water per day than is required
to flush an average toilet just once. A custom irrigation system was
built to meet this goal, combining a soil moisture probe buried
root-deep in one of the pots with a water distribution 'network'
going to each plant. Software determines when to irrigate and how
much.</p><p>Some growing techniques consume larger amounts of
water than others: for instance, growing with a hydroponic system,
except <a href="https://en.wikipedia.org/wiki/Aeroponics">Aeroponics</a>,
 requires far more water than growing in soil, regardless of scale.
For this reason, the <i>Humble Roots Project</i> favors soil as its
growing medium. A good soil mix retains just the right amount of
moisture, is well oxygenated and provides a strong buffer against
sudden pH fluctuations. Soil can also be re-used when cared for and
amended properly.<br></p><p><span class="redactor-invisible-space">The run-off
water coming from irrigating the plants, from the reverse-osmosis
system and from the dehumidifier drain into a 'sump', made from three
5-gallon buckets linked together. When the water reaches a defined
level, as measured by an ultrasonic distance sensor, it is
automatically pumped out to the sewers.<br></span></p><p><span class="redactor-invisible-space"><span class="redactor-invisible-space">Once combined with nutrients, the pH balance of
the water is extremely important to test and adjust, regardless of
the growing medium:<a href="https://planetpermaculture.wordpress.com/2013/07/25/ph-chart-showing-nutrient-availability/">
it affects the availability of nutrients</a> to the plants and the
plants' ability to uptake water. This is addressed in the grow
recipes driving the automation. It also ensures that the run-off
water pumped out to the sewers is as close to being pH neutral and as
nutrient-free as possible.<br></span></span></p><h2>Air Treatment</h2><p>Maintaining excellent air quality is vital to grow
a healthy garden: filtering out contaminants such as spores, pollens,
dust, mites, is key to preventing a host of problems that can quickly
destroy a crop.<span class="redactor-invisible-space"> For that reason, in the <i>Humble Roots Project</i>,
all the air entering the garden is filtered through a <a href="http://en.wikipedia.org/wiki/Minimum_efficiency_reporting_value">MERV
12</a> box filter.<span class="redactor-invisible-space"> Similarly, it is also critical to maintain an
optimal range for air temperature, relative humidity and CO2 levels,
as they also impact the growth of the plants and the amount of resin
produced by cannabis flowers.</span></span></p><p><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space">Air temperature within the grow room is controlled
by a powerful in-line fan exhausting hot air through an activated
carbon filter, scrubbing the air and removing odors in the process.
Note that the filter is mounted outside of the room: this is slightly
less efficient than mounting the carbon filter on the inside,  but
the gain in space is worth the small efficiency trade-off in this
case.</span></span></span></p><p><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space">A constant air
flow is maintained within the room, thanks to a fan circulating air
around the plants.<br></span></span></span></span></p><p><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space">The relative humidity within the room is
controlled through a small dehumidifier unit, keeping molds, such as
<a href="http://en.wikipedia.org/wiki/Powdery_mildew">Powdery Mildew</a>
and <a href="http://edrosenthal.com/2012/08/ask-ed-marijuana-grow-tip-44-the-botrytis-solution.html">Botrytis</a>,
from being able to develop.<br></span></span></span></span></span></p><p><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space">Controlling air moisture levels also improves the
performance of the activated carbon filter by preventing carbon
particles from 'clumping' together when excessively humid air passes
through it.<br></span></span></span></span></span></span></p><p><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space"><span class="redactor-invisible-space">It's worth mentioning that relative humidity
sensors built into consumer-grade appliances often lack in accuracy.
The <i>Humble Roots Project</i> takes this issue into account by
using precise sensors so that inexpensive consumer appliances can be
controlled accurately.<br></span></span></span></span></span></span></span></p><h2>Plants And Growing Medium</h2><p>To make the most of the light available to them,
each plant is potted in a 3.5 gallon bucket, allowing for a healthy
root system and foliage to develop but not so large that competition
for light resources becomes an issue. A screen mesh helps with training the plants to
grow uniformly wherever light is available and helps support the
stems during the flowering phase of the growth. The 'planter buckets'
are inserted in water collection buckets, all leading to a sump
through gravity and flexible tubing.</p><h1>The Control System</h1><p><img src="https://cdn.hackaday.io/images/2075931435680063337.png" width="617" height="424" alt="Humble Roots Project Architecture" style="width: 617px; height: 424px; display: block; margin: auto;"></p><p>The control system of an indoor garden is what
allows a gardener to work “smart” instead of working hard. In
addition, a control system is vital for ensuring consistent harvests
in both quality and quantity.</p><p>The
<i>Humble Roots Project</i> regulates the functions of the garden
thanks to the following elements:</p><ul>
	<li>Wireless sensor nodes (433 MHz <a href="https://lowpowerlab.com/shop/index.php?_route_=Moteino">Moteino</a>
	boards) collecting data such as the relative humidity of the soil
	and of the air, room temperature and water levels along with battery
	power and signal strength telemetry. These sensor nodes spend most
	of their time asleep and can run on batteries for months.</li><li>Actuators, also interfaced with <a href="https://lowpowerlab.com/shop/index.php?_route_=Moteino">Moteino</a>
	boards, connected to switches (relays and MOSFETs) drive the lights,
	the heat venting fan, the dehumidifier, the sump pump, the air pump
	and the irrigation pump. The reverse-osmosis filter is controlled by
	a solenoid valve powered through a MOSFET switch. Unlike the
	sensors, the actuator nodes run on mains power and remain ON at all
	times.</li><li>A gateway node listens for sensor data and
	application commands to be relayed to actuators. The gateway node
	publishes the received sensor data as <a href="http://mqtt.org/">MQTT</a>
	messages to be consumed by the rest of the application. Both the
	sensor data and application commands are short, URL-encoded strings
	(see the excerpt below), making it easy to integrate and communicate
	with other types of systems.</li></ul><pre class="hljs ini"><span class="hljs-setting">ts=<span class="hljs-value"><span class="hljs-number">1435942194</span></span></span>
<span class="hljs-setting">node=<span class="hljs-value"><span class="hljs-number">40</span>&amp;rssi=-<span class="hljs-number">73</span>&amp;t=clm&amp;bat=<span class="hljs-number">3.75</span>&amp;low=<span class="hljs-number">0</span>&amp;pwr=<span class="hljs-number">0</span>&amp;tmp=<span class="hljs-number">25.63</span>&amp;rh=<span class="hljs-number">53</span>&amp;ts=<span class="hljs-number">1435942199</span></span></span>
<span class="hljs-setting">node=<span class="hljs-value"><span class="hljs-number">20</span>&amp;r=<span class="hljs-number">2</span>&amp;cmd=act&amp;s=<span class="hljs-number">1</span>&amp;tok=R3adA</span></span>
<span class="hljs-setting">node=<span class="hljs-value"><span class="hljs-number">20</span>&amp;r=<span class="hljs-number">2</span>&amp;cmd=act&amp;s=<span class="hljs-number">1</span>&amp;tok=R3adA&amp;tx=ack&amp;ts=<span class="hljs-number">1435942199</span></span></span>
<span class="hljs-setting">node=<span class="hljs-value"><span class="hljs-number">20</span>&amp;r=<span class="hljs-number">0</span>&amp;cmd=act&amp;s=<span class="hljs-number">0</span>&amp;tok=Dgn1B</span></span>
<span class="hljs-setting">node=<span class="hljs-value"><span class="hljs-number">20</span>&amp;r=<span class="hljs-number">0</span>&amp;cmd=act&amp;s=<span class="hljs-number">0</span>&amp;tok=Dgn1B&amp;tx=nack&amp;ts=<span class="hljs-number">1435942200</span></span></span>
<span class="hljs-setting">node=<span class="hljs-value"><span class="hljs-number">20</span>&amp;r=<span class="hljs-number">0</span>&amp;cmd=act&amp;s=<span class="hljs-number">0</span>&amp;tok=J0rpP</span></span>
<span class="hljs-setting">node=<span class="hljs-value"><span class="hljs-number">20</span>&amp;r=<span class="hljs-number">0</span>&amp;cmd=act&amp;s=<span class="hljs-number">0</span>&amp;tok=J0rpP&amp;tx=ack&amp;ts=<span class="hljs-number">1435942200</span></span></span>
<span class="hljs-setting">node=<span class="hljs-value"><span class="hljs-number">20</span>&amp;rssi=-<span class="hljs-number">62</span>&amp;t=rly&amp;bat=<span class="hljs-number">5.00</span>&amp;low=<span class="hljs-number">0</span>&amp;pwr=<span class="hljs-number">1</span>&amp;r=<span class="hljs-number">0</span>&amp;s=<span class="hljs-number">0</span>&amp;ts=<span class="hljs-number">1435942200</span></span></span>
<span class="hljs-setting">node=<span class="hljs-value"><span class="hljs-number">4</span>&amp;rssi=-<span class="hljs-number">54</span>&amp;t=lvl&amp;bat=<span class="hljs-number">1.77</span>&amp;low=<span class="hljs-number">1</span>&amp;pwr=<span class="hljs-number">0</span>&amp;cm=<span class="hljs-number">23.99</span>&amp;ts=<span class="hljs-number">1435942203</span></span></span> 
</pre><ul>
	<li>Independent application processes (<i>Gateway,
	DB, Control and Notify</i>) subscribe to sensor data messages and
	react to them. The <i>Gateway</i> process interfaces with the
	gateway node over a serial port and therefore, must run on the same
	physical machine. The other processes can be distributed to separate
	machines as needed. The <i>DB</i> process writes to a time-series
	database (<a href="http://influxdb.com/">InfluxDB</a>) feeding
	<a href="http://grafana.org/">Grafana</a> dashboards; the <i>Control</i>
	process compares sensor data messages against a user-defined rule
	set and determines what commands need to be issued to actuators or
	to other application processes. It also manages time-based rules and
	configuration changes and last, but not least, executes growth
	recipes. The <i>Notify</i> process listens for <a href="https://www.pushbullet.com/">push
	notifications</a>, such as <a href="https://ifttt.com/recipes">IFTTT
	commands</a> originating from mobile devices. It also pushes
	notifications back to mobile devices: for instance, <i>Notify</i>
	can respond to an alert raised by the <i>Control</i> process by
	sending an SMS message or it can forward a status report whenever
	requested, among other scenarios. The processes are written in
	<a href="https://www.python.org/">Python</a> (2.7.x) to maximize
	portability and will run fine even on a resource-constrained 1st
	generation <a href="https://www.raspberrypi.org/">Raspberry Pi</a>.</li><li>The <i>Camera</i> process takes pictures of
	the garden every hour and serves them over HTTP. The hardware used
	for that purpose is a Raspberry Pi equipped with a camera module,
	but anything else can be used. The images are meant to observe the
	impact of recipe changes over time and to produce <a href="https://www.youtube.com/watch?v=OL0RneAysnU">fun
	plant growth time lapses</a>.</li></ul><h2>Python, MQTT, Arduino and life at 433 MHz<br></h2><ul>
</ul><p>These technologies were chosen for a simple
reason: they're inexpensive, open, well documented and capable of
running just about anywhere without being bound to a specific vendor
platform: considering the constant stream of development boards
coming on the market, it seemed wise for this project to abstract the
underlying hardware and the operating system as much as possible.
Python, MQTT and Arduino all support this goal.</p><p>The choice of using 433 MHz radios from HopeRF
deserves a more in-depth explanation: the application doesn't care
what the underlying communication link is and from that standpoint,
WiFi and Bluetooth would work equally well. For instance, you could
mix and match or swap out the <a href="http://lowpowerlab.com/moteino/">Moteino</a>
nodes for <a href="https://www.particle.io/">Particle</a> cores,
<a href="https://punchthrough.com/bean/">LightBlue</a> beans,
<a href="http://www.theairboard.cc/">AirBoards</a> or any other
flavor of '<a href="http://en.wikipedia.org/wiki/Internet_of_Things">IoT</a>'
board without the rest of the application knowing about it.</p><p>However, in this instance, using HopeRF <a href="http://www.hoperf.cn/upload/rf/RFM69-V1.3.pdf">RFM69x
433 MHz</a> radios had several benefits over the alternatives:
because they operate at a lower frequency, these radios work well
against obstacles while consuming very little power during
transmissions (16mA to 45mA) and can be put to sleep to conserve
power. Yet, they maintain a very good range, appropriate for indoor
and outdoor applications on our 'homestead'. WiFi alternatives
consumed too much power (~150mA) to be viable for extended
battery-powered scenarios. <a href="http://en.wikipedia.org/wiki/Bluetooth_low_energy">Bluetooth
Low Energy</a> sips power just like the RFM69x radios, but it
operates at 2.4 GHz which doesn't work well in point-to-point
topologies with no line of sight between transceivers. Since cost was
a concern, deploying a mesh network to work around obstacles was out
of the question, even though the HopeRF radios can be configured to
work in a mesh topology if necessary. <a href="https://en.wikipedia.org/wiki/ZigBee">ZigBee</a>,
Xbee, and <a href="https://en.wikipedia.org/wiki/Z-Wave">Z-Wave</a>
transceivers were disqualified for the same reasons as the Bluetooth
LE option and the HopeRF radios emerged as the best wireless solution
given the constraints of this project.</p><span></span><h1>Hardware</h1><h2>Sensors</h2><ul>
</ul><p>To make the <i>Humble Roots Project</i> as easy as
possible for others to reproduce, readily available hardware sensors
were used (see the <a href="https://github.com/fabienroyer/humble-roots">Project
Repository</a> for the bill of materials). The criteria for selecting
the sensors were: precision, reliability, durability, availability
and cost.</p><h2>Measuring Relative Soil Humidity</h2><p> Because all the plants have the same genetics,
the same age, use the same soil mix, are planted in identically-sized
pots and receive the same amount of light, they tend to behave in the
same way as far as water consumption goes. Therefore, one analog
capacitive soil moisture <a href="http://www.vegetronix.com/Products/VH400/">probe</a>
is used to measure the relative humidity of the soil within a single
pot representative of the rest of the plants, which substantially
reduces hardware costs and complexity.</p><p>The
probe used by the project is a closed hardware sensor unfortunately
but it has key advantages over several open hardware alternatives:
the probe responds extremely fast to relative humidity changes and
cannot corrode in the soil since there's no exposed metal parts.<br></p><p> Most importantly, the probe is thin and entirely
waterproof and can be buried deep into the soil where the plant's
root ball is densest. Burying the probe well below the soil's surface
provides excellent visibility into the actual relative humidity of
the soil and in return, ensures that the irrigation system can be
controlled accurately. The probe and the wireless Moteino node
reading it are both powered via a <a href="https://lowpowerlab.com/shop/index.php?_route_=all-products/mightyboost">MightyBoost</a>
power supply backed by a Li-Po battery.</p><h2>Measuring
			Relative Air Humidity and Temperature</h2>As mentioned above, the relative humidity of the air as well as the ambient temperature must be controlled accurately to prevent potentially serious problems from developing in the grow room. To this end, a Moteino <a href="https://lowpowerlab.com/shop/index.php?_route_=weathershield">WeatherShield</a>. featuring an I2C <a href="http://www.mouser.com/ds/2/368/Si7021-A20-519770.pdf">Si7021</a>. temperature &amp; humidity sensor as well as a <a href="http://www.bosch-sensortec.com/en/homepage/products_3/environmental_sensors_1/bmp180_1/bmp180">BMP180</a>. atmospheric pressure sensor were used to measure air quality. The node is powered by a <a href="https://lowpowerlab.com/shop/index.php?_route_=powershield">PowerShield</a>. supply also backed by a Li-Po battery. The temperature data is used to drive the vent fan while the relative humidity data drives the dehumidifier.<h2>Measuring Water Levels<br></h2><ul>
	
</ul><p><a name="__RefHeading__1308_115441676"></a> In
order to determine the level of water in the sump and water holding
tanks, inexpensive, yet accurate <a href="https://lowpowerlab.com/shop/index.php?_route_=HC-SR04">HC-SR04
</a><a href="https://lowpowerlab.com/shop/index.php?_route_=HC-SR04">ultrsonic
</a><a href="https://lowpowerlab.com/shop/index.php?_route_=HC-SR04">sensors</a>
are used to evaluate the distance between the surface of the water
and the sensor: the shorter the distance returned by the sensor, the
higher the water level. For the sump, a rule determines when the water
level requires activating the pump draining the water to the sewers.
For the water holding tank, another rule determines if the solenoid
valve controlling the reverse-osmosis filter should be activated. In
both cases, the sensors are powered through 5V phone charger supplies
feeding the sensors and the Moteino nodes. They will eventually make
use of Li-Po backed power supplies as well.</p><h2>Actuators</h2><ul>
	
</ul><p>For the actuator nodes, a couple of custom devices
needed to be created: when the project started, suitable alternatives
were unavailable at affordable prices or had inadequate power
specifications for the tasks at hand. Now that countless 'IoT'
devices have flooded the market, it may be possible to substitute
these custom devices with 'off the shelf' solutions and some software
integration work but for the time being, that topic is out of scope.</p><h2>The Relay Switch Box</h2><p>The 'relay switch box' can control six different appliances, which can be turned ON or OFF through mechanical relays, up to 16A @ 240V. A single power cord connects the mains to the switch box.On the inside, a 5V power supply is used to energize the relays and powers the Moteino node driving their operation. This switch box was initially controlled through a custom 'I2C over Ethernet' interface for which the Moteino node was a simple drop-in replacement, leaving some extra space and holes in the case. Panel-mount outlets are supported by a custom laser-cut aluminum plate, ensuring that the case is sturdy and can handle the force applied when inserting and removing power plugs. The switch box case is made of flat white laser-cut acrylic, which maximizes the amount of light reflected toward the plants.</p><h2>The Valve Switch Box
	
</h2><p> To
ease working with solenoids, a custom board was designed, capable of
driving eight <a href="https://en.wikipedia.org/wiki/MOSFET">N-Channel
Power MOSFET</a>s. In the context of this project, a single 12V / 3A
solenoid valve is needed to manage the reverse-osmosis water filter,
making for simple power requirements and eliminating the need for
heat sinks on the MOSFETs. A
recycled 12V / 5A laptop power supply turned out to be ideal for
powering the solenoid and the micro-controller at the same time since
the voltage regulator on the Moteino board accepts DC inputs up to 16
volts. A single 470uF electrolytic capacitor decouples
the Moteino controller from its power supply, preventing
brownout-induced resets whenever a solenoid is energized.</p><h1>Recipe-Driven
	Automation Rules</h1><p>All automation operations in the project are
driven through a set of rules generated from plant growth models
called 'recipes'. A recipe breaks down the growth cycle into time
periods of varying durations. For each day within a specific period
of time, the recipe provides all the relevant parameters driving the
climate control system, the irrigation, the light cycles as well as
the exact feeding schedule for the plants. Some of these parameters
are used as automation rules while others are directed to the
gardener via notifications about what needs to be done on a given
day. The interface used to create the recipes is a simple spreadsheet
at the moment but a mobile application is in the works.</p><p>The
parameters defined by the recipe result in <a href="http://json.org/">JSON</a>
rules driving the automation and alerts.</p><pre class="hljs json">	<span class="hljs-string">"clm"</span>: [{
		<span class="hljs-string">"enabled"</span>: <span class="hljs-number">1</span>,
		<span class="hljs-string">"node"</span>: <span class="hljs-string">"climate"</span>,
		<span class="hljs-string">"value"</span>: <span class="hljs-string">"tmp"</span>,
		<span class="hljs-string">"on"</span>:  {<span class="hljs-string">"op"</span>: <span class="hljs-string">"&gt;"</span>,  <span class="hljs-string">"setpoint"</span>: <span class="hljs-number">24.0</span>, <span class="hljs-string">"cmd"</span>: <span class="hljs-string">"node=relay&amp;cmd=act&amp;r=vent&amp;s=on"</span>},
		<span class="hljs-string">"off"</span>: {<span class="hljs-string">"cmd"</span>: <span class="hljs-string">"node=relay&amp;cmd=act&amp;r=vent&amp;s=off"</span>},
		<span class="hljs-string">"alert"</span>: {<span class="hljs-string">"op"</span>: <span class="hljs-string">"&gt;="</span>, <span class="hljs-string">"setpoint"</span>: <span class="hljs-number">30.0</span>, <span class="hljs-string">"title"</span>: <span class="hljs-string">"High temperature alert"</span>}
		},
		{
		<span class="hljs-string">"enabled"</span>: <span class="hljs-number">1</span>,
		<span class="hljs-string">"node"</span>: <span class="hljs-string">"climate"</span>,
		<span class="hljs-string">"value"</span>: <span class="hljs-string">"rh"</span>,
		<span class="hljs-string">"on"</span>:  {<span class="hljs-string">"op"</span>: <span class="hljs-string">"&gt;"</span>,  <span class="hljs-string">"setpoint"</span>: <span class="hljs-number">54.0</span>, <span class="hljs-string">"cmd"</span>: <span class="hljs-string">"node=relay&amp;cmd=act&amp;r=dh&amp;s=on"</span>},
		<span class="hljs-string">"off"</span>: {<span class="hljs-string">"cmd"</span>: <span class="hljs-string">"node=relay&amp;cmd=act&amp;r=dh&amp;s=off"</span>},
		<span class="hljs-string">"alert"</span>: {<span class="hljs-string">"op"</span>: <span class="hljs-string">"&gt;="</span>, <span class="hljs-string">"setpoint"</span>: <span class="hljs-number">56.0</span>, <span class="hljs-string">"title"</span>: <span class="hljs-string">"High humidity alert"</span>}
		}],
	<span class="hljs-string">"timers"</span>: [{
		<span class="hljs-string">"enabled"</span>: <span class="hljs-number">0</span>,
		<span class="hljs-string">"task"</span>: <span class="hljs-string">"light"</span>,
		<span class="hljs-string">"value"</span>: <span class="hljs-string">"ts"</span>,
		<span class="hljs-string">"time"</span>: {<span class="hljs-string">"from"</span>: <span class="hljs-string">"18:00"</span>, <span class="hljs-string">"to"</span>: <span class="hljs-string">"06:00"</span>},
		<span class="hljs-string">"on"</span>:  {<span class="hljs-string">"cmd"</span>: <span class="hljs-string">"node=relay&amp;cmd=act&amp;r=light&amp;s=on"</span>},
		<span class="hljs-string">"off"</span>: {<span class="hljs-string">"cmd"</span>: <span class="hljs-string">"node=relay&amp;cmd=act&amp;r=light&amp;s=off"</span>}
		}]</pre><h1>Dashboards</h1><p>Collecting long-term data provides several
benefits for gardeners such as real-time monitoring of the climate
and systems operating the grow room, ongoing analysis of energy
efficiency, tuning growth recipes to improve yields from harvest to
harvest are some of the most common applications. 
</p><p>Being able to 'rewind' time is also invaluable for
troubleshooting purposes: the context provided by the data not only
eliminates guesswork, it enables peer reviews and allows for the
discovery of patterns that could otherwise be difficult to detect.</p><h1>The Mobile
	Interface</h1><p>A mobile interface allows a gardener to monitor or
control the conditions in the garden from a remote location. The
mobile interface is minimalist at the moment but it is sufficient to
cover fundamentals such as SMS alerts and reporting on the current
state of the system on demand. Basic operations such as pausing the
ventilation system are easy to configure because they also rely on
URL-encoded text commands used throughout the project.</p><p>The mobile interface for the release of the
project was pieced together by combining <a href="https://ifttt.com/recipes">IFFF's
“Do Button”</a> application together with <a href="https://www.pushbullet.com/">PushBullet</a>.
Behind the scene, the <i>Notify</i> process discussed above
integrates with the <a href="https://docs.pushbullet.com/">PushBullet
API </a> and handles the communication between the control system and
mobile device(s).</p><p>A dedicated native “Humble Roots” mobile
application is in the works but in the meantime, there's enough
functionality in this simple interface to afford some peace of mind
while away from the garden.</p><h1>Conclusion<br></h1><p><a name="firstHeading"></a>As of June 2015, the
<i>Humble Roots Project </i>has been a living experiment for the past
2.5 years. It has gone through several iterations of hardware and
software, incrementally reducing complexity along the way. 
</p><p>With each iteration of the project, a new crop of
medical cannabis was successfully grown, enabling recipes to be
crafted for the following strains: <i><a href="https://www.leafly.com/indica/white-rhino">White
Rhino</a>, <a href="https://www.leafly.com/hybrid/dr-who">Dr. Who</a>,
<a href="https://www.leafly.com/hybrid/trainwreck">Trainwreck</a>,
<a href="https://www.leafly.com/indica/granddaddy-purple">Grand Daddy
Purple</a></i> and two other <a href="https://www.leafly.com/news/cannabis-101/sativa-indica-and-hybrid-whats-the-difference-between-cannabis-ty">hybrid
</a><a href="https://www.leafly.com/news/cannabis-101/sativa-indica-and-hybrid-whats-the-difference-between-cannabis-ty"><i>Indica</i></a>
strains dubbed <i>Enigma Girls </i>due<i>
</i>to<i> </i>their
unknown origins. This last point is important: modeling plant
growth into recipes works
well and
is repeatable given similar genetics.</p><p>Finally, thanks
to commonly available sensors, some 'home automation' components, and
following simple horticultural best practices, it is possible to
build a well-controlled
indoor garden, ideally
suited for producing high-quality cannabis, sustainably, every time.</p><p>Hopefully,
the <i>Humble Roots Project</i>
will inspire others in the
medical cannabis community to participate in crafting and sharing
recipes for their favorite strains...</p>
        </div>

        

        

    

    <div class="j-modal-confirmation modal-background"></div>
<div class="j-modal-confirmation modal-content-holder">
    <p class="align-center" id="modal-message"></p>
    <p class="align-center"><a class="medium-button gold-gold-button delete-project-button" id="modal-yes" href="">Yes, delete it</a> <a class="medium-button grey-gold-button cancel-button" id="modal-cancel">Cancel</a> </p>
</div>
    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'r6uStBjn-H78RN6mlXgdhbGTR2Qpu_kBLKbw';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_post&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    
    
    
    

    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbpIGEWjpnPaaIvcAHwzCnxb%2FHLKGUM1bvoOeG5HC0xFU9LJ%2B910rZ72abfN8vxNDn41XRsK%2BvNLzydIft0iwmMulI7CjfWKAELKuUfOMCuUWjmKstkIZy4LyUZZqGjubUq7baOpUEVdpT0W01PyzlwivRvc7EDpLluqPEa2JX%2FBw%3D%3D-0.48.6.js"></script>

</body>
</html>