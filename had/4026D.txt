<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en"> <!--<![endif]-->
<head>
    <title>Details &bull; Autonomous Quad Copter &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
        <script type="text/javascript">
        function getCommentIdFromUrl() {
            if(window.location.hash) {
                var hash = window.location.hash.substring(1);
                var commentId = parseInt(hash.replace('j-discussion-', ''));
                if (commentId) {
                    return commentId;
                }
            }
            return null;
        }

        var commentId = getCommentIdFromUrl();
        if (commentId) {
            var url = window.location.href;
            if (url.indexOf('?') > -1) {
                url = url.substring(0, url.indexOf('?'));
            }
            if (url.indexOf('#') > -1) {
                url = url.substring(0, url.indexOf('#'));
            }
            url += '/discussion-' + commentId;
            window.location.href = url;
        }
    </script>
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body>

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fpost%2F13251">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    

        <div class="headline">
            <div class="container">
                

                    

                    <h2>Project Details</h2>
                    <p class="description-title">
                        For <a href="/project/4026">Autonomous Quad Copter</a>
                    </p>
                    <p class="description-summary">Autonomous Quad Copter using GPS, Optical flow sensor, Ultrasonic distance sensor and a Pixy Cam for autonomous flight.</p>
                    <div class="description-metainfo">
                        <span>created by
                            <a href="/hacker/6996-joe" title="Visit Profile">
                                Joe
                            </a>
                            <span>&bull;</span>
                            7 months ago
                        </span>
                    </div>

                

            </div>
        </div>

        <div class="container post-content">
            <h1>Intro</h1><p>At the moment my quad copter fly's under manual control and I'm starting to implement autonomous control. The features I hope to implement are:</p><ul><li>Altitude hold</li><li>Auto take off</li><li>Auto land</li><li>Position hold</li><li>Loiter</li><li>Way point navigation</li></ul><p>My University final year project starts next week so I will posting weekly updates, links to resources that I find useful and videos!</p><hr><h1>Status</h1><p>I designed, built and developed a Quad Rotor including the frame, electronics and flight control software as I thought it would be an interesting challenge and learning exercise. The software is written in C++ and runs on an on-board micro-controller called an mBed. I used the Quad Rotor in my University dissertation, developing semi-autonomous features such as an altitude controlled mode that enables the Quad Rotor to maintain an altitude, follow the contours of the ground and land automatically if the Quad Rotor loses connection with the operator remote.</p><p>I also developed an accompanying Base Station application to receive wireless telemetry data and control the Quad Rotor. This is written in C# using the WPF charting toolkit to display real time data.</p><p>The various parts of this project are covered in more detail below.</p><h2>Electronics</h2><p><img src="https://cdn.hackaday.io/images/3136791435911725666.jpg"></p><p>The Flight Controller electronics consist of a single circuit board containing all the necessary components and peripheral connections to input/output devices. The inputs to the electronics are shown in green, the Flight Controller software, running on an mBed, is shown in red and the outputs are shown in blue. Whilst designing the electronics prototypes a few points were considered. The most important consideration was sensor accuracy as the Quad Rotor is not able to maintain stability unless the attitude and altitude data are reliable. Another consideration was to ensure that all the components could be powered by the 5V DC supply from the battery and that the micro-processor chosen was sufficiently powerful to run the flight control algorithms at 500Hz.</p><p><img src="https://cdn.hackaday.io/images/9525471435911607688.JPG"></p><h2>Software</h2><p><img src="https://cdn.hackaday.io/images/3153381435911737065.jpg"></p><p>The Flight Controller software runs on an mBed micro-processor contained in the Flight Controller electronics. It takes inputs from the sensors, remote control and Base Station application and uses this data to control the speed of the 4 propellers independently. This enables the Flight Controller to control the Quad Rotor and maintain stability during flight.</p><p>The Flight Controller consists of a main class and seven more encapsulated classes which handle the various tasks necessary to maintain stable flight. To enable the classes to communicate with each other dependency injection was used (shown with a dashed line). This is where each dependency class is instantiated before the dependant class and the dependency classes are passed by reference to the dependant class constructor. The dependency classes are passed by reference to ensure that the same object is used by all the dependant classes.</p><p><img src="https://cdn.hackaday.io/images/4601941435911761643.jpg"></p><p>The Flight Controller implements a finite global state machine which makes sure that all the other components of the Flight Controller can only run valid action in the current context of the system. For example the state machine would not allow the motors to spin until the Flight Controller has been initialised, the remote control has been connected and the armed flag has been set to true.</p><p>The state machine contains 6 mutually exclusive states. Green denotes on the ground, orange denotes on the ground but armed, blue denotes flying and red denotes error.</p><p>Pre Flight: the Flight Controller starts up and immediately enters the pre flight state. Initialisation and sensor calibration is only possible in this state.</p><p>Standby: in this state the Flight Controller has been initialised and the remote control connected.</p><p>Ground Ready: in this state the Flight Controller has been armed and is ready for flight.</p><p>Manual: in this state the Flight Controller is flying in manual mode.</p><p>Stabilised: in this state the Flight Controller is flying in altitude hold mode.</p><p>Error: in this state an error has occurred. The motors are disabled for safety</p><h2>Semi – autonomous flight</h2><p><img src="https://cdn.hackaday.io/images/4927221435911791878.jpg"></p><p>To get an accurate estimate of altitude, sensor fusion is used to combine the data from individual sensors such that the resulting data is more dependable than would be possible when these sensors were used individually. Information about each sensor such as its measurement history, specification and current measurement is used to decide how much the data it provides can be trusted. The sensors are divided into two categories, main data sensors and reference data sensors. Main data sensors provide absolute measurements which can be trusted. The Lidar distance sensor would fall under this category. Reference data sensors are used to evaluate the reliability of the main data sensors but they cannot be accurate on their own. The integrated velocity data from the accelerometer would fall under this category. This ensures that any error or deviation in one sensor's readings can be corrected by another sensor's readings</p><p>It was found that using the Lidar distance sensor on its own was not sufficient to estimate altitude because there is a 100ms delay between the altitude changing and the sensor updating. This caused substantial oscillation when holding altitude. The sensor fusion strategy uses a Kalman filter to combine the accelerometer data which reacts quickly but is not accurate and Lidar distance sensor readings which react slowly but are accurate, into one altitude estimate. This is done by using the accelerometer velocity to predict the altitude change and the Lidar distance sensor readings to provide an estimate. The Kalman filter was tuned to react quickly to the accelerometer readings and to trust the Lidar distance sensor readings more over a longer period of time. This resulted in an altitude estimate that reacted quickly to changes in altitude based on the accelerometer readings but was accurate over time due to the Lidar distance sensor readings. Finally the altitude estimate is used to calculate an estimate of velocity. This stops the accelerometer velocity integration errors from accumulating over time.</p><p><img src="https://cdn.hackaday.io/images/7180671435911807674.png"></p><p>This chart demonstrates altitude mode in use and clearly shows the Quad Rotor altitude (light blue) oscillating around the target altitude (dark blue). The throttle (green) can be seen varying as the Flight Controller tries to maintain a constant altitude. This proves that the altitude mode strategy works fairly successfully although it would be improved if the oscillation was reduced. This could be achieved by improving the PID controller tuning and improving the altitude estimation to react more quickly to changes in altitude. The large peaks in altitude at the start of a new target altitude are due to the inertia of the Quad Rotor when it is changing altitude and this takes a little while to get under control. This could be reduced by including a model of inertia within the altitude mode algorithm to account for this.</p><h2>Future work</h2><p>This project can be extended in many different ways by upgrading the hardware or developing new Flight Controller or Base Station application features. The easiest hardware upgrade would be to integrate a GPS sensor to provide another altitude measurement. This would improve the altitude estimation accuracy and precision resulting in an improved altitude mode.</p><p>The altitude estimation could also be improved by developing an Extended Kalman filter to use in place of the Kalman filter. This is because an Extended Kalman filter is designed to work on a non-linear system whereas the Kalman filter is designed to work on a linear system. The Quad Rotor is this project is a non-linear system.</p><p>The autonomous features of the Flight Controller could be improved by implementing a position mode that uses a GPS sensor and Kalman filter to provide position. The position would be used along with commands from the Base Station application to enable the Quad Rotor to maintain a position and navigate between way points.</p>
        </div>

        

        

    

    <div class="j-modal-confirmation modal-background"></div>
<div class="j-modal-confirmation modal-content-holder">
    <p class="align-center" id="modal-message"></p>
    <p class="align-center"><a class="medium-button gold-gold-button delete-project-button" id="modal-yes" href="">Yes, delete it</a> <a class="medium-button grey-gold-button cancel-button" id="modal-cancel">Cancel</a> </p>
</div>
    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'C0jgh8Pn-7Tiv00gVRbppEhu_kkiRn5EeTYE';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_post&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    
    
    
    

    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbpIGEWjpnPaaIvcAHwzCnxb%2FHLKGUM1bvoOeG5HC0xFU9LJ%2B910rZ72abfN8vxNDn41XRsK%2BvNLzydIft0iwmMulI7CjfWKAELKuUfOMCuUWjmKstkIZy4LyUZZqGjubUq7baOpUEVdpT0W01PyzlwivRvc7EDpLluqPEa2JX%2FBw%3D%3D-0.48.6.js"></script>

</body>
</html>