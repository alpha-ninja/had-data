<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; Raspberry Pi Wet Incubator/Sous Vide/Slow Cooker &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F636%2Flogs">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/636-raspberry-pi-wet-incubatorsous-videslow-cooker">Raspberry Pi Wet Incubator/Sous Vide/Slow Cooker</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">A web and locally controlled sous vide and slow cooker, now turned in to a laboratory water bath/DNA PCR cycler.</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/3687-staticdet5" title="Visit Profile">staticdet5</a><span>&bull;</span>
                
                a year ago<span>&bull;</span><a href="/project/636#discussion-list" title="See Comments">2 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/636-raspberry-pi-wet-incubatorsous-videslow-cooker">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/636/logs/sort/newest">Newest</option>
                    <option value="/project/636/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/636/log/20591-fork-this">FORK THIS!</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/636/log/20591#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20591"><p>This project has been on a slow burn for awhile.  Life intrudes.</p><p>Two weeks ago a friend contacted me from overseas, and asked for the whole set-up.  Slow cooker, beat up case, everything.  Their multi-thousand dollar incubator couldn't handle the heat and environmental conditions.  Their lab is fortunate to have a trained microbiologist, someone who is actually able to make real use of this type of equipment. Frequently it's not a matter of having the equipment, you need the skills to use it.  It's even better when you have people that can innovate to the equipment that is there.</p><p>I put a final polish on the code, and shipped it.  My friend gave up his cellphone charger, and wired the crockpot for the local power (I'm worried about this, as I didn't check anything about this.  I know the relay will take it). </p><p>I didn't put the code into a repository.  We're trying to figure out how to remedy this now.  I'm freakin' furious with myself for doing that.  I'm checking my chips, and scouring moving boxes looking for old code.</p><p>OK, a water bath incubator is easy.  Honestly, you set the temp, and keep it there.  The code updates that I did kept a minute by minute log of the average temperature, and archived them for a month.  The users are setting the temp through a command line interface, but I'm betting that the temp is being maintained at 98.6F/37C.  The lab is air conditioned, and supposedly on an emergency generator.  From the sounds of things, the emergency generator is what killed the incubator. The dirty power fried the control system or something.</p><p>The next step is to incorporate a cooling system into the mechanism, in case the air conditioner fails.  Once the cooling loop is incorporated, this project evolves into a DNA PCR machine (A feature request).  <a href="http://www.uvm.edu/~cgep/Education/PCR.html">http://www.uvm.edu/~cgep/Education/PCR.html</a></p><p>PCR stands for Polymerase Chain Reaction.  In layman's terms it is DNA amplification.  In theory, give me a single cell, and I can replicate that DNA.  There is nothing stopping you from taking the 3.6 picograms from a human cell, and replicating it in a machine until it is something you can see with the naked eye.<br>To do this, you have to mix the sample with DNA primers, put it in a machine to heat it and cool it in a controlled fashion.  The goal is to get the DNA to uncoil, meet up with the DNA primers completely, coax it in to reassembling, and then repeat the process.  Quickly.  Every time you repeat the cycle, you double the DNA.</p><p>Now, there are some other cool tricks you can do with this, beyond simple replication, but that's for the guy in the lab to do.  I haven't done this for close to ten years.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/636/log/20604-commits-ds18b20">Commits- DS18B20</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/636/log/20604#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20604"><p>My girlfriend just informed me that she thinks the test board (I had two boards, one in the kitchen, one in my office) is in the garage... somewhere.  We moved, and our garage got filled with other people's crap.  Fortunately we have a work day this weekend to get it organized and labeled for a yard sale.  There should be an old version on there.</p><p>In the meantime, I'm going to talk about some of my design decisions.  First, I'm going to talk about the temperature sensor.</p><p>I'm using the waterproof DS18B20 (from Adafruit <a href="http://www.adafruit.com/products/381?gclid=COPRmeLVycYCFYsWHwodEKYAGA">http://www.adafruit.com/products/381?gclid=COPRmeLVycYCFYsWHwodEKYAGA</a>)  for this project (and probably a bunch of others).  It's a three wire sensor (Vin, Ground, Data) with 9 or 12 bit resolution.  You feed it between 3.0 and 5.0v, and you get back a temperature reading.  The beautiful part is that each sensor has a unique 64-bit ID.  You can run multiple sensors off of the same pin.</p><p>I wrote a quick Python program to watch the Raspberry Pi system, and autodetect all of the DS18B20's connected to the Pi.  The program then asked you how you wanted to treat the thermal probe (Ignore it, treat it is an external probe, or an active probe).  Initially the system was going to have a great PID loop (I'll talk about these later).  I had a fair amount of trouble implementing a true PID system that drove a digital pin (as opposed to a PWM system).<br>Now, I may switch over to a PWM system, if I replace the relays with a FET or SCR or something (You gotta pardon my terminology.  I'm not an electrical engineer).</p><p>I'm using multiple $10 parts for a reason.  The biggest is because I could spend the money, and support Adafruit.  Without them and Sparkfun, I wouldn't have much of a chance of accomplishing this.  Second, I know the parts can be had pretty inexpensively (You can get 5 on Amazon for $7.50.  No idea how water proof they are....).  Third, the initial design didn't have a water circulator.  It was a simple Pi controlled system that turned the power on and off to the slow cooker.  I wanted to have a thermal probe on one side of the vacuum sealed bag, another probe on the other side, and one floating free. </p><p>I also had plans to make this extensible.  There are a huge number of applications for "intelligently" controlled thermal systems.  Being able to measure multiple temps from one board, and log it, would be pretty useful (I'm looking to build a home monitoring project using distributed Pi's).  If I get my act together, I'll write a software library for the sensor, including the autodetect function, so it can spit out temperatures in a variety of formats on demand.<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/636/log/20776-why-pcr">Why PCR?</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/636/log/20776#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20776"><p>So one of the end results of this project is to build what is essentially a water heater and cooler.  What the hell are they going to do with it?</p><p>Amplify DNA, yeah.  Fun.  If you've ever seen DNA, it's not that thrilling.  (I'll give you a hint, you can get the same effect by sneezing after sanding drywall)</p><p>The really cool ingredient here is having the trained microbiologist in the lab, and the lack of insane standards to follow. Don't get me wrong, those standards make sense in many cases, but when your back is against the wall, you're going to find a way to make what you have on hand, work for you.</p><p>My earlier discussion of PCR is the quick and easy method.  Take your DNA sample, mix in some things, and also mix in your primers, the A,T,C,G's that DNA is made of.  Then go through the heating and cooling processes of PCR.  Bingo, DNA amplification.</p><p>So, let's look at the advanced technique.  There exist "DNA Tools" that cut DNA in specific locations.  Dozens, hundreds of different enzymes that only cut specific locations of DNA.  This is the technique that allows gel electrophoresis to work:</p><p><img src="http://media-1.web.britannica.com/eb-media/72/47672-004-4E16B61F.jpg" id="exifviewer-img-1"><img src="http://sd271.k12.id.us/chs/bjones/Intro%20to%20Biotechnology/Graphics/crimal_gel.gif" id="exifviewer-img-2"><br>Cut two samples (or more) up with the exact same set of cutting tools.  Then use a gel electrophoresis rig to "pull" the samples using an electric tension from a sample site, across the gel.  The different sizes/weights of DNA will settle across the gel in distinct bands.  Compare the bands to each other (take a look at the second picture).  If one matches, that's your original sample's identity.</p><p>This takes awhile, and takes some more "stuff".  Instead, lets see what else we can do.</p><p>Take a known sample.  We'll say a known sample of The Dreaded Gombu, lethal creeping crud of NoWhereistan.  Do your special procedure to extract DNA (Bacteria, viruses, etc, all of slightly different methods for extraction), get it in your test tube, and start PCR'ing it.  We want to amplify it.  A lot.<br>Next, we're going to take our special cutting tools, and cut this DNA up.  And then we're just going to leave it.  For a minute.<br>Now we go to our patient sample.  This guy is sick, but we're worried he has The Dreaded Gombu.  If we give him the treatment and he doesn't have it, it'll kill him (a little drama).  We need to be sure.<br>We take our patient sample, extract the DNA from it.  Keep in mind, that we're going to get ALL of the DNA out of it.  The sick guy, all the little critters in him (we have more foreign DNA in our body than you want to think), and our mysterious disease causing agent.  We put that mishmash of DNA into a test tube, along with some of our known, sliced up, Dreaded Gombu. NOW, we PCR the hell out of it.  The PCR reaction is only going to efficiently work with the Dreaded Gombu slices.  If we cycle this thing a bunch of times (each time doubles the reacting DNA, right?), we should see the amount of DNA increasing in the test tube, if there is Dreaded Gombu present.  If not, we're not going to see much changing.</p><p>If you get this technique down, you can achieve more than a qualitative analysis.  You can actually do a quantitative analysis of the DNA (How similar is this to a known sample?).</p><p>The technique itself is amazingly simple, but it takes a skillful hand (and in some cases, is a bit of an art, to really make the technique sing).  The skill of the technician is very important, more important than the tool itself.  For this reason, not having the tool is a stupid stumbling block, when the lab has the skills to use it.<br><br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/636/log/20876-github-code-posted">GitHub code posted</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/636/log/20876#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20876"><p>Finally!</p><p>Packed away in the garage, tucked behind someone else's stuff, was my early office prototype (And I may go back to this one for a couple of reasons).  The code is early, but it worked for cooking.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/636/log/20999-lets-talk-some-code-glob-module">Let&#39;s talk some code:  Glob Module</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/636/log/20999#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20999"><p>Anyone that really knows me, knows that I&apos;m a bit of a spaz.  I like to get in to things, see how things work, how they could fit together, try new things, find trouble, get in to it, run, and learn something new.  HOWEVER, at the core, I&apos;m lazy.  I hate repetitive efforts, duplicate work.</p><p>One of my goals, when I started this project, was to make a system that took care of the &quot;crap&quot; for the user.  I knew I wanted to be able to incorporate multiple thermal sensing elements in the design.  With the selection of the DS18B20 thermometers, I knew I could potentially have an unknowable number of sensors available.  I wanted to set the program up to scan for sensors within the linux file structure (one of the cool aspects of this particular sensor, and the Raspberry Pi).</p><pre class="hljs python">os.<span class="hljs-keyword">system</span>(<span class="hljs-string">&apos;modprobe w1-gpio&apos;</span>)
os.<span class="hljs-keyword">system</span>(<span class="hljs-string">&apos;modprobe w1-therm&apos;</span>)

base_dir = <span class="hljs-string">&apos;/sys/bus/w1/devices/&apos;</span>
thermometers = (<span class="hljs-keyword">glob</span>.<span class="hljs-keyword">glob</span>(base_dir + <span class="hljs-string">&apos;28*&apos;</span>))
<span class="hljs-keyword">print</span>(thermometers) 
</pre><br><p>The code snippet above is how I get the list of DS18B20 thermometers that are attached to the Pi.<br>The first two lines use the  python OS module to initialize the thermometers.</p><p>The &quot;base_dir&quot; variable contains the directory where the thermometers &quot;live&quot;.  Checking the &quot;contents&quot; of the thermometers is how we read the temperature.  The cool thing about this is that the thermometers and the Pi update the &quot;contents&quot; with temperature data.  We just need to check the files occasionally.</p><p>The next line uses the Glob module to find all of the items in the &quot;base_dir&quot; location that start with &quot;28&quot;, what our thermometers identifiers start with.  We don&apos;t really care what the identifiers are, or how many of them there are.  All Glob does (in this instance) is return everything that meets the criteria (Criteria being:  In the directory, &quot;base_dir&quot;; and starting with &quot;28&quot;).  In the past, I would have written some PITA code that would have iterated over things within the directory, with manual checks written to make sure the code didn&apos;t get confused halfway through a string. </p><p>Python&apos;s great, but sometimes it&apos;s a bit tough knowing about all the great modules out there.... (hint: awesome site: <a target="_blank" href="http://pymotw.com/2/glob/">Python Module of the Week: Glob</a>)<br></p><p>The &quot;print(thermometers)&quot; line is simply a program check, to make sure things are working.</p><p>Four to Five lines of code to check what DS18B20&apos;s are hooked up.  The next thing I need to do is also play back what temperatures the thermometers are currently reading.  This could help distinguish thermometers, making assignments easier.  This will keep the user from having to dig into the Pi&apos;s file structure, write down detected devices, and then manually alter a configuration file.  This should automate that process completely.<br></p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/636/log/21046-ds18b20-library">DS18B20 Library</a></h2>
                            <small class="authorship">a month ago  &bull;
                                <a class="gray-link" href="/project/636/log/21046#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-21046"><p>Last night&apos;s documentation made me realize that I&apos;d been going about this wrong (bummer, the unit in the field doesn&apos;t have this).  I had some pretty low level hardware-centric code in the program, instead of breaking it out into a module of its own.  A quick re-write today, and the DS18B20 library exists (albeit in a primitive form, for now).</p><p>The new system is two parts, really: DS18B20.py and temptest.py.  The meat is in DS18B20, which contains everything to initialize, discover the thermometers connected to the board, and give out a temperature (in Centigrade.  Fahrenheit is on the to-do list).  The temptest.py program simply verifies that the thermometers can be initialized, discovered, and all temps can be displayed.</p><p>This is going to speed up deployment, as the project itself is forking.  We&apos;re basically going to be making two devices at this point.  First, we&apos;re going to polish the wet incubator (test tube hot water bath), before we add on a cooling system to enable the PCR machine.  Second (probably at the same time) we&apos;re going to finish making the Sous Vide.  I like a gourmet steak.</p></div>
                            </div>
                        </li>
                    
                </ul>

                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'klmVcVTz-mOHjlyGVTrrRH4HOWo5-qGOMA3A';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>