<!doctype html>
<!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js lt-ie9 lt-ie8" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if IE 9]>    <html class="no-js ie9" lang="en"> <![endif]-->
<!--[if gt IE 9]><!--> <html class="no-js" lang="en" ng-app="buildlogApp"> <!--<![endif]-->
<head>
    
    <title>Project logs &bull; Access B &bull; Hackaday.io</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="stylesheet" href="//cdn.hackaday.io/css/style.css?version=0.48.6" />
    <script type="text/javascript" src="//use.typekit.net/ymb0lgk.js"></script>
    <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>
<body class="logs">

    <!--
############################################################################################
############################################################################################
############################################################################################
#####################Kt;tL#######################################Kti,E######################
#######################;   .###################################G    E#######################
#######################K    f##################################    ;########################
########################Wj   E###############################K:  .W#########################
##########################.  :E##############################:  .L##########################
#########################D    f##############################.   .##########################
########################,     ;##############################     :E#######K################
################f######K      ,##############################      ,######Lt################
################  W###W       i##############################       t####j t################
################:  E#L.        f###########################L.        f#Ki .E################
################j  ;E.          j##########################.         .G;  i#################
#################L               i#######################K                ##################
#################W                E#####################K;               ;##################
###################:               .###################D               :f###################
#####################DLfGD           G####WEEEEKW####W           ;GffGK#####################
##########################i         iD##Kfi    :jKW##D          iE##########################
###########################W      ,G##f            jE#E;       j############################
############################L     D##D              ,##K       W############################
#############################D:  G#W                  K#E,   G##############################
###############################;i#L                    j## ,E###############################
###############################KK#.                     ##iE################################
#################################j                      ;K##################################
################################W                        ,##################################
################################E                         ##################################
###############################Ki                         D#################################
###############################E.                         L#################################
###############################f    iD##W;       D###D    :#################################
###############################i   i######K     K#####K;   #################################
###############################;  .E#######     #######D   #################################
###############################;  L########     ########   #################################
###############################i  G#######K     K#######   #################################
###############################j  L#####E,       fE#####   #################################
###############################D  .E##j            .t##E  ;#################################
###############################E:  ;##.              #Wt  j#################################
################################G   ;t      tWi      t    E#################################
#############################KL##           K#K;          #K:K##############################
#############################i ##:          ###t         j#f ;K#############################
############################:  G#K          #E#L        L##    D############################
###########################D   ;W#:         #;#L        W#K    .############################
#####################KKEKK      :##L        ; ..      :D##.      fKEEK######################
###################t.            ;##G:               ,##E,             tD###################
##################G               E##E               i##;               :###################
#################D                W##W    iL    E.    ###D                ##################
################W,               G###W    tG    K.    ####:               K#################
################;  LW;         ,E#####:  ;W#    #G   f#####;         ;KG  :K################
################  D###E       ;########WW####WW####WW#######W       :####: j################
################ ,#####:      ;##############################       G####E i################
################K#######.     ;##############################      L######WG################
########################f     i##############################     j#########################
#########################W   .D##############################.   i##########################
#########################E   G###############################D   ,##########################
########################G:   #################################j   G#########################
#######################f    K##################################j    W#######################
#####################Kt :iE#####################################KL:  K######################
############################################################################################
############################################################################################
############################################################################################
-->

<div class="header" id="header">
    <div class="container">
        <h1 class="logo">
            <a href="/" title="Hackaday.io Home" class="home" onclick="CT(this, 'Menu', 'Home'); return false;"></a>
            <a href="/" title="Hackaday.io Home" class="brand" onclick="CT(this, 'Menu', 'Home'); return false;">Hack a Day</a>
        </h1>

        <a href="javascript:void(0);" class="responsive-menu">Menu</a>

        <ul class="nav" role="navigation">
            <li><a href="/projects" class="">Projects</a></li>
            <li><a href="/lists" class="">Lists</a></li>
            <li><a href="/stack" class="">Stack</a></li>
            <li class="dropdown more-nav j-more-open">
                <a href="javascript:void(0)" class="dropdown-link icon-dropdown">More</a>
                <ul role="menu" class="dropdown-menu more-menu" id="j-more">
                    <li><a href="http://hackaday.com/blog/" target="_blank">Blog</a></li>
                    <li><a href="/events">Events</a></li>
                    <li><a href="/hackerspaces">Hackerspaces</a></li>
                    <li><a href="/hackers">Profiles</a></li>
                    <li><a href="/contests">Contests</a></li>
                    <li><a href="/prize" target="_blank">The Hackaday Prize</a></li>
                    <li><a href="/submissions/prize2015/list">2015 Prize Entries</a></li>
                </ul>
            </li>
            <li class="menu-last-child">
                <div class="search-holder show">
                    <form id="search-form" action="/search" onsubmit="return submitSearch();" method="GET">
                        <input type="text" placeholder="Search" name="term" class="input-search j-add-search" id="j-add-search" value="" autocomplete="off" pattern=".{3,}" required title="3 characters minimum" />
                        <input type="submit" class="search-button" />
                    </form>
                </div>
            </li>
        </ul>

        

            <ul class="nav pull-right" role="navigation">
                <li><a href="/signup" class="grey-white-button become-member">Sign up</a></li>
                <li><a href="/signin?returnUrl=%2Fproject%2F4091%2Flogs">Sign in</a></li>
            </ul>

        
    </div>
</div>

<div id="topMessage" class="alert"><span class="j-top-content"></span><a href="javascript:void(0);" class="alert-close j-top-message-close">Close</a></div>




    <div class="headline">
        <div class="container">
            <h2><a href="/project/4091-access-b">Access B</a></h2>
            <p class="description-title"> Project logs</p>
            <p class="description-summary">Create applications in Visual Studio C# that can communicate with a 18F2550 and use it&#39;s peripherals</p>
            <div class="description-metainfo">
                
                    <span>created by <a href="/hacker/43330-omar" title="Visit Profile">Omar</a><span>&bull;</span>
                
                7 months ago<span>&bull;</span><a href="/project/4091#discussion-list" title="See Comments">2 Comments</a></span>
            </div>
        </div>
    </div>

    <div class="container post-content">
        <div class="section-buildsort">
            <span class="pull-left">
                <a href="/project/4091-access-b">&#171; Back to project details</a>
            </span>
            <span class="sort-holder pull-right">
                <label for="sort-by">Sort by:</label>
                <select class="sort" id="sort-by">
                    <option value="/project/4091/logs/sort/newest">Newest</option>
                    <option value="/project/4091/logs/sort/oldest" selected="selected">Oldest</option>
                </select>
            </span>
        </div>
        <div class="section section-buildlogs last">
            

                <ul class="buillogs-list">
                    
                        <li>
                            <h2><a href="/project/4091/log/13387-first-steps">First steps</a></h2>
                            <small class="authorship">7 months ago  &bull;
                                <a class="gray-link" href="/project/4091/log/13387#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-13387"><p>Well this seems a little empty for now, in the next days (or weeks) I will upload the firmware and the class files so you can look what I have done, is ongoing project so it will need to improve some things, well you will understand when you look the code.<span></span></p><p>NOTE:</p><p>I will update from my work, I don't have internet on home that is the reason of why I can take me weeks to update sorry.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4091/log/13722-little-update">Little update</a></h2>
                            <small class="authorship">6 months ago  &bull;
                                <a class="gray-link" href="/project/4091/log/13722#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-13722"><p>Well I added some project details is small but I have enought time... I hope tomorrow I can upload the Firmware and the visual studio project.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4091/log/14515-files">Files</a></h2>
                            <small class="authorship">6 months ago  &bull;
                                <a class="gray-link" href="/project/4091/log/14515#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-14515"><p>Hi to all, I add links to project files of MPLABX and visual studio 2012, the C# program is made for test I2C communications, it is a mess because is for test purpose but it work.</p><p>Now I was thinking that the use of capture and compare modules may be have problems, those modules are for precise timming and with USB communications the precisition would be reduced, think about it, if you want to measure the time of some event capture module can be used, so you must sync the begin of that event with the habilitation of capture module, if we consider that the event would be started by the AccesssB we need send a command to start the event (start a timmer, set or clear a I/O pint, etc.) and then send another command for start the capture module that are the TX of two frames of 64 bytes plus the command process time in the PIC and the PC so if the event end before we can start the capture module then we never can measure the correct time, and if the event is started by another uC we need to monitor the start of the event with sequential readings of PORT registers to start the capture module when the event begin between 64 bytes frames the precistion is reduced.</p><p>The only solution I can think is implement a method that can take ASM code for the PIC and write to a empty program memory, so anyone can make his/her spesific function and write to the PIC and then execute that function whenever is needed, so the presition will be better.</p><p>I know that the PIC can give to the user access to program memory flash, but I need to read more about it and see if my idea can be done, so that will be the last think to do in my list.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4091/log/14516-eagle-files">Eagle files</a></h2>
                            <small class="authorship">6 months ago  &bull;
                                <a class="gray-link" href="/project/4091/log/14516#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-14516"><p>Well, I hope tomorrow can upload the eagle files and a BOM.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4091/log/15434-some-updates">some updates</a></h2>
                            <small class="authorship">5 months ago  &bull;
                                <a class="gray-link" href="/project/4091/log/15434#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-15434"><p>Hi to all, well I decided to change some thing in C# code, using methods like:</p><pre class="hljs cs">AccessB.Regvalue(address, <span class="hljs-keyword">value</span>)</pre><p>Was Ok at the begining, but I decided to change simply to this:</p><pre>AccessB.TRISA = 0xFF;
AccessB.TRISAbits_TRISA0 = 1;
PORTAValue = AccessB.PORTA;
PORTA_RA0 = AccessB.PORTAbits_RA0;</pre>That is more direct and easy to use, also all the module enable functions will be removed from the PIC firmware, because enabling/disabling is only set or clear bits and that can be done from C# code using the methods to access bit registers. Soon I will upload the files with the updates.</div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4091/log/19216-after-all">After all...</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/4091/log/19216#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19216"><p>Hi to all..</p><p>Well after thinking a lot I see that are some thing that can't be done in the AccessB like:</p><ul><li>Exact timming control, so applications that use capture or compare modules will can't work properly, but all the configuration word for capture and compare and access to SFR and bits can be done.</li><li>The hardware part of the project is only to serve as pin control, data adcquisition, serial bus communications, etc. the data will be always be processed by the software, so save data in GPR isn't necessary then access to GPR isn't implemented.</li><li>The hardware always work with a Host connected and the Host give the power source to the board, so there isn't necessary to save data in the EEPROM, the project isn't planned to work as a stand alone module.</li></ul><p>All the firmware in the PIC uses about 50% of the program memory and that 50% is almost all the functions that I will program, there are two functions that I want to program in the firmware and software class but it will take more time:</p><ul><li>JTAG</li><li>User Defined Functions (UDF): well almost 50% of the program memory will be unused so I want to give the software and firmware the ability to program itself like a bootloader and the firmware can execute that code like a extra function, so the user can make his own firmware function in MPLABX XC8 (that is free to use both) and program in the unused program memory space using an application, and with the class the user can call that function, so in that case the user can have more timming control and it can use capture an compare modules, use the EEPROM or process data inside the PIC.</li></ul></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4091/log/19878-update">Update</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/4091/log/19878#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19878"><p>Hi, after a long time I update the project:</p><ul><li>New class files.</li><li>New MPLABX project</li><li>ADC, SPI, LED demo, the SPI demo was made to use the MCP3021 ADC from mcirochip</li><li>Debug project, well really isn't a debug itself, is an application that have an space to retrieve 10 SFR values selected from combo box and a space to make your own test application.</li></ul><p>All the methods are xml documented, so while you type the method data about it will apear. GPIO, ADC, SPI, I2C, PWM and analog comparator was tested and work OK, USART Synchronous and Asynchronous are tested to work (using logic analyzer) but I need to test with something that can reply I will do some code and a 16F628 to test USART, Voltage reference module isn't tested but today will do that.</p><p>Finishing with USART I will start with JTAG and the UDF (User Defined Functions) that I mentioned the last log.</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4091/log/19997-voltage-reference-module-update">Voltage reference module update</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/4091/log/19997#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19997"><p>Hi!, today I update the class files and the MPLABX project, these includes an update to use the voltage reference module of the PIC, now you can have a reference from 0 to 75% of VDD or ony other Vref voltage (below VDD) that can be used for Analog comparator module or simply out that voltage on one pin of the PIC.</p><p>Also I uploaded a link to the HEX file (The file is inside the files of the MPLAB project but I want to put a link direct to the file).</p><p>Now I need to work to improve the EUSART code, I need do some code in a 16F628 to test the EUSART in Async and Sync modes.</p><p>The demos (LED, SPI, ADC) and the Debug App, uses the previous version of the class files dated from Jun/22/2015, the class files in that demos and Debug don't have the update of the Voltage reference module (well... yes it has but not improved like version Jun/25/2015).</p></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4091/log/19998-todo-list">TODO list</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/4091/log/19998#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-19998"><p>These are the trhee point that I need to do so I can determine that my project is al least finished.</p><ul><li>Improve C# class methods and firmware on EUSART module.</li><li>Implement GPIO methods to control I/O inestead of writting/reading to TRISx, PORTx, LATx registers, so it will be more intuitive to use GPIO if you don't have experience with microchip PIC products.</li><li>Implement <a href="https://hackaday.io/project/4091-access-b/log/19216-after-all">UDF</a> (Used Defined Functions) , I need make the PIC program itself and to execute the function programmed.</li><li>Learn how JTAG work and implement it on the PIC, I have a Basys FPGA that I want to program but is only JTAG with LPT, it will be a good target practice.</li></ul></div>
                            </div>
                        </li>
                    
                        <li>
                            <h2><a href="/project/4091/log/20052-google-drive-links-solved">Google Drive links solved!</a></h2>
                            <small class="authorship">2 months ago  &bull;
                                <a class="gray-link" href="/project/4091/log/20052#discussion-list">
                                    0 comments
                                </a>
                                </small>
                            <div style="position:relative">
                                <div id="post-body-20052"><p>Hi!, today my wife tell me that download links of the project on google drive ask for permission, also I cheked my gmail account and I have some E-mails telling me that some users want permission to the files.</p><p>Well is all my fault sorry :S , I forget to give free access permissions to the files... I solved that and give free access, so now you can download the files without ask for permission, if some of you still has problems downloading the files, please tell me, but anyway I will move the files to GitHub in the next days.</p></div>
                            </div>
                        </li>
                    
                </ul>

                
                <div class="pagination">
                    
                    
                    <a href="?page=2" class="grey-gold-button next-button show">Next</a>
                    
                </div>
                

                

                </p>

            
        </div>
    </div>

    










<div class="footer" id="footer">
  <a href="#header" class="back-to-top" onClick="CT(this, 'Footer', 'GoingUp');">^ Going up? ^</a>
    <div class="container">
        <p><a href="http://hackaday.com/about/">About Us</a> <a href="mailto:projects-contact@hackaday.com">Contact Us</a> <a href="/project/37">Give Feedback</a>&copy; 2015 Hackaday <a href="/tos">Terms of Use</a> <a href="/privacy-policy">Privacy Policy</a></p>
        <a href="/" class="had-skull"  onClick="CT(this, 'Footer', 'Home' ); return false;">Hackaday.io</a>
    </div>
</div>

<script>

    var csrftoken = 'JkhpFwew-Ai1SnXq0h6Jh-RHFCmIWViwBr5s';

</script>

    <script type="text/javascript">

    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-47229708-1', 'auto');

    var dimensionValue = 'nonregistered';
    ga('set', 'dimension1', dimensionValue);
    ga('require', 'displayfeatures');

    ga('send', 'pageview');

    </script>

<img src="//analytics.supplyframe.com/trackingservlet/impression?action=pageImpression&amp;zone=HIO_logs&amp;extra=logged%3Dfalse%7ChaveAccountCookie%3D0%7C&amp;ab=undefined" class="sf-impression" />

    
    
    <script src="//cdn.hackaday.io/build/h%2FydgsYIeDTf7pqgYQEKK8Ngblw0IkZCDqfJ9S2tk7zsBoxIHt5iOd49Qp%2BF4vdxEuRj%2BGpGDLbX4aGOQGmbjaOxUZvklg4ReFk68R95OQshFrGKebvogKGQOiB5Hi1xym9KC54c9Ps0WpzuNydLk4B%2FbKi91KhV40Uxhl38XXb1IVAxAI8iW%2BoQUPCFkHVWZxD0B%2BMZ%2BuEXJTlWuBmopNMxTHRK5yleITPZODT6evbVRQc6AXs9w2Pfk7FS2nKy-0.48.6.js"></script>

</body>
</html>